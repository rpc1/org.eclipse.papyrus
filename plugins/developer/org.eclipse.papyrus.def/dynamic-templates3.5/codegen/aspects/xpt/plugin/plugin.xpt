/*
 * Copyright (c) 2007, 2009 Borland Software Corporation

 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 * Thibault Landre (Atos Origin) - initial API and implementation
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»
«IMPORT 'http://www.eclipse.org/papyrus/2009/papyrusgmfgenextension'»
«EXTENSION xpt::diagram::Utils»
«EXTENSION xpt::GenEditorGenerator»

«EXTENSION xpt::preferences::PrefsConstant»
«EXTENSION xpt::editor::palette::Utils»

«DEFINE category FOR gmfgen::GenDiagram»«getDiagramPreferencePageCategory()».«editorGen.modelID»«ENDDEFINE»



«AROUND plugin FOR gmfgen::GenPlugin-»
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
«EXPAND xpt::Common::xcopyright FOR editorGen-»
<plugin>
«REM»YT (not used): «EXPAND fileTypes-»«ENDREM»
«REM»YT (not used): «EXPAND extension_parser-»«ENDREM»
«EXPAND xpt::editor::extensions::extensions FOR editorGen-»
«REM» global actions handled in the diagram.common plugin
«EXPAND xpt::plugin::plugin::menu-»«ENDREM»
«EXPAND xpt::plugin::plugin::validation FOR editorGen.diagram-»
«EXPAND xpt::plugin::plugin::metrics FOR editorGen.metrics-»
«REM»RS: redefine palette generation«ENDREM»
«EXPAND palettePredefinedEntries FOR editorGen-»
«EXPAND paletteEntries FOR editorGen-»
«EXPAND xpt::diagram::preferences::extensions::extensions FOR editorGen.diagram-»
«EXPAND xpt::propsheet::extensions::extensions FOR editorGen.propertySheet-»
«EXPAND preferencePages FOR editorGen.diagram-»
«EXPAND preferencePageInitializer FOR editorGen.diagram-»
«EXPAND xpt::providers::extensions::extensions FOR editorGen.diagram-»
«EXPAND xpt::navigator::extensions::extensions FOR editorGen.navigator-»
«EXPAND xpt::application::extensions::extensions FOR editorGen.application-»
«EXPAND xpt::ConstraintProviders::extensions FOR editorGen-»
«EXPAND xpt::diagram::updater::extensions::extensions FOR editorGen.diagramUpdater-»
«EXPAND impl::actions::extensions::Main FOR editorGen-»
«EXPAND xpt::plugin::plugin::additions-»
«EXPAND xpt::plugin::plugin::notationTypesMap FOR editorGen»
</plugin>
«ENDAROUND»

«DEFINE fileTypes FOR gmfgen::GenPlugin»
   <extension point="org.eclipse.team.core.fileTypes" id="repo-ftype">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <fileTypes type="text" extension="«editorGen.diagramFileExtension»"/>
   </extension>
«ENDDEFINE»

«DEFINE extension_parser FOR gmfgen::GenPlugin»
   <extension point="org.eclipse.emf.ecore.extension_parser" id="resource-factory">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <parser
         type="«editorGen.diagramFileExtension»"
         class="org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory">
      </parser>
   </extension>
«ENDDEFINE»

«DEFINE menu FOR gmfgen::GenPlugin»
   <extension point="org.eclipse.gmf.runtime.common.ui.services.action.globalActionHandlerProviders" id="global-actions">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <GlobalActionHandlerProvider
         class="org.eclipse.papyrus.uml.diagram.common.providers.PapyrusGlobalActionHandlerProvider"
         id="«editorGen.modelID»Presentation">
         <Priority name="Highest"/>
         <ViewId id="org.eclipse.papyrus.infra.core.papyrusEditor">
            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
               <GlobalActionId actionId="delete"/>
            </ElementType>
            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart">
               <GlobalActionId actionId="save"/>
            </ElementType>
         </ViewId>
      </GlobalActionHandlerProvider>
«IF printingEnabled-»
      <GlobalActionHandlerProvider
         class="org.eclipse.gmf.runtime.diagram.ui.printing.render.providers.DiagramWithPrintGlobalActionHandlerProvider"
         id="«editorGen.modelID»PresentationPrint">
         <Priority name="Low"/>
         <ViewId id="org.eclipse.papyrus.infra.core.papyrusEditor">
            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
               <GlobalActionId actionId="print"/>
            </ElementType>
         </ViewId>
      </GlobalActionHandlerProvider>
«ENDIF-»
«IF null = editorGen.application-»
      <GlobalActionHandlerProvider
         class="org.eclipse.gmf.runtime.diagram.ui.providers.ide.providers.DiagramIDEGlobalActionHandlerProvider"
         id="«editorGen.modelID»PresentationIDE">
         <Priority name="Low"/>
         <ViewId id="org.eclipse.papyrus.infra.core.papyrusEditor">
            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
               <GlobalActionId actionId="bookmark"/>
            </ElementType>
         </ViewId>
      </GlobalActionHandlerProvider>
«ENDIF-»
      <GlobalActionHandlerProvider
            class="org.eclipse.papyrus.uml.diagram.common.providers.PapyrusGlobalActionHandlerProvider"
            id="«editorGen.modelID»Render">
         <Priority name="Highest"/>
         <ViewId id="org.eclipse.papyrus.infra.core.papyrusEditor">
            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
               <GlobalActionId actionId="cut"/>
               <GlobalActionId actionId="copy"/>
               <GlobalActionId actionId="paste"/>
            </ElementType>
         </ViewId>
      </GlobalActionHandlerProvider>
   </extension>

«ENDDEFINE»

«DEFINE metrics FOR gmfgen::GenMetricContainer-»
«IF metrics->size() > 0»
   <extension id="metrics-view" point="org.eclipse.ui.views">
      «EXPAND xpt::Common::xmlGeneratedTag»
   	  <view class="«editorGen.diagram.getMetricProviderQualifiedClassName()»$ResultView"
			id="«editorGen.diagram.getMetricViewID()»"
			name="«editorGen.modelID» Diagram Metrics"/>
   </extension>
«ENDIF-»
«ENDDEFINE»

«DEFINE validation FOR gmfgen::GenDiagram-»
«IF validationEnabled or hasAudits(editorGen)-»
«IF null = editorGen.application-»

   <extension point="org.eclipse.gmf.runtime.common.ui.services.markerNavigationProviders" id="markers-navigation">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <MarkerNavigationProvider class="«getMarkerNavigationProviderQualifiedClassName()»">
         <MarkerType name="«editorGen.plugin.iD + '.' + getValidationDiagnosticMarkerType()»"/>
         <Priority name="«markerNavigationProviderPriority»"/>
      </MarkerNavigationProvider>
   </extension>

   <extension id="«getValidationDiagnosticMarkerType()»" name="«editorGen.plugin.name» problems" point="org.eclipse.core.resources.markers">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.gmf.runtime.common.ui.services.marker"/>
      <persistent value="true"/>
   </extension>   
«ENDIF-»
«IF validationDecorators-»

   <extension id="validationDecoratorProvider" name="ValidationDecorations" point="org.eclipse.gmf.runtime.diagram.ui.decoratorProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <decoratorProvider class="«getValidationDecoratorProviderQualifiedClassName()»">
         <Priority name="«validationDecoratorProviderPriority»"/>
         <object class="org.eclipse.gmf.runtime.diagram.ui.editparts.IPrimaryEditPart(org.eclipse.gmf.runtime.diagram.ui)" id="PRIMARY_VIEW"/>
         <context decoratorTargets="PRIMARY_VIEW"/>
      </decoratorProvider>
   </extension>
«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenPlugin»«ENDDEFINE»

«DEFINE preferencePageInitializer FOR gmfgen::GenDiagram»
	<extension point="org.eclipse.core.runtime.preferences">
		«EXPAND xpt::Common::xmlGeneratedTag»
		<initializer class="«preferencesPackageName».DiagramPreferenceInitializer"/>
	</extension>
«ENDDEFINE»

«DEFINE preferencePages FOR gmfgen::GenDiagram»
«REM»Generate Diagram Preference Page«ENDREM»
«EXPAND xpt::Common::xmlGeneratedTag»
<extension point="org.eclipse.ui.preferencePages">

«REM»Generate Nodes Preference Pages«ENDREM»
«FOREACH getAllNodes().elementType.displayName->asSet() AS node  -»
		«EXPAND preferencePageNodeExtension(self) FOR node-»
«ENDFOREACH»
«REM»Generate Links Preference Pages«ENDREM»
«FOREACH links.elementType.displayName->asSet()  AS link -»
		«EXPAND preferencePageLinkExtension(self) FOR link-»
«ENDFOREACH»
</extension>
«ENDDEFINE»

«DEFINE preferencePageNodeExtension(gmfgen::GenDiagram diagram) FOR String-»
«IF 'UNDEFINED' <> self.toUpper()»
	«EXPAND xpt::Common::xmlGeneratedTag»
	<page  	category="«EXPAND category FOR diagram»"
			class="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            id="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            name="«self» Node" />
«ENDIF»	
«ENDDEFINE»
«DEFINE preferencePageLinkExtension(gmfgen::GenDiagram diagram) FOR String-»

«IF 'UNDEFINED' <>  self.toUpper()»
	«EXPAND xpt::Common::xmlGeneratedTag»
	<page  	category="«EXPAND category FOR diagram»"
			class="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            id="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            name="«self» Link" />
«ENDIF»		
«ENDDEFINE»
«DEFINE preferencePageExtension(gmfgen::GenDiagram diagram) FOR gmfgen::GenLink-»
«IF "UNDEFINED" <> self.elementType.displayName.toUpper()»
	«EXPAND xpt::Common::xmlGeneratedTag»
	<page  	category="«EXPAND category FOR diagram»"
			class="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            id="«diagram.preferencesPackageName».«self»«getPreferencePageSuffix()»"
            name="«self.elementType.displayName» Link" />
«ENDIF»		
«ENDDEFINE»

«REM»RS: redefine palette generation, using predefined entries«ENDREM»
«DEFINE palettePredefinedEntries FOR gmfgen::GenEditorGenerator»
	«EXPAND xpt::Common::xmlGeneratedTag»
	<extension
		id="«plugin.name».palettedefinition"
		name="«plugin.name» Predefined Entries"
		point="org.eclipse.gmf.runtime.diagram.ui.paletteProviders"> 
		
		«EXPAND xpt::Common::xmlGeneratedTag»	
		<paletteProvider class="org.eclipse.gmf.runtime.diagram.ui.providers.DefaultPaletteProvider">
			<Priority name="Lowest"/>
      		<contribution
            	factoryClass="«self.diagram.palette.packageName».«self.diagram.palette.factoryClassName»">
     			<predefinedEntry id="standardGroup/noteStack/noteTool" remove="true"/> 
				<predefinedEntry id="standardGroup/noteStack/textTool" remove="true"/> 
				<predefinedEntry id="standardGroup/noteStack/noteattachmentTool" remove="true"/>
				«EXPAND predefinedEntryDefinition FOREACH collectTools(diagram.palette)»
			</contribution>
		</paletteProvider>	
			
	</extension>
«ENDDEFINE»

«DEFINE predefinedEntryDefinition  FOR gmfgen::AbstractToolEntry-»
	<entry
       defineOnly="true"
       description="«self.description»"
       id=«IF id.isQuoted('\"')»«id»«ELSE»"«id»"«ENDIF»
       kind="tool"
       label="«self.title»"
       large_icon="«largeIconPath»"
       path=""
       small_icon="«smallIconPath»">
 	</entry>
«ENDDEFINE»

«REM»RS: redefine palette generation, using predefined entries«ENDREM»
«DEFINE paletteEntries FOR gmfgen::GenEditorGenerator»
	«EXPAND xpt::Common::xmlGeneratedTag»
	<extension
		id="«plugin.name».standard"
		name="«plugin.name» Standard Palette"
		point="org.eclipse.gmf.runtime.diagram.ui.paletteProviders"> 
		
		«EXPAND xpt::Common::xmlGeneratedTag»	
		<paletteProvider class="org.eclipse.gmf.runtime.diagram.ui.providers.DefaultPaletteProvider">
			<Priority name="Low"/>
      		<contribution
            	factoryClass="«self.diagram.palette.packageName».«self.diagram.palette.factoryClassName»">
     			<predefinedEntry id="standardGroup/noteStack/noteTool" remove="true"/> 
				<predefinedEntry id="standardGroup/noteStack/textTool" remove="true"/> 
				<predefinedEntry id="standardGroup/noteStack/noteattachmentTool" remove="true"/>
				«EXPAND groupUsage FOREACH collectGroups(diagram.palette)»
			</contribution>
			<editor id="«plugin.iD»"/>
		</paletteProvider>	
			
	</extension>
«ENDDEFINE»

«DEFINE groupUsage FOR gmfgen::ToolGroup-»
	<entry
       description="«self.description»"
       id=«IF id.isQuoted('\"')»«id»«ELSE»"«id»"«ENDIF»
       kind="drawer"
       label="«self.title»"
       large_icon="«largeIconPath»"
       path="/"
       small_icon="«smallIconPath»">
       <expand
              force="true">
       </expand>
 	</entry>
 	«REM» TODO: call sub entries...«ENDREM» 
 	«EXPAND toolUsage(self) FOREACH self.entries»
«ENDDEFINE»

«DEFINE toolUsage (gmfgen::ToolGroup group)  FOR gmfgen::ToolEntry-»
 	<predefinedEntry
          id=«IF id.isQuoted('\"')»«id»«ELSE»"«id»"«ENDIF»
          path="«group.id.getToolPath()»">
    </predefinedEntry>
«ENDDEFINE»

«DEFINE notationTypesMap FOR gmfgen::GenEditorGenerator»
	<extension point="org.eclipse.papyrus.infra.gmfdiag.common.notationTypesMapping">
		<diagramMappings diagramID="«modelID»">
			<mapping type="«modelID»" humanReadableType="«modelID.replaceAll('Papyrus|UML|Diagram', '')»Diagram"/>
			«EXPAND compartmentToTypeMap FOREACH diagram.compartments»
			«EXPAND linksToTypeMap FOREACH diagram.links»
		</diagramMappings>
	</extension>
«ENDDEFINE»

«DEFINE linksToTypeMap FOR gmfgen::GenLink»
	«EXPAND linkLabelToTypeMap FOREACH labels»
«ENDDEFINE»

«DEFINE linkLabelToTypeMap FOR gmfgen::GenLinkLabel»«IF papyrusgmfgenextension::LabelVisibilityPreference.allInstances()->exists(linkLabels->includes(self))»
	<mapping
		humanReadableType="«papyrusgmfgenextension::LabelVisibilityPreference.allInstances()->select(label : papyrusgmfgenextension::LabelVisibilityPreference | label.linkLabels->includes(self))->asSequence()->first().role»"
		type="«visualID»">
	</mapping>
«ENDIF»«ENDDEFINE»

«DEFINE compartmentToTypeMap FOR gmfgen::GenCompartment»
	<mapping
		humanReadableType="«title.replaceAll('Compartment', '')»"
		type="«visualID»">
	</mapping>
«ENDDEFINE»








