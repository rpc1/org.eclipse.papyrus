/*
* generated by Xtext
*/
grammar InternalVSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.papyrus.marte.vsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.marte.vsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.marte.vsl.services.VSLGrammarAccess;

}

@parser::members {
 
 	private VSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(VSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getExpAssignment()); }
(rule__Expression__ExpAssignment)
{ after(grammarAccess.getExpressionAccess().getExpAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndOrXorExpression
entryRuleAndOrXorExpression 
:
{ before(grammarAccess.getAndOrXorExpressionRule()); }
	 ruleAndOrXorExpression
{ after(grammarAccess.getAndOrXorExpressionRule()); } 
	 EOF 
;

// Rule AndOrXorExpression
ruleAndOrXorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getGroup()); }
(rule__AndOrXorExpression__Group__0)
{ after(grammarAccess.getAndOrXorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueSpecification
entryRuleValueSpecification 
:
{ before(grammarAccess.getValueSpecificationRule()); }
	 ruleValueSpecification
{ after(grammarAccess.getValueSpecificationRule()); } 
	 EOF 
;

// Rule ValueSpecification
ruleValueSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueSpecificationAccess().getAlternatives()); }
(rule__ValueSpecification__Alternatives)
{ after(grammarAccess.getValueSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuffixExpression
entryRuleSuffixExpression 
:
{ before(grammarAccess.getSuffixExpressionRule()); }
	 ruleSuffixExpression
{ after(grammarAccess.getSuffixExpressionRule()); } 
	 EOF 
;

// Rule SuffixExpression
ruleSuffixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuffixExpressionAccess().getAlternatives()); }
(rule__SuffixExpression__Alternatives)
{ after(grammarAccess.getSuffixExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyCallExpression
entryRulePropertyCallExpression 
:
{ before(grammarAccess.getPropertyCallExpressionRule()); }
	 rulePropertyCallExpression
{ after(grammarAccess.getPropertyCallExpressionRule()); } 
	 EOF 
;

// Rule PropertyCallExpression
rulePropertyCallExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getGroup()); }
(rule__PropertyCallExpression__Group__0)
{ after(grammarAccess.getPropertyCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCallExpression
entryRuleOperationCallExpression 
:
{ before(grammarAccess.getOperationCallExpressionRule()); }
	 ruleOperationCallExpression
{ after(grammarAccess.getOperationCallExpressionRule()); } 
	 EOF 
;

// Rule OperationCallExpression
ruleOperationCallExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getGroup()); }
(rule__OperationCallExpression__Group__0)
{ after(grammarAccess.getOperationCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameOrChoiceOrBehaviorCall
entryRuleNameOrChoiceOrBehaviorCall 
:
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallRule()); }
	 ruleNameOrChoiceOrBehaviorCall
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallRule()); } 
	 EOF 
;

// Rule NameOrChoiceOrBehaviorCall
ruleNameOrChoiceOrBehaviorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getGroup()); }
(rule__NameOrChoiceOrBehaviorCall__Group__0)
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterval
entryRuleInterval 
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntervalAccess().getGroup()); }
(rule__Interval__Group__0)
{ after(grammarAccess.getIntervalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionOrTuple
entryRuleCollectionOrTuple 
:
{ before(grammarAccess.getCollectionOrTupleRule()); }
	 ruleCollectionOrTuple
{ after(grammarAccess.getCollectionOrTupleRule()); } 
	 EOF 
;

// Rule CollectionOrTuple
ruleCollectionOrTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionOrTupleAccess().getGroup()); }
(rule__CollectionOrTuple__Group__0)
{ after(grammarAccess.getCollectionOrTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTuple
entryRuleTuple 
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleAccess().getGroup()); }
(rule__Tuple__Group__0)
{ after(grammarAccess.getTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListOfValues
entryRuleListOfValues 
:
{ before(grammarAccess.getListOfValuesRule()); }
	 ruleListOfValues
{ after(grammarAccess.getListOfValuesRule()); } 
	 EOF 
;

// Rule ListOfValues
ruleListOfValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListOfValuesAccess().getGroup()); }
(rule__ListOfValues__Group__0)
{ after(grammarAccess.getListOfValuesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListOfValueNamePairs
entryRuleListOfValueNamePairs 
:
{ before(grammarAccess.getListOfValueNamePairsRule()); }
	 ruleListOfValueNamePairs
{ after(grammarAccess.getListOfValueNamePairsRule()); } 
	 EOF 
;

// Rule ListOfValueNamePairs
ruleListOfValueNamePairs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getGroup()); }
(rule__ListOfValueNamePairs__Group__0)
{ after(grammarAccess.getListOfValueNamePairsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueNamePair
entryRuleValueNamePair 
:
{ before(grammarAccess.getValueNamePairRule()); }
	 ruleValueNamePair
{ after(grammarAccess.getValueNamePairRule()); } 
	 EOF 
;

// Rule ValueNamePair
ruleValueNamePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueNamePairAccess().getGroup()); }
(rule__ValueNamePair__Group__0)
{ after(grammarAccess.getValueNamePairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeExpression
entryRuleTimeExpression 
:
{ before(grammarAccess.getTimeExpressionRule()); }
	 ruleTimeExpression
{ after(grammarAccess.getTimeExpressionRule()); } 
	 EOF 
;

// Rule TimeExpression
ruleTimeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeExpressionAccess().getAlternatives()); }
(rule__TimeExpression__Alternatives)
{ after(grammarAccess.getTimeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstantObsExpression
entryRuleInstantObsExpression 
:
{ before(grammarAccess.getInstantObsExpressionRule()); }
	 ruleInstantObsExpression
{ after(grammarAccess.getInstantObsExpressionRule()); } 
	 EOF 
;

// Rule InstantObsExpression
ruleInstantObsExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getGroup()); }
(rule__InstantObsExpression__Group__0)
{ after(grammarAccess.getInstantObsExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstantObsName
entryRuleInstantObsName 
:
{ before(grammarAccess.getInstantObsNameRule()); }
	 ruleInstantObsName
{ after(grammarAccess.getInstantObsNameRule()); } 
	 EOF 
;

// Rule InstantObsName
ruleInstantObsName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstantObsNameAccess().getGroup()); }
(rule__InstantObsName__Group__0)
{ after(grammarAccess.getInstantObsNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDurationObsExpression
entryRuleDurationObsExpression 
:
{ before(grammarAccess.getDurationObsExpressionRule()); }
	 ruleDurationObsExpression
{ after(grammarAccess.getDurationObsExpressionRule()); } 
	 EOF 
;

// Rule DurationObsExpression
ruleDurationObsExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getGroup()); }
(rule__DurationObsExpression__Group__0)
{ after(grammarAccess.getDurationObsExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDurationObsName
entryRuleDurationObsName 
:
{ before(grammarAccess.getDurationObsNameRule()); }
	 ruleDurationObsName
{ after(grammarAccess.getDurationObsNameRule()); } 
	 EOF 
;

// Rule DurationObsName
ruleDurationObsName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDurationObsNameAccess().getGroup()); }
(rule__DurationObsName__Group__0)
{ after(grammarAccess.getDurationObsNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJitterExp
entryRuleJitterExp 
:
{ before(grammarAccess.getJitterExpRule()); }
	 ruleJitterExp
{ after(grammarAccess.getJitterExpRule()); } 
	 EOF 
;

// Rule JitterExp
ruleJitterExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJitterExpAccess().getGroup()); }
(rule__JitterExp__Group__0)
{ after(grammarAccess.getJitterExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDirectionKind
entryRuleVariableDirectionKind 
:
{ before(grammarAccess.getVariableDirectionKindRule()); }
	 ruleVariableDirectionKind
{ after(grammarAccess.getVariableDirectionKindRule()); } 
	 EOF 
;

// Rule VariableDirectionKind
ruleVariableDirectionKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDirectionKindAccess().getAlternatives()); }
(rule__VariableDirectionKind__Alternatives)
{ after(grammarAccess.getVariableDirectionKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeName
entryRuleDataTypeName 
:
{ before(grammarAccess.getDataTypeNameRule()); }
	 ruleDataTypeName
{ after(grammarAccess.getDataTypeNameRule()); } 
	 EOF 
;

// Rule DataTypeName
ruleDataTypeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeNameAccess().getGroup()); }
(rule__DataTypeName__Group__0)
{ after(grammarAccess.getDataTypeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteralRule
entryRuleNumberLiteralRule 
:
{ before(grammarAccess.getNumberLiteralRuleRule()); }
	 ruleNumberLiteralRule
{ after(grammarAccess.getNumberLiteralRuleRule()); } 
	 EOF 
;

// Rule NumberLiteralRule
ruleNumberLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralRuleAccess().getAlternatives()); }
(rule__NumberLiteralRule__Alternatives)
{ after(grammarAccess.getNumberLiteralRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteralRule
entryRuleIntegerLiteralRule 
:
{ before(grammarAccess.getIntegerLiteralRuleRule()); }
	 ruleIntegerLiteralRule
{ after(grammarAccess.getIntegerLiteralRuleRule()); } 
	 EOF 
;

// Rule IntegerLiteralRule
ruleIntegerLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralRuleAccess().getValueAssignment()); }
(rule__IntegerLiteralRule__ValueAssignment)
{ after(grammarAccess.getIntegerLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedLiteralRule
entryRuleUnlimitedLiteralRule 
:
{ before(grammarAccess.getUnlimitedLiteralRuleRule()); }
	 ruleUnlimitedLiteralRule
{ after(grammarAccess.getUnlimitedLiteralRuleRule()); } 
	 EOF 
;

// Rule UnlimitedLiteralRule
ruleUnlimitedLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAssignment()); }
(rule__UnlimitedLiteralRule__ValueAssignment)
{ after(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteralRule
entryRuleRealLiteralRule 
:
{ before(grammarAccess.getRealLiteralRuleRule()); }
	 ruleRealLiteralRule
{ after(grammarAccess.getRealLiteralRuleRule()); } 
	 EOF 
;

// Rule RealLiteralRule
ruleRealLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralRuleAccess().getValueAssignment()); }
(rule__RealLiteralRule__ValueAssignment)
{ after(grammarAccess.getRealLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateTimeLiteralRule
entryRuleDateTimeLiteralRule 
:
{ before(grammarAccess.getDateTimeLiteralRuleRule()); }
	 ruleDateTimeLiteralRule
{ after(grammarAccess.getDateTimeLiteralRuleRule()); } 
	 EOF 
;

// Rule DateTimeLiteralRule
ruleDateTimeLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateTimeLiteralRuleAccess().getValueAssignment()); }
(rule__DateTimeLiteralRule__ValueAssignment)
{ after(grammarAccess.getDateTimeLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteralRule
entryRuleBooleanLiteralRule 
:
{ before(grammarAccess.getBooleanLiteralRuleRule()); }
	 ruleBooleanLiteralRule
{ after(grammarAccess.getBooleanLiteralRuleRule()); } 
	 EOF 
;

// Rule BooleanLiteralRule
ruleBooleanLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralRuleAccess().getValueAssignment()); }
(rule__BooleanLiteralRule__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteralRule
entryRuleNullLiteralRule 
:
{ before(grammarAccess.getNullLiteralRuleRule()); }
	 ruleNullLiteralRule
{ after(grammarAccess.getNullLiteralRuleRule()); } 
	 EOF 
;

// Rule NullLiteralRule
ruleNullLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralRuleAccess().getValueAssignment()); }
(rule__NullLiteralRule__ValueAssignment)
{ after(grammarAccess.getNullLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultLiteralRule
entryRuleDefaultLiteralRule 
:
{ before(grammarAccess.getDefaultLiteralRuleRule()); }
	 ruleDefaultLiteralRule
{ after(grammarAccess.getDefaultLiteralRuleRule()); } 
	 EOF 
;

// Rule DefaultLiteralRule
ruleDefaultLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultLiteralRuleAccess().getValueAssignment()); }
(rule__DefaultLiteralRule__ValueAssignment)
{ after(grammarAccess.getDefaultLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteralRule
entryRuleStringLiteralRule 
:
{ before(grammarAccess.getStringLiteralRuleRule()); }
	 ruleStringLiteralRule
{ after(grammarAccess.getStringLiteralRuleRule()); } 
	 EOF 
;

// Rule StringLiteralRule
ruleStringLiteralRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralRuleAccess().getValueAssignment()); }
(rule__StringLiteralRule__ValueAssignment)
{ after(grammarAccess.getStringLiteralRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndOrXorExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getOpAndKeyword_1_0_0_0()); }

	'and' 

{ after(grammarAccess.getAndOrXorExpressionAccess().getOpAndKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAndOrXorExpressionAccess().getOpOrKeyword_1_0_0_1()); }

	'or' 

{ after(grammarAccess.getAndOrXorExpressionAccess().getOpOrKeyword_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getAndOrXorExpressionAccess().getOpXorKeyword_1_0_0_2()); }

	'xor' 

{ after(grammarAccess.getAndOrXorExpressionAccess().getOpXorKeyword_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0()); }

	'==' 

{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_0_1()); }

	'<>' 

{ after(grammarAccess.getEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_0_0_0()); }

	'<' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1()); }

	'>' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_2()); }

	'<=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_3()); }

	'>=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_2()); }

	'mod' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getExpAssignment_1()); }
(rule__UnaryExpression__ExpAssignment_1)
{ after(grammarAccess.getUnaryExpressionAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_0_0_0()); }

	'not' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_0_0_0_1()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_0_0_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOpPlusSignKeyword_0_0_0_2()); }

	'+' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpPlusSignKeyword_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueSpecificationAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getValueSpecificationAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getNameOrChoiceOrBehaviorCallParserRuleCall_1()); }
	ruleNameOrChoiceOrBehaviorCall
{ after(grammarAccess.getValueSpecificationAccess().getNameOrChoiceOrBehaviorCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getIntervalParserRuleCall_2()); }
	ruleInterval
{ after(grammarAccess.getValueSpecificationAccess().getIntervalParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getCollectionOrTupleParserRuleCall_3()); }
	ruleCollectionOrTuple
{ after(grammarAccess.getValueSpecificationAccess().getCollectionOrTupleParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getTupleParserRuleCall_4()); }
	ruleTuple
{ after(grammarAccess.getValueSpecificationAccess().getTupleParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getTimeExpressionParserRuleCall_5()); }
	ruleTimeExpression
{ after(grammarAccess.getValueSpecificationAccess().getTimeExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getVariableDeclarationParserRuleCall_6()); }
	ruleVariableDeclaration
{ after(grammarAccess.getValueSpecificationAccess().getVariableDeclarationParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getValueSpecificationAccess().getGroup_7()); }
(rule__ValueSpecification__Group_7__0)
{ after(grammarAccess.getValueSpecificationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuffixExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuffixExpressionAccess().getPropertyCallExpressionParserRuleCall_0()); }
	rulePropertyCallExpression
{ after(grammarAccess.getSuffixExpressionAccess().getPropertyCallExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuffixExpressionAccess().getOperationCallExpressionParserRuleCall_1()); }
	ruleOperationCallExpression
{ after(grammarAccess.getSuffixExpressionAccess().getOperationCallExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralRuleParserRuleCall_0()); }
	ruleNumberLiteralRule
{ after(grammarAccess.getLiteralAccess().getNumberLiteralRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDateTimeLiteralRuleParserRuleCall_1()); }
	ruleDateTimeLiteralRule
{ after(grammarAccess.getLiteralAccess().getDateTimeLiteralRuleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralRuleParserRuleCall_2()); }
	ruleBooleanLiteralRule
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralRuleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralRuleParserRuleCall_3()); }
	ruleNullLiteralRule
{ after(grammarAccess.getLiteralAccess().getNullLiteralRuleParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDefaultLiteralRuleParserRuleCall_4()); }
	ruleDefaultLiteralRule
{ after(grammarAccess.getLiteralAccess().getDefaultLiteralRuleParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralRuleParserRuleCall_5()); }
	ruleStringLiteralRule
{ after(grammarAccess.getLiteralAccess().getStringLiteralRuleParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_0_0()); }

	']' 

{ after(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getIntervalAccess().getIsLowerIncludedAssignment_0_1()); }
(rule__Interval__IsLowerIncludedAssignment_0_1)
{ after(grammarAccess.getIntervalAccess().getIsLowerIncludedAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getIsUpperIncludedAssignment_4_0()); }
(rule__Interval__IsUpperIncludedAssignment_4_0)
{ after(grammarAccess.getIntervalAccess().getIsUpperIncludedAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_4_1()); }

	'[' 

{ after(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeExpressionAccess().getInstantObsExpressionParserRuleCall_0()); }
	ruleInstantObsExpression
{ after(grammarAccess.getTimeExpressionAccess().getInstantObsExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTimeExpressionAccess().getDurationObsExpressionParserRuleCall_1()); }
	ruleDurationObsExpression
{ after(grammarAccess.getTimeExpressionAccess().getDurationObsExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTimeExpressionAccess().getJitterExpParserRuleCall_2()); }
	ruleJitterExp
{ after(grammarAccess.getTimeExpressionAccess().getJitterExpParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3_0()); }
(rule__VariableDeclaration__Group_3_0__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3_1()); }
(rule__VariableDeclaration__Group_3_1__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDirectionKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDirectionKindAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getVariableDirectionKindAccess().getInKeyword_0()); }
)

    |(
{ before(grammarAccess.getVariableDirectionKindAccess().getOutKeyword_1()); }

	'out' 

{ after(grammarAccess.getVariableDirectionKindAccess().getOutKeyword_1()); }
)

    |(
{ before(grammarAccess.getVariableDirectionKindAccess().getInoutKeyword_2()); }

	'inout' 

{ after(grammarAccess.getVariableDirectionKindAccess().getInoutKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteralRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralRuleAccess().getIntegerLiteralRuleParserRuleCall_0()); }
	ruleIntegerLiteralRule
{ after(grammarAccess.getNumberLiteralRuleAccess().getIntegerLiteralRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberLiteralRuleAccess().getUnlimitedLiteralRuleParserRuleCall_1()); }
	ruleUnlimitedLiteralRule
{ after(grammarAccess.getNumberLiteralRuleAccess().getUnlimitedLiteralRuleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumberLiteralRuleAccess().getRealLiteralRuleParserRuleCall_2()); }
	ruleRealLiteralRule
{ after(grammarAccess.getNumberLiteralRuleAccess().getRealLiteralRuleParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AndOrXorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOrXorExpression__Group__0__Impl
	rule__AndOrXorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getExpAssignment_0()); }
(rule__AndOrXorExpression__ExpAssignment_0)
{ after(grammarAccess.getAndOrXorExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndOrXorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOrXorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getGroup_1()); }
(rule__AndOrXorExpression__Group_1__0)*
{ after(grammarAccess.getAndOrXorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndOrXorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOrXorExpression__Group_1__0__Impl
	rule__AndOrXorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getOpAssignment_1_0()); }
(rule__AndOrXorExpression__OpAssignment_1_0)
{ after(grammarAccess.getAndOrXorExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndOrXorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOrXorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getExpAssignment_1_1()); }
(rule__AndOrXorExpression__ExpAssignment_1_1)
{ after(grammarAccess.getAndOrXorExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpAssignment_0()); }
(rule__EqualityExpression__ExpAssignment_0)
{ after(grammarAccess.getEqualityExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0()); }
(rule__EqualityExpression__OpAssignment_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpAssignment_1_1()); }
(rule__EqualityExpression__ExpAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpAssignment_0()); }
(rule__RelationalExpression__ExpAssignment_0)
{ after(grammarAccess.getRelationalExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_0()); }
(rule__RelationalExpression__OpAssignment_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpAssignment_1_1()); }
(rule__RelationalExpression__ExpAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAssignment_0()); }
(rule__ConditionalExpression__ExpAssignment_0)
{ after(grammarAccess.getConditionalExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
(rule__ConditionalExpression__Group_1__0)?
{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOpAssignment_1_0()); }
(rule__ConditionalExpression__OpAssignment_1_0)
{ after(grammarAccess.getConditionalExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAssignment_1_1()); }
(rule__ConditionalExpression__ExpAssignment_1_1)
{ after(grammarAccess.getConditionalExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAssignment_1_3()); }
(rule__ConditionalExpression__ExpAssignment_1_3)
{ after(grammarAccess.getConditionalExpressionAccess().getExpAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpAssignment_0()); }
(rule__AdditiveExpression__ExpAssignment_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0()); }
(rule__AdditiveExpression__OpAssignment_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpAssignment_1_1()); }
(rule__AdditiveExpression__ExpAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpAssignment_0()); }
(rule__MultiplicativeExpression__ExpAssignment_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0()); }
(rule__MultiplicativeExpression__OpAssignment_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpAssignment_1_1()); }
(rule__MultiplicativeExpression__ExpAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_0()); }
(rule__UnaryExpression__OpAssignment_0_0)
{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryAssignment_0_1()); }
(rule__UnaryExpression__UnaryAssignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrefixAssignment_0()); }
(rule__PrimaryExpression__PrefixAssignment_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getPrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSuffixAssignment_1_1()); }
(rule__PrimaryExpression__SuffixAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getSuffixAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueSpecification__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueSpecification__Group_7__0__Impl
	rule__ValueSpecification__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSpecification__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueSpecificationAccess().getLeftParenthesisKeyword_7_0()); }

	'(' 

{ after(grammarAccess.getValueSpecificationAccess().getLeftParenthesisKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueSpecification__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueSpecification__Group_7__1__Impl
	rule__ValueSpecification__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSpecification__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueSpecificationAccess().getExpressionParserRuleCall_7_1()); }
	ruleExpression
{ after(grammarAccess.getValueSpecificationAccess().getExpressionParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueSpecification__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueSpecification__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSpecification__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueSpecificationAccess().getRightParenthesisKeyword_7_2()); }

	')' 

{ after(grammarAccess.getValueSpecificationAccess().getRightParenthesisKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyCallExpression__Group__0__Impl
	rule__PropertyCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getPropertyAssignment_0()); }
(rule__PropertyCallExpression__PropertyAssignment_0)
{ after(grammarAccess.getPropertyCallExpressionAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyCallExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getGroup_1()); }
(rule__PropertyCallExpression__Group_1__0)?
{ after(grammarAccess.getPropertyCallExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyCallExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyCallExpression__Group_1__0__Impl
	rule__PropertyCallExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getPropertyCallExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCallExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyCallExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getSuffixAssignment_1_1()); }
(rule__PropertyCallExpression__SuffixAssignment_1_1)
{ after(grammarAccess.getPropertyCallExpressionAccess().getSuffixAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group__0__Impl
	rule__OperationCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getOperationAssignment_0()); }
(rule__OperationCallExpression__OperationAssignment_0)
{ after(grammarAccess.getOperationCallExpressionAccess().getOperationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group__1__Impl
	rule__OperationCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationCallExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCallExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group__2__Impl
	rule__OperationCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getArgumentsAssignment_2()); }
(rule__OperationCallExpression__ArgumentsAssignment_2)?
{ after(grammarAccess.getOperationCallExpressionAccess().getArgumentsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCallExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group__3__Impl
	rule__OperationCallExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationCallExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCallExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getGroup_4()); }
(rule__OperationCallExpression__Group_4__0)?
{ after(grammarAccess.getOperationCallExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OperationCallExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group_4__0__Impl
	rule__OperationCallExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getFullStopKeyword_4_0()); }

	'.' 

{ after(grammarAccess.getOperationCallExpressionAccess().getFullStopKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCallExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCallExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getSuffixAssignment_4_1()); }
(rule__OperationCallExpression__SuffixAssignment_4_1)
{ after(grammarAccess.getOperationCallExpressionAccess().getSuffixAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrChoiceOrBehaviorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group__0__Impl
	rule__NameOrChoiceOrBehaviorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getPathAssignment_0()); }
(rule__NameOrChoiceOrBehaviorCall__PathAssignment_0)?
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getPathAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrChoiceOrBehaviorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group__1__Impl
	rule__NameOrChoiceOrBehaviorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdAssignment_1()); }
(rule__NameOrChoiceOrBehaviorCall__IdAssignment_1)
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrChoiceOrBehaviorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getGroup_2()); }
(rule__NameOrChoiceOrBehaviorCall__Group_2__0)?
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NameOrChoiceOrBehaviorCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group_2__0__Impl
	rule__NameOrChoiceOrBehaviorCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrChoiceOrBehaviorCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group_2__1__Impl
	rule__NameOrChoiceOrBehaviorCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getArgumentsAssignment_2_1()); }
(rule__NameOrChoiceOrBehaviorCall__ArgumentsAssignment_2_1)?
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getArgumentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrChoiceOrBehaviorCall__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrChoiceOrBehaviorCall__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getPathAssignment_0()); }
(rule__QualifiedName__PathAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getPathAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getRemainingAssignment_2()); }
(rule__QualifiedName__RemainingAssignment_2)?
{ after(grammarAccess.getQualifiedNameAccess().getRemainingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__0__Impl
	rule__Interval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getAlternatives_0()); }
(rule__Interval__Alternatives_0)
{ after(grammarAccess.getIntervalAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__1__Impl
	rule__Interval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getLowerAssignment_1()); }
(rule__Interval__LowerAssignment_1)
{ after(grammarAccess.getIntervalAccess().getLowerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__2__Impl
	rule__Interval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getIntervalAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__3__Impl
	rule__Interval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getUpperAssignment_3()); }
(rule__Interval__UpperAssignment_3)
{ after(grammarAccess.getIntervalAccess().getUpperAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getAlternatives_4()); }
(rule__Interval__Alternatives_4)
{ after(grammarAccess.getIntervalAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CollectionOrTuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionOrTuple__Group__0__Impl
	rule__CollectionOrTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOrTuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionOrTupleAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCollectionOrTupleAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOrTuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionOrTuple__Group__1__Impl
	rule__CollectionOrTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOrTuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionOrTupleAccess().getListOfValuesAssignment_1()); }
(rule__CollectionOrTuple__ListOfValuesAssignment_1)
{ after(grammarAccess.getCollectionOrTupleAccess().getListOfValuesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOrTuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionOrTuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOrTuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionOrTupleAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getCollectionOrTupleAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Tuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getTupleAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getListOfValueNamePairsAssignment_1()); }
(rule__Tuple__ListOfValueNamePairsAssignment_1)
{ after(grammarAccess.getTupleAccess().getListOfValueNamePairsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getTupleAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListOfValues__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValues__Group__0__Impl
	rule__ListOfValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
(rule__ListOfValues__ValuesAssignment_0)
{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getGroup_1()); }
(rule__ListOfValues__Group_1__0)*
{ after(grammarAccess.getListOfValuesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListOfValues__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValues__Group_1__0__Impl
	rule__ListOfValues__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValues__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
(rule__ListOfValues__ValuesAssignment_1_1)
{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListOfValueNamePairs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValueNamePairs__Group__0__Impl
	rule__ListOfValueNamePairs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsAssignment_0()); }
(rule__ListOfValueNamePairs__ValueNamePairsAssignment_0)
{ after(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValueNamePairs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValueNamePairs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getGroup_1()); }
(rule__ListOfValueNamePairs__Group_1__0)*
{ after(grammarAccess.getListOfValueNamePairsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListOfValueNamePairs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValueNamePairs__Group_1__0__Impl
	rule__ListOfValueNamePairs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getListOfValueNamePairsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValueNamePairs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOfValueNamePairs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsAssignment_1_1()); }
(rule__ListOfValueNamePairs__ValueNamePairsAssignment_1_1)
{ after(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueNamePair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNamePair__Group__0__Impl
	rule__ValueNamePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNamePair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNamePairAccess().getPropertyAssignment_0()); }
(rule__ValueNamePair__PropertyAssignment_0)
{ after(grammarAccess.getValueNamePairAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNamePair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNamePair__Group__1__Impl
	rule__ValueNamePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNamePair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNamePairAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getValueNamePairAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNamePair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNamePair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNamePair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNamePairAccess().getValueAssignment_2()); }
(rule__ValueNamePair__ValueAssignment_2)
{ after(grammarAccess.getValueNamePairAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstantObsExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group__0__Impl
	rule__InstantObsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getInstantObsExpressionAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group__1__Impl
	rule__InstantObsExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getIdAssignment_1()); }
(rule__InstantObsExpression__IdAssignment_1)
{ after(grammarAccess.getInstantObsExpressionAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group__2__Impl
	rule__InstantObsExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getGroup_2()); }
(rule__InstantObsExpression__Group_2__0)?
{ after(grammarAccess.getInstantObsExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getGroup_3()); }
(rule__InstantObsExpression__Group_3__0)?
{ after(grammarAccess.getInstantObsExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstantObsExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_2__0__Impl
	rule__InstantObsExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getInstantObsExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_2__1__Impl
	rule__InstantObsExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getIndexAssignment_2_1()); }
(rule__InstantObsExpression__IndexAssignment_2_1)
{ after(grammarAccess.getInstantObsExpressionAccess().getIndexAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getInstantObsExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstantObsExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_3__0__Impl
	rule__InstantObsExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getWhenKeyword_3_0()); }

	'when' 

{ after(grammarAccess.getInstantObsExpressionAccess().getWhenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_3__1__Impl
	rule__InstantObsExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getInstantObsExpressionAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_3__2__Impl
	rule__InstantObsExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getConditionAssignment_3_2()); }
(rule__InstantObsExpression__ConditionAssignment_3_2)
{ after(grammarAccess.getInstantObsExpressionAccess().getConditionAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getInstantObsExpressionAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstantObsName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsName__Group__0__Impl
	rule__InstantObsName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsNameAccess().getPathAssignment_0()); }
(rule__InstantObsName__PathAssignment_0)?
{ after(grammarAccess.getInstantObsNameAccess().getPathAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantObsName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantObsName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsNameAccess().getInstantIdAssignment_1()); }
(rule__InstantObsName__InstantIdAssignment_1)
{ after(grammarAccess.getInstantObsNameAccess().getInstantIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DurationObsExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group__0__Impl
	rule__DurationObsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getDurationObsExpressionAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group__1__Impl
	rule__DurationObsExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getIdAssignment_1()); }
(rule__DurationObsExpression__IdAssignment_1)
{ after(grammarAccess.getDurationObsExpressionAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group__2__Impl
	rule__DurationObsExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getGroup_2()); }
(rule__DurationObsExpression__Group_2__0)?
{ after(grammarAccess.getDurationObsExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getGroup_3()); }
(rule__DurationObsExpression__Group_3__0)?
{ after(grammarAccess.getDurationObsExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DurationObsExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_2__0__Impl
	rule__DurationObsExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getDurationObsExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_2__1__Impl
	rule__DurationObsExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getIndexAssignment_2_1()); }
(rule__DurationObsExpression__IndexAssignment_2_1)
{ after(grammarAccess.getDurationObsExpressionAccess().getIndexAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getDurationObsExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DurationObsExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_3__0__Impl
	rule__DurationObsExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getWhenKeyword_3_0()); }

	'when' 

{ after(grammarAccess.getDurationObsExpressionAccess().getWhenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_3__1__Impl
	rule__DurationObsExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getDurationObsExpressionAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_3__2__Impl
	rule__DurationObsExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getConditionAssignment_3_2()); }
(rule__DurationObsExpression__ConditionAssignment_3_2)
{ after(grammarAccess.getDurationObsExpressionAccess().getConditionAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getDurationObsExpressionAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DurationObsName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsName__Group__0__Impl
	rule__DurationObsName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsNameAccess().getPathAssignment_0()); }
(rule__DurationObsName__PathAssignment_0)?
{ after(grammarAccess.getDurationObsNameAccess().getPathAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationObsName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationObsName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsNameAccess().getDurationIdAssignment_1()); }
(rule__DurationObsName__DurationIdAssignment_1)
{ after(grammarAccess.getDurationObsNameAccess().getDurationIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JitterExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group__0__Impl
	rule__JitterExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getJitterKeyword_0()); }

	'jitter(' 

{ after(grammarAccess.getJitterExpAccess().getJitterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JitterExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group__1__Impl
	rule__JitterExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getFirstInstantAssignment_1()); }
(rule__JitterExp__FirstInstantAssignment_1)
{ after(grammarAccess.getJitterExpAccess().getFirstInstantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JitterExp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group__2__Impl
	rule__JitterExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getGroup_2()); }
(rule__JitterExp__Group_2__0)?
{ after(grammarAccess.getJitterExpAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JitterExp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getJitterExpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JitterExp__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group_2__0__Impl
	rule__JitterExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getHyphenMinusKeyword_2_0()); }

	'-' 

{ after(grammarAccess.getJitterExpAccess().getHyphenMinusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JitterExp__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JitterExp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getSecondInstantAssignment_2_1()); }
(rule__JitterExp__SecondInstantAssignment_2_1)
{ after(grammarAccess.getJitterExpAccess().getSecondInstantAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAssignment_0()); }
(rule__VariableDeclaration__VariableDeclarationAssignment_0)?
{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getDollarSignKeyword_1()); }

	'$' 

{ after(grammarAccess.getVariableDeclarationAccess().getDollarSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2()); }
(rule__VariableDeclaration__NameAssignment_2)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_3()); }
(rule__VariableDeclaration__Alternatives_3)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0__0__Impl
	rule__VariableDeclaration__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_3_0_0()); }

	':' 

{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0__1__Impl
	rule__VariableDeclaration__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_3_0_1()); }
(rule__VariableDeclaration__TypeAssignment_3_0_1)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3_0_2()); }
(rule__VariableDeclaration__Group_3_0_2__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group_3_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0_2__0__Impl
	rule__VariableDeclaration__Group_3_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_0_2_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0_2__1__Impl
	rule__VariableDeclaration__Group_3_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_3_0_2_1()); }

	'(' 

{ after(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_3_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0_2__2__Impl
	rule__VariableDeclaration__Group_3_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitValueAssignment_3_0_2_2()); }
(rule__VariableDeclaration__InitValueAssignment_3_0_2_2)
{ after(grammarAccess.getVariableDeclarationAccess().getInitValueAssignment_3_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3_0_2_3()); }

	')' 

{ after(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_1__0__Impl
	rule__VariableDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_1_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_1__1__Impl
	rule__VariableDeclaration__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_3_1_1()); }

	'(' 

{ after(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_1__2__Impl
	rule__VariableDeclaration__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitValueAssignment_3_1_2()); }
(rule__VariableDeclaration__InitValueAssignment_3_1_2)
{ after(grammarAccess.getVariableDeclarationAccess().getInitValueAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3_1_3()); }

	')' 

{ after(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeName__Group__0__Impl
	rule__DataTypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeNameAccess().getPathAssignment_0()); }
(rule__DataTypeName__PathAssignment_0)?
{ after(grammarAccess.getDataTypeNameAccess().getPathAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeNameAccess().getTypeAssignment_1()); }
(rule__DataTypeName__TypeAssignment_1)
{ after(grammarAccess.getDataTypeNameAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Expression__ExpAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpAndOrXorExpressionParserRuleCall_0()); }
	ruleAndOrXorExpression{ after(grammarAccess.getExpressionAccess().getExpAndOrXorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getExpEqualityExpressionParserRuleCall_0_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndOrXorExpressionAccess().getExpEqualityExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__AndOrXorExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getAndOrXorExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrXorExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOrXorExpressionAccess().getExpEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndOrXorExpressionAccess().getExpEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_0_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__EqualityExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_1_1_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpConditionalExpressionParserRuleCall_0_0()); }
	ruleConditionalExpression{ after(grammarAccess.getRelationalExpressionAccess().getExpConditionalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__RelationalExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpConditionalExpressionParserRuleCall_1_1_0()); }
	ruleConditionalExpression{ after(grammarAccess.getRelationalExpressionAccess().getExpConditionalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_0_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOpQuestionMarkKeyword_1_0_0()); }
(
{ before(grammarAccess.getConditionalExpressionAccess().getOpQuestionMarkKeyword_1_0_0()); }

	'?' 

{ after(grammarAccess.getConditionalExpressionAccess().getOpQuestionMarkKeyword_1_0_0()); }
)

{ after(grammarAccess.getConditionalExpressionAccess().getOpQuestionMarkKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ExpAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_1_3_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getConditionalExpressionAccess().getExpAdditiveExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpMultiplicativeExpressionParserRuleCall_0_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getExpMultiplicativeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__AdditiveExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getExpMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__MultiplicativeExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpUnaryExpressionParserRuleCall_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpUnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_0_0()); }
(rule__UnaryExpression__OpAlternatives_0_0_0)
{ after(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UnaryAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryUnaryExpressionParserRuleCall_0_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getUnaryUnaryExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExpPrimaryExpressionParserRuleCall_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExpPrimaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__PrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrefixValueSpecificationParserRuleCall_0_0()); }
	ruleValueSpecification{ after(grammarAccess.getPrimaryExpressionAccess().getPrefixValueSpecificationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__SuffixAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSuffixSuffixExpressionParserRuleCall_1_1_0()); }
	ruleSuffixExpression{ after(grammarAccess.getPrimaryExpressionAccess().getSuffixSuffixExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPropertyCallExpressionAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPropertyCallExpressionAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExpression__SuffixAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyCallExpressionAccess().getSuffixSuffixExpressionParserRuleCall_1_1_0()); }
	ruleSuffixExpression{ after(grammarAccess.getPropertyCallExpressionAccess().getSuffixSuffixExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__OperationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getOperationOperationCrossReference_0_0()); }
(
{ before(grammarAccess.getOperationCallExpressionAccess().getOperationOperationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationCallExpressionAccess().getOperationOperationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOperationCallExpressionAccess().getOperationOperationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__ArgumentsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getArgumentsListOfValuesParserRuleCall_2_0()); }
	ruleListOfValues{ after(grammarAccess.getOperationCallExpressionAccess().getArgumentsListOfValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCallExpression__SuffixAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallExpressionAccess().getSuffixSuffixExpressionParserRuleCall_4_1_0()); }
	ruleSuffixExpression{ after(grammarAccess.getOperationCallExpressionAccess().getSuffixSuffixExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getPathQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getPathQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdNamedElementCrossReference_1_0()); }
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdNamedElementIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdNamedElementIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getIdNamedElementCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrChoiceOrBehaviorCall__ArgumentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getArgumentsListOfValuesParserRuleCall_2_1_0()); }
	ruleListOfValues{ after(grammarAccess.getNameOrChoiceOrBehaviorCallAccess().getArgumentsListOfValuesParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getPathNamespaceCrossReference_0_0()); }
(
{ before(grammarAccess.getQualifiedNameAccess().getPathNamespaceIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getPathNamespaceIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getQualifiedNameAccess().getPathNamespaceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__RemainingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getRemainingQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getQualifiedNameAccess().getRemainingQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__IsLowerIncludedAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getIsLowerIncludedLeftSquareBracketKeyword_0_1_0()); }
(
{ before(grammarAccess.getIntervalAccess().getIsLowerIncludedLeftSquareBracketKeyword_0_1_0()); }

	'[' 

{ after(grammarAccess.getIntervalAccess().getIsLowerIncludedLeftSquareBracketKeyword_0_1_0()); }
)

{ after(grammarAccess.getIntervalAccess().getIsLowerIncludedLeftSquareBracketKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getLowerExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIntervalAccess().getLowerExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getUpperExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIntervalAccess().getUpperExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__IsUpperIncludedAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getIsUpperIncludedRightSquareBracketKeyword_4_0_0()); }
(
{ before(grammarAccess.getIntervalAccess().getIsUpperIncludedRightSquareBracketKeyword_4_0_0()); }

	']' 

{ after(grammarAccess.getIntervalAccess().getIsUpperIncludedRightSquareBracketKeyword_4_0_0()); }
)

{ after(grammarAccess.getIntervalAccess().getIsUpperIncludedRightSquareBracketKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOrTuple__ListOfValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionOrTupleAccess().getListOfValuesListOfValuesParserRuleCall_1_0()); }
	ruleListOfValues{ after(grammarAccess.getCollectionOrTupleAccess().getListOfValuesListOfValuesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__ListOfValueNamePairsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getListOfValueNamePairsListOfValueNamePairsParserRuleCall_1_0()); }
	ruleListOfValueNamePairs{ after(grammarAccess.getTupleAccess().getListOfValueNamePairsListOfValueNamePairsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getValuesExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getListOfValuesAccess().getValuesExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValuesAccess().getValuesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListOfValuesAccess().getValuesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__ValueNamePairsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsValueNamePairParserRuleCall_0_0()); }
	ruleValueNamePair{ after(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsValueNamePairParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValueNamePairs__ValueNamePairsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsValueNamePairParserRuleCall_1_1_0()); }
	ruleValueNamePair{ after(grammarAccess.getListOfValueNamePairsAccess().getValueNamePairsValueNamePairParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNamePair__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNamePairAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getValueNamePairAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getValueNamePairAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getValueNamePairAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNamePair__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNamePairAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getValueNamePairAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getIdInstantObsNameParserRuleCall_1_0()); }
	ruleInstantObsName{ after(grammarAccess.getInstantObsExpressionAccess().getIdInstantObsNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__IndexAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getIndexExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getInstantObsExpressionAccess().getIndexExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsExpression__ConditionAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsExpressionAccess().getConditionExpressionParserRuleCall_3_2_0()); }
	ruleExpression{ after(grammarAccess.getInstantObsExpressionAccess().getConditionExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsName__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getInstantObsNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantObsName__InstantIdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantObsNameAccess().getInstantIdTimeObservationCrossReference_1_0()); }
(
{ before(grammarAccess.getInstantObsNameAccess().getInstantIdTimeObservationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInstantObsNameAccess().getInstantIdTimeObservationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getInstantObsNameAccess().getInstantIdTimeObservationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getIdDurationObsNameParserRuleCall_1_0()); }
	ruleDurationObsName{ after(grammarAccess.getDurationObsExpressionAccess().getIdDurationObsNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__IndexAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getIndexExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getDurationObsExpressionAccess().getIndexExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsExpression__ConditionAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsExpressionAccess().getConditionExpressionParserRuleCall_3_2_0()); }
	ruleExpression{ after(grammarAccess.getDurationObsExpressionAccess().getConditionExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsName__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getDurationObsNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationObsName__DurationIdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationObsNameAccess().getDurationIdDurationObservationCrossReference_1_0()); }
(
{ before(grammarAccess.getDurationObsNameAccess().getDurationIdDurationObservationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDurationObsNameAccess().getDurationIdDurationObservationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDurationObsNameAccess().getDurationIdDurationObservationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__FirstInstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getFirstInstantInstantObsExpressionParserRuleCall_1_0()); }
	ruleInstantObsExpression{ after(grammarAccess.getJitterExpAccess().getFirstInstantInstantObsExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JitterExp__SecondInstantAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJitterExpAccess().getSecondInstantInstantObsExpressionParserRuleCall_2_1_0()); }
	ruleInstantObsExpression{ after(grammarAccess.getJitterExpAccess().getSecondInstantInstantObsExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationVariableDirectionKindParserRuleCall_0_0()); }
	ruleVariableDirectionKind{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationVariableDirectionKindParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeNameParserRuleCall_3_0_1_0()); }
	ruleDataTypeName{ after(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeNameParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InitValueAssignment_3_0_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitValueExpressionParserRuleCall_3_0_2_2_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getInitValueExpressionParserRuleCall_3_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InitValueAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitValueExpressionParserRuleCall_3_1_2_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getInitValueExpressionParserRuleCall_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getDataTypeNameAccess().getPathQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeNameAccess().getTypeDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getDataTypeNameAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataTypeNameAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDataTypeNameAccess().getTypeDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralRuleAccess().getValueIntegerLiteralTerminalRuleCall_0()); }
	RULE_INTEGERLITERAL{ after(grammarAccess.getIntegerLiteralRuleAccess().getValueIntegerLiteralTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAsteriskKeyword_0()); }
(
{ before(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAsteriskKeyword_0()); }
)

{ after(grammarAccess.getUnlimitedLiteralRuleAccess().getValueAsteriskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralRuleAccess().getValueRealLiteralTerminalRuleCall_0()); }
	RULE_REALLITERAL{ after(grammarAccess.getRealLiteralRuleAccess().getValueRealLiteralTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeLiteralRuleAccess().getValueDateTimeLiteralTerminalRuleCall_0()); }
	RULE_DATETIMELITERAL{ after(grammarAccess.getDateTimeLiteralRuleAccess().getValueDateTimeLiteralTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralRuleAccess().getValueBooleanLiteralTerminalRuleCall_0()); }
	RULE_BOOLEANLITERAL{ after(grammarAccess.getBooleanLiteralRuleAccess().getValueBooleanLiteralTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralRuleAccess().getValueNullLiteralTerminalRuleCall_0()); }
	RULE_NULLLITERAL{ after(grammarAccess.getNullLiteralRuleAccess().getValueNullLiteralTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultLiteralRuleAccess().getValueSolidusKeyword_0()); }
(
{ before(grammarAccess.getDefaultLiteralRuleAccess().getValueSolidusKeyword_0()); }

	'/' 

{ after(grammarAccess.getDefaultLiteralRuleAccess().getValueSolidusKeyword_0()); }
)

{ after(grammarAccess.getDefaultLiteralRuleAccess().getValueSolidusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralRuleAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralRuleAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGERLITERAL : ('+'|'-')? (('0'..'9')+|'0x' ('0'..'9'|'A'..'F'|'a'..'f')+|'0b' ('0'..'1')+);

RULE_REALLITERAL : ('+'|'-')? ('0'..'9')+ '.' ('0'..'9')+ ('E' ('+'|'-')? ('0'..'9')+)?;

RULE_DATETIMELITERAL : (('0'..'1' '0'..'9'|'2' '0'..'3') ':' '0'..'5' '0'..'9' (':' '0'..'5' '0'..'9' (':' '0'..'9' '0'..'9')?)? (' ' '0'..'9' '0'..'9' '0'..'9' '0'..'9' '/' ('0' '0'..'9'|'1' '0'..'2') '/' ('0'..'2' '0'..'9'|'3' ('0'|'1')))? (' ' ('Mon'|'Tue'|'Wed'|'Thr'|'Fri'|'Sat'|'Sun'))?|'0'..'9' '0'..'9' '0'..'9' '0'..'9' '/' ('0' '0'..'9'|'1' '0'..'2') '/' ('0'..'2' '0'..'9'|'3' ('0'|'1')) (' ' ('Mon'|'Tue'|'Wed'|'Thr'|'Fri'|'Sat'|'Sun'))?|('Mon'|'Tue'|'Wed'|'Thr'|'Fri'|'Sat'|'Sun'));

RULE_BOOLEANLITERAL : ('true'|'false');

RULE_NULLLITERAL : 'null';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


