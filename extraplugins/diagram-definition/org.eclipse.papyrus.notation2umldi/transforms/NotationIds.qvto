/**
 * Copyright (c) 2014 CEA LIST.
 *  
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *  
 * Contributors:
 *  CEA LIST - Initial API and implementation
 */
import org.eclipse.papyrus.notation.qvt.NotationUtilities; 
 
library NotationIds;

//Diagrams
property classDiagramType = 'ClassDiagram';
property packageDiagramType = 'UML Package Diagram';
property profileDiagramType = 'ProfileDiagram';
property componentDiagramType = 'ComponentDiagram';
property compositeStructureDiagramType = 'CompositeStructureDiagram';
property deploymentDiagramType = 'DeploymentDiagram';
property useCaseDiagramType = 'UseCaseDiagram';
property stateMachineDiagramType = 'StateMachineDiagram';
property activityDiagramType = 'ActivityDiagram';
property sequenceDiagramType = 'SequenceDiagram';
property communicationDiagramType = 'CommunicationDiagram';
property timingDiagramType = 'TimingDiagram';
property interactionOverviewDiagramType = 'InteractionOverviewDiagram';

//Shapes
property customShapeType = "Custom";
property roleBindingShapeType = "RoleBinding";
property compactStateInvariantShapeType ="Compact";
property appliedStereotypeShapeType = "AppliedStereotypesComment";

//Edges
property containmentEdgeType = "Containment";
property attachmentEdgeType = "Attachment";
property representationEdgeType = "Representation";
property pathEdgeType = "Path";
property appliedStereotypeEdgeType = "AppliedStereotypesCommentLink";

//Labels
property nameLabelType = "Name";
property qualifiedNameLabelType = "QualifiedName";
property stereotypeLabelType = "Stereotype";
property aliasLabelType = "Alias";
property templateParameterSubstitutionLabelType = "TemplateParameterSubstitution";
property bodyLabelType = "Body";
property expressionLabelType = "Expression";
property sourceRoleLabelType = "SourceRole";
property targetRoleLabelType = "TargetRole";
property sourceMultiplicityLabelType = "SourceMultiplicity";
property targetMultiplicityLabelType = "TargetMultiplicity";
property constraintLabelType = "Constraint";
property conveyedLabelType = Set {"Conveyed", "ConveyedElements"};
property representationLabelType = "Tag";
property guardLabelType = "Guard";
property weightLabelType = "Weight";
property selectionLabelType = "Selection";
property transformationLabelType = "Transformation";
property typeLabelType = "Type";
property iconLabelType = "Icon";
property decisionInputFlowLabelType = "DecisionInputFlow";

//Compartments
property attributeCompartmentType = "attributes";
property operationCompartmentType = "operations";
property packagedElementCompartmentType = Set{"packaged elements","PackageableElement", "Model"};
property literalCompartmentType = "literals";
property slotCompartmentType = "slots";
property templateParameterCompartmentType = "TemplateParameter"; 
property internalStructueCompartmentType = Set {"Internal Structure", "internal structure"};
property nestedNodeCompartmentType = Set {"Composite", "DeviceComposite", "ExecutionEnvironmentComposite"};
property nestedArtifactCompartmentType = "ArtifactComposite";
property nestedClassifierCompartmentType = "nested classifiers";
property useCaseCompartmentType = "use cases";
property extensionPointCompartmentType = "points";
property regionCompartmentType = Set {"StateMachine", "State"};
property subvertexCompartmentType = "Region";
property parameterCompartmentType = "ActivityFigureParameter";
property preConditionCompartmentType = "ActivityFigurePrecondition";
property postConditionCompartmentType = "ActivityFigurePostCondtion";
property activityNodeCompartmentType = Set{"ActivityFigureContent", "StructuredActivityNodeContent"};
property subpartitionCompartmentType = "ActivityPartitionContent";
property interruptibleActivityRegionCompartmentType = "InterruptibleActivityRegionContent";
property subfragmentCompartmentType = Set{"Interaction", "CombinedFragment"};
property timingCompartmentType = Set{"FullLifelineStateDefinition", "FullLifelineTimeline"};
property stateDefinitionCompartmentType = "FullLifelineStateDefinition";
property appliedStereotypeCompartmentType = 'AppliedStereotypeCompartment';

