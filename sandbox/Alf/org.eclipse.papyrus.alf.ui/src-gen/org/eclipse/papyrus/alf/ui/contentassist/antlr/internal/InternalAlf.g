/*
* generated by Xtext
*/
grammar InternalAlf;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.papyrus.alf.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.alf.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.alf.services.AlfGrammarAccess;

}

@parser::members {
 
 	private AlfGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AlfGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleUnitDefinition
entryRuleUnitDefinition 
:
{ before(grammarAccess.getUnitDefinitionRule()); }
	 ruleUnitDefinition
{ after(grammarAccess.getUnitDefinitionRule()); } 
	 EOF 
;

// Rule UnitDefinition
ruleUnitDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitDefinitionAccess().getGroup()); }
(rule__UnitDefinition__Group__0)
{ after(grammarAccess.getUnitDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN_LITERAL
entryRuleBOOLEAN_LITERAL 
:
{ before(grammarAccess.getBOOLEAN_LITERALRule()); }
	 ruleBOOLEAN_LITERAL
{ after(grammarAccess.getBOOLEAN_LITERALRule()); } 
	 EOF 
;

// Rule BOOLEAN_LITERAL
ruleBOOLEAN_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getValueAssignment()); }
(rule__BOOLEAN_LITERAL__ValueAssignment)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUMBER_LITERAL
entryRuleNUMBER_LITERAL 
:
{ before(grammarAccess.getNUMBER_LITERALRule()); }
	 ruleNUMBER_LITERAL
{ after(grammarAccess.getNUMBER_LITERALRule()); } 
	 EOF 
;

// Rule NUMBER_LITERAL
ruleNUMBER_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBER_LITERALAccess().getAlternatives()); }
(rule__NUMBER_LITERAL__Alternatives)
{ after(grammarAccess.getNUMBER_LITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTEGER_LITERAL
entryRuleINTEGER_LITERAL 
:
{ before(grammarAccess.getINTEGER_LITERALRule()); }
	 ruleINTEGER_LITERAL
{ after(grammarAccess.getINTEGER_LITERALRule()); } 
	 EOF 
;

// Rule INTEGER_LITERAL
ruleINTEGER_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTEGER_LITERALAccess().getValueAssignment()); }
(rule__INTEGER_LITERAL__ValueAssignment)
{ after(grammarAccess.getINTEGER_LITERALAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUNLIMITED_NATURAL
entryRuleUNLIMITED_NATURAL 
:
{ before(grammarAccess.getUNLIMITED_NATURALRule()); }
	 ruleUNLIMITED_NATURAL
{ after(grammarAccess.getUNLIMITED_NATURALRule()); } 
	 EOF 
;

// Rule UNLIMITED_NATURAL
ruleUNLIMITED_NATURAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUNLIMITED_NATURALAccess().getValueAssignment()); }
(rule__UNLIMITED_NATURAL__ValueAssignment)
{ after(grammarAccess.getUNLIMITED_NATURALAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRING_LITERAL
entryRuleSTRING_LITERAL 
:
{ before(grammarAccess.getSTRING_LITERALRule()); }
	 ruleSTRING_LITERAL
{ after(grammarAccess.getSTRING_LITERALRule()); } 
	 EOF 
;

// Rule STRING_LITERAL
ruleSTRING_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment()); }
(rule__STRING_LITERAL__ValueAssignment)
{ after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStereotypeAnnotations
entryRuleStereotypeAnnotations 
:
{ before(grammarAccess.getStereotypeAnnotationsRule()); }
	 ruleStereotypeAnnotations
{ after(grammarAccess.getStereotypeAnnotationsRule()); } 
	 EOF 
;

// Rule StereotypeAnnotations
ruleStereotypeAnnotations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStereotypeAnnotationsAccess().getGroup()); }
(rule__StereotypeAnnotations__Group__0)
{ after(grammarAccess.getStereotypeAnnotationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStereotypeAnnotation
entryRuleStereotypeAnnotation 
:
{ before(grammarAccess.getStereotypeAnnotationRule()); }
	 ruleStereotypeAnnotation
{ after(grammarAccess.getStereotypeAnnotationRule()); } 
	 EOF 
;

// Rule StereotypeAnnotation
ruleStereotypeAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getGroup()); }
(rule__StereotypeAnnotation__Group__0)
{ after(grammarAccess.getStereotypeAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaggedValues
entryRuleTaggedValues 
:
{ before(grammarAccess.getTaggedValuesRule()); }
	 ruleTaggedValues
{ after(grammarAccess.getTaggedValuesRule()); } 
	 EOF 
;

// Rule TaggedValues
ruleTaggedValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaggedValuesAccess().getAlternatives()); }
(rule__TaggedValues__Alternatives)
{ after(grammarAccess.getTaggedValuesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaggedValueList
entryRuleTaggedValueList 
:
{ before(grammarAccess.getTaggedValueListRule()); }
	 ruleTaggedValueList
{ after(grammarAccess.getTaggedValueListRule()); } 
	 EOF 
;

// Rule TaggedValueList
ruleTaggedValueList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaggedValueListAccess().getGroup()); }
(rule__TaggedValueList__Group__0)
{ after(grammarAccess.getTaggedValueListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePRIMITIVE_LITERAL
entryRulePRIMITIVE_LITERAL 
:
{ before(grammarAccess.getPRIMITIVE_LITERALRule()); }
	 rulePRIMITIVE_LITERAL
{ after(grammarAccess.getPRIMITIVE_LITERALRule()); } 
	 EOF 
;

// Rule PRIMITIVE_LITERAL
rulePRIMITIVE_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPRIMITIVE_LITERALAccess().getAlternatives()); }
(rule__PRIMITIVE_LITERAL__Alternatives)
{ after(grammarAccess.getPRIMITIVE_LITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaggedValue
entryRuleTaggedValue 
:
{ before(grammarAccess.getTaggedValueRule()); }
	 ruleTaggedValue
{ after(grammarAccess.getTaggedValueRule()); } 
	 EOF 
;

// Rule TaggedValue
ruleTaggedValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaggedValueAccess().getGroup()); }
(rule__TaggedValue__Group__0)
{ after(grammarAccess.getTaggedValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportReference
entryRuleImportReference 
:
{ before(grammarAccess.getImportReferenceRule()); }
	 ruleImportReference
{ after(grammarAccess.getImportReferenceRule()); } 
	 EOF 
;

// Rule ImportReference
ruleImportReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportReferenceAccess().getGroup()); }
(rule__ImportReference__Group__0)
{ after(grammarAccess.getImportReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportReferenceQualifiedNameCompletion
entryRuleImportReferenceQualifiedNameCompletion 
:
{ before(grammarAccess.getImportReferenceQualifiedNameCompletionRule()); }
	 ruleImportReferenceQualifiedNameCompletion
{ after(grammarAccess.getImportReferenceQualifiedNameCompletionRule()); } 
	 EOF 
;

// Rule ImportReferenceQualifiedNameCompletion
ruleImportReferenceQualifiedNameCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportReferenceQualifiedNameCompletionAccess().getColonQualifiedNameCompletionOfImportReferenceParserRuleCall()); }
	ruleColonQualifiedNameCompletionOfImportReference
{ after(grammarAccess.getImportReferenceQualifiedNameCompletionAccess().getColonQualifiedNameCompletionOfImportReferenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColonQualifiedNameCompletionOfImportReference
entryRuleColonQualifiedNameCompletionOfImportReference 
:
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceRule()); }
	 ruleColonQualifiedNameCompletionOfImportReference
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceRule()); } 
	 EOF 
;

// Rule ColonQualifiedNameCompletionOfImportReference
ruleColonQualifiedNameCompletionOfImportReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup()); }
(rule__ColonQualifiedNameCompletionOfImportReference__Group__0)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasDefinition
entryRuleAliasDefinition 
:
{ before(grammarAccess.getAliasDefinitionRule()); }
	 ruleAliasDefinition
{ after(grammarAccess.getAliasDefinitionRule()); } 
	 EOF 
;

// Rule AliasDefinition
ruleAliasDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasDefinitionAccess().getGroup()); }
(rule__AliasDefinition__Group__0)
{ after(grammarAccess.getAliasDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDefinition
entryRuleNamespaceDefinition 
:
{ before(grammarAccess.getNamespaceDefinitionRule()); }
	 ruleNamespaceDefinition
{ after(grammarAccess.getNamespaceDefinitionRule()); } 
	 EOF 
;

// Rule NamespaceDefinition
ruleNamespaceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getAlternatives()); }
(rule__NamespaceDefinition__Alternatives)
{ after(grammarAccess.getNamespaceDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibilityIndicator
entryRuleVisibilityIndicator 
:
{ before(grammarAccess.getVisibilityIndicatorRule()); }
	 ruleVisibilityIndicator
{ after(grammarAccess.getVisibilityIndicatorRule()); } 
	 EOF 
;

// Rule VisibilityIndicator
ruleVisibilityIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
(rule__VisibilityIndicator__Alternatives)
{ after(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinition
entryRulePackageDefinition 
:
{ before(grammarAccess.getPackageDefinitionRule()); }
	 rulePackageDefinition
{ after(grammarAccess.getPackageDefinitionRule()); } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
(rule__PackageDefinition__Group__0)
{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinitionOrStub
entryRulePackageDefinitionOrStub 
:
{ before(grammarAccess.getPackageDefinitionOrStubRule()); }
	 rulePackageDefinitionOrStub
{ after(grammarAccess.getPackageDefinitionOrStubRule()); } 
	 EOF 
;

// Rule PackageDefinitionOrStub
rulePackageDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getGroup()); }
(rule__PackageDefinitionOrStub__Group__0)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageBody
entryRulePackageBody 
:
{ before(grammarAccess.getPackageBodyRule()); }
	 rulePackageBody
{ after(grammarAccess.getPackageBodyRule()); } 
	 EOF 
;

// Rule PackageBody
rulePackageBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageBodyAccess().getGroup()); }
(rule__PackageBody__Group__0)
{ after(grammarAccess.getPackageBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackagedElement
entryRulePackagedElement 
:
{ before(grammarAccess.getPackagedElementRule()); }
	 rulePackagedElement
{ after(grammarAccess.getPackagedElementRule()); } 
	 EOF 
;

// Rule PackagedElement
rulePackagedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackagedElementAccess().getGroup()); }
(rule__PackagedElement__Group__0)
{ after(grammarAccess.getPackagedElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackagedElementDefinition
entryRulePackagedElementDefinition 
:
{ before(grammarAccess.getPackagedElementDefinitionRule()); }
	 rulePackagedElementDefinition
{ after(grammarAccess.getPackagedElementDefinitionRule()); } 
	 EOF 
;

// Rule PackagedElementDefinition
rulePackagedElementDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives()); }
(rule__PackagedElementDefinition__Alternatives)
{ after(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierDefinition
entryRuleClassifierDefinition 
:
{ before(grammarAccess.getClassifierDefinitionRule()); }
	 ruleClassifierDefinition
{ after(grammarAccess.getClassifierDefinitionRule()); } 
	 EOF 
;

// Rule ClassifierDefinition
ruleClassifierDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierDefinitionAccess().getAlternatives()); }
(rule__ClassifierDefinition__Alternatives)
{ after(grammarAccess.getClassifierDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierDefinitionOrStub
entryRuleClassifierDefinitionOrStub 
:
{ before(grammarAccess.getClassifierDefinitionOrStubRule()); }
	 ruleClassifierDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ClassifierDefinitionOrStub
ruleClassifierDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getAlternatives()); }
(rule__ClassifierDefinitionOrStub__Alternatives)
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierSignature
entryRuleClassifierSignature 
:
{ before(grammarAccess.getClassifierSignatureRule()); }
	 ruleClassifierSignature
{ after(grammarAccess.getClassifierSignatureRule()); } 
	 EOF 
;

// Rule ClassifierSignature
ruleClassifierSignature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierSignatureAccess().getGroup()); }
(rule__ClassifierSignature__Group__0)
{ after(grammarAccess.getClassifierSignatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateParameters
entryRuleTemplateParameters 
:
{ before(grammarAccess.getTemplateParametersRule()); }
	 ruleTemplateParameters
{ after(grammarAccess.getTemplateParametersRule()); } 
	 EOF 
;

// Rule TemplateParameters
ruleTemplateParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateParametersAccess().getGroup()); }
(rule__TemplateParameters__Group__0)
{ after(grammarAccess.getTemplateParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierTemplateParameter
entryRuleClassifierTemplateParameter 
:
{ before(grammarAccess.getClassifierTemplateParameterRule()); }
	 ruleClassifierTemplateParameter
{ after(grammarAccess.getClassifierTemplateParameterRule()); } 
	 EOF 
;

// Rule ClassifierTemplateParameter
ruleClassifierTemplateParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getGroup()); }
(rule__ClassifierTemplateParameter__Group__0)
{ after(grammarAccess.getClassifierTemplateParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecializationClause
entryRuleSpecializationClause 
:
{ before(grammarAccess.getSpecializationClauseRule()); }
	 ruleSpecializationClause
{ after(grammarAccess.getSpecializationClauseRule()); } 
	 EOF 
;

// Rule SpecializationClause
ruleSpecializationClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecializationClauseAccess().getGroup()); }
(rule__SpecializationClause__Group__0)
{ after(grammarAccess.getSpecializationClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
(rule__ClassDeclaration__Group__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDefinition
entryRuleClassDefinition 
:
{ before(grammarAccess.getClassDefinitionRule()); }
	 ruleClassDefinition
{ after(grammarAccess.getClassDefinitionRule()); } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefinitionAccess().getGroup()); }
(rule__ClassDefinition__Group__0)
{ after(grammarAccess.getClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDefinitionOrStub
entryRuleClassDefinitionOrStub 
:
{ before(grammarAccess.getClassDefinitionOrStubRule()); }
	 ruleClassDefinitionOrStub
{ after(grammarAccess.getClassDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ClassDefinitionOrStub
ruleClassDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getGroup()); }
(rule__ClassDefinitionOrStub__Group__0)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassBody
entryRuleClassBody 
:
{ before(grammarAccess.getClassBodyRule()); }
	 ruleClassBody
{ after(grammarAccess.getClassBodyRule()); } 
	 EOF 
;

// Rule ClassBody
ruleClassBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassBodyAccess().getGroup()); }
(rule__ClassBody__Group__0)
{ after(grammarAccess.getClassBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMember
entryRuleClassMember 
:
{ before(grammarAccess.getClassMemberRule()); }
	 ruleClassMember
{ after(grammarAccess.getClassMemberRule()); } 
	 EOF 
;

// Rule ClassMember
ruleClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberAccess().getGroup()); }
(rule__ClassMember__Group__0)
{ after(grammarAccess.getClassMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMemberDefinition
entryRuleClassMemberDefinition 
:
{ before(grammarAccess.getClassMemberDefinitionRule()); }
	 ruleClassMemberDefinition
{ after(grammarAccess.getClassMemberDefinitionRule()); } 
	 EOF 
;

// Rule ClassMemberDefinition
ruleClassMemberDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberDefinitionAccess().getAlternatives()); }
(rule__ClassMemberDefinition__Alternatives)
{ after(grammarAccess.getClassMemberDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDeclaration
entryRuleActiveClassDeclaration 
:
{ before(grammarAccess.getActiveClassDeclarationRule()); }
	 ruleActiveClassDeclaration
{ after(grammarAccess.getActiveClassDeclarationRule()); } 
	 EOF 
;

// Rule ActiveClassDeclaration
ruleActiveClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getGroup()); }
(rule__ActiveClassDeclaration__Group__0)
{ after(grammarAccess.getActiveClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDefinition
entryRuleActiveClassDefinition 
:
{ before(grammarAccess.getActiveClassDefinitionRule()); }
	 ruleActiveClassDefinition
{ after(grammarAccess.getActiveClassDefinitionRule()); } 
	 EOF 
;

// Rule ActiveClassDefinition
ruleActiveClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getGroup()); }
(rule__ActiveClassDefinition__Group__0)
{ after(grammarAccess.getActiveClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDefinitionOrStub
entryRuleActiveClassDefinitionOrStub 
:
{ before(grammarAccess.getActiveClassDefinitionOrStubRule()); }
	 ruleActiveClassDefinitionOrStub
{ after(grammarAccess.getActiveClassDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActiveClassDefinitionOrStub
ruleActiveClassDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup()); }
(rule__ActiveClassDefinitionOrStub__Group__0)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassBody
entryRuleActiveClassBody 
:
{ before(grammarAccess.getActiveClassBodyRule()); }
	 ruleActiveClassBody
{ after(grammarAccess.getActiveClassBodyRule()); } 
	 EOF 
;

// Rule ActiveClassBody
ruleActiveClassBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassBodyAccess().getGroup()); }
(rule__ActiveClassBody__Group__0)
{ after(grammarAccess.getActiveClassBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorClause
entryRuleBehaviorClause 
:
{ before(grammarAccess.getBehaviorClauseRule()); }
	 ruleBehaviorClause
{ after(grammarAccess.getBehaviorClauseRule()); } 
	 EOF 
;

// Rule BehaviorClause
ruleBehaviorClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorClauseAccess().getAlternatives()); }
(rule__BehaviorClause__Alternatives)
{ after(grammarAccess.getBehaviorClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassMember
entryRuleActiveClassMember 
:
{ before(grammarAccess.getActiveClassMemberRule()); }
	 ruleActiveClassMember
{ after(grammarAccess.getActiveClassMemberRule()); } 
	 EOF 
;

// Rule ActiveClassMember
ruleActiveClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassMemberAccess().getGroup()); }
(rule__ActiveClassMember__Group__0)
{ after(grammarAccess.getActiveClassMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassMemberDefinition
entryRuleActiveClassMemberDefinition 
:
{ before(grammarAccess.getActiveClassMemberDefinitionRule()); }
	 ruleActiveClassMemberDefinition
{ after(grammarAccess.getActiveClassMemberDefinitionRule()); } 
	 EOF 
;

// Rule ActiveClassMemberDefinition
ruleActiveClassMemberDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getAlternatives()); }
(rule__ActiveClassMemberDefinition__Alternatives)
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration 
:
{ before(grammarAccess.getDataTypeDeclarationRule()); }
	 ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDeclarationRule()); } 
	 EOF 
;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
(rule__DataTypeDeclaration__Group__0)
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition 
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
(rule__DataTypeDefinition__Group__0)
{ after(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinitionOrStub
entryRuleDataTypeDefinitionOrStub 
:
{ before(grammarAccess.getDataTypeDefinitionOrStubRule()); }
	 ruleDataTypeDefinitionOrStub
{ after(grammarAccess.getDataTypeDefinitionOrStubRule()); } 
	 EOF 
;

// Rule DataTypeDefinitionOrStub
ruleDataTypeDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup()); }
(rule__DataTypeDefinitionOrStub__Group__0)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructuredBody
entryRuleStructuredBody 
:
{ before(grammarAccess.getStructuredBodyRule()); }
	 ruleStructuredBody
{ after(grammarAccess.getStructuredBodyRule()); } 
	 EOF 
;

// Rule StructuredBody
ruleStructuredBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructuredBodyAccess().getGroup()); }
(rule__StructuredBody__Group__0)
{ after(grammarAccess.getStructuredBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructuredMember
entryRuleStructuredMember 
:
{ before(grammarAccess.getStructuredMemberRule()); }
	 ruleStructuredMember
{ after(grammarAccess.getStructuredMemberRule()); } 
	 EOF 
;

// Rule StructuredMember
ruleStructuredMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructuredMemberAccess().getGroup()); }
(rule__StructuredMember__Group__0)
{ after(grammarAccess.getStructuredMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDeclaration
entryRuleAssociationDeclaration 
:
{ before(grammarAccess.getAssociationDeclarationRule()); }
	 ruleAssociationDeclaration
{ after(grammarAccess.getAssociationDeclarationRule()); } 
	 EOF 
;

// Rule AssociationDeclaration
ruleAssociationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
(rule__AssociationDeclaration__Group__0)
{ after(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDefinition
entryRuleAssociationDefinition 
:
{ before(grammarAccess.getAssociationDefinitionRule()); }
	 ruleAssociationDefinition
{ after(grammarAccess.getAssociationDefinitionRule()); } 
	 EOF 
;

// Rule AssociationDefinition
ruleAssociationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
(rule__AssociationDefinition__Group__0)
{ after(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDefinitionOrStub
entryRuleAssociationDefinitionOrStub 
:
{ before(grammarAccess.getAssociationDefinitionOrStubRule()); }
	 ruleAssociationDefinitionOrStub
{ after(grammarAccess.getAssociationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule AssociationDefinitionOrStub
ruleAssociationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup()); }
(rule__AssociationDefinitionOrStub__Group__0)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDeclaration
entryRuleEnumerationDeclaration 
:
{ before(grammarAccess.getEnumerationDeclarationRule()); }
	 ruleEnumerationDeclaration
{ after(grammarAccess.getEnumerationDeclarationRule()); } 
	 EOF 
;

// Rule EnumerationDeclaration
ruleEnumerationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getGroup()); }
(rule__EnumerationDeclaration__Group__0)
{ after(grammarAccess.getEnumerationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDefinition
entryRuleEnumerationDefinition 
:
{ before(grammarAccess.getEnumerationDefinitionRule()); }
	 ruleEnumerationDefinition
{ after(grammarAccess.getEnumerationDefinitionRule()); } 
	 EOF 
;

// Rule EnumerationDefinition
ruleEnumerationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
(rule__EnumerationDefinition__Group__0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDefinitionOrStub
entryRuleEnumerationDefinitionOrStub 
:
{ before(grammarAccess.getEnumerationDefinitionOrStubRule()); }
	 ruleEnumerationDefinitionOrStub
{ after(grammarAccess.getEnumerationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule EnumerationDefinitionOrStub
ruleEnumerationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup()); }
(rule__EnumerationDefinitionOrStub__Group__0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationBody
entryRuleEnumerationBody 
:
{ before(grammarAccess.getEnumerationBodyRule()); }
	 ruleEnumerationBody
{ after(grammarAccess.getEnumerationBodyRule()); } 
	 EOF 
;

// Rule EnumerationBody
ruleEnumerationBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationBodyAccess().getGroup()); }
(rule__EnumerationBody__Group__0)
{ after(grammarAccess.getEnumerationBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteralName
entryRuleEnumerationLiteralName 
:
{ before(grammarAccess.getEnumerationLiteralNameRule()); }
	 ruleEnumerationLiteralName
{ after(grammarAccess.getEnumerationLiteralNameRule()); } 
	 EOF 
;

// Rule EnumerationLiteralName
ruleEnumerationLiteralName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getGroup()); }
(rule__EnumerationLiteralName__Group__0)
{ after(grammarAccess.getEnumerationLiteralNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDeclaration
entryRuleSignalDeclaration 
:
{ before(grammarAccess.getSignalDeclarationRule()); }
	 ruleSignalDeclaration
{ after(grammarAccess.getSignalDeclarationRule()); } 
	 EOF 
;

// Rule SignalDeclaration
ruleSignalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup()); }
(rule__SignalDeclaration__Group__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDefinition
entryRuleSignalDefinition 
:
{ before(grammarAccess.getSignalDefinitionRule()); }
	 ruleSignalDefinition
{ after(grammarAccess.getSignalDefinitionRule()); } 
	 EOF 
;

// Rule SignalDefinition
ruleSignalDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDefinitionAccess().getGroup()); }
(rule__SignalDefinition__Group__0)
{ after(grammarAccess.getSignalDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDefinitionOrStub
entryRuleSignalDefinitionOrStub 
:
{ before(grammarAccess.getSignalDefinitionOrStubRule()); }
	 ruleSignalDefinitionOrStub
{ after(grammarAccess.getSignalDefinitionOrStubRule()); } 
	 EOF 
;

// Rule SignalDefinitionOrStub
ruleSignalDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getGroup()); }
(rule__SignalDefinitionOrStub__Group__0)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDeclaration
entryRuleActivityDeclaration 
:
{ before(grammarAccess.getActivityDeclarationRule()); }
	 ruleActivityDeclaration
{ after(grammarAccess.getActivityDeclarationRule()); } 
	 EOF 
;

// Rule ActivityDeclaration
ruleActivityDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup()); }
(rule__ActivityDeclaration__Group__0)
{ after(grammarAccess.getActivityDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDefinition
entryRuleActivityDefinition 
:
{ before(grammarAccess.getActivityDefinitionRule()); }
	 ruleActivityDefinition
{ after(grammarAccess.getActivityDefinitionRule()); } 
	 EOF 
;

// Rule ActivityDefinition
ruleActivityDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDefinitionAccess().getGroup()); }
(rule__ActivityDefinition__Group__0)
{ after(grammarAccess.getActivityDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDefinitionOrStub
entryRuleActivityDefinitionOrStub 
:
{ before(grammarAccess.getActivityDefinitionOrStubRule()); }
	 ruleActivityDefinitionOrStub
{ after(grammarAccess.getActivityDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActivityDefinitionOrStub
ruleActivityDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getGroup()); }
(rule__ActivityDefinitionOrStub__Group__0)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameters
entryRuleFormalParameters 
:
{ before(grammarAccess.getFormalParametersRule()); }
	 ruleFormalParameters
{ after(grammarAccess.getFormalParametersRule()); } 
	 EOF 
;

// Rule FormalParameters
ruleFormalParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParametersAccess().getGroup()); }
(rule__FormalParameters__Group__0)
{ after(grammarAccess.getFormalParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameterList
entryRuleFormalParameterList 
:
{ before(grammarAccess.getFormalParameterListRule()); }
	 ruleFormalParameterList
{ after(grammarAccess.getFormalParameterListRule()); } 
	 EOF 
;

// Rule FormalParameterList
ruleFormalParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterListAccess().getGroup()); }
(rule__FormalParameterList__Group__0)
{ after(grammarAccess.getFormalParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameter
entryRuleFormalParameter 
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup()); }
(rule__FormalParameter__Group__0)
{ after(grammarAccess.getFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureDefinitionOrStub
entryRuleFeatureDefinitionOrStub 
:
{ before(grammarAccess.getFeatureDefinitionOrStubRule()); }
	 ruleFeatureDefinitionOrStub
{ after(grammarAccess.getFeatureDefinitionOrStubRule()); } 
	 EOF 
;

// Rule FeatureDefinitionOrStub
ruleFeatureDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getAlternatives()); }
(rule__FeatureDefinitionOrStub__Alternatives)
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveFeatureDefinitionOrStub
entryRuleActiveFeatureDefinitionOrStub 
:
{ before(grammarAccess.getActiveFeatureDefinitionOrStubRule()); }
	 ruleActiveFeatureDefinitionOrStub
{ after(grammarAccess.getActiveFeatureDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActiveFeatureDefinitionOrStub
ruleActiveFeatureDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getAlternatives()); }
(rule__ActiveFeatureDefinitionOrStub__Alternatives)
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition 
:
{ before(grammarAccess.getPropertyDefinitionRule()); }
	 rulePropertyDefinition
{ after(grammarAccess.getPropertyDefinitionRule()); } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
(rule__PropertyDefinition__Group__0)
{ after(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition 
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
(rule__AttributeDefinition__Group__0)
{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeInitializer
entryRuleAttributeInitializer 
:
{ before(grammarAccess.getAttributeInitializerRule()); }
	 ruleAttributeInitializer
{ after(grammarAccess.getAttributeInitializerRule()); } 
	 EOF 
;

// Rule AttributeInitializer
ruleAttributeInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeInitializerAccess().getGroup()); }
(rule__AttributeInitializer__Group__0)
{ after(grammarAccess.getAttributeInitializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
(rule__PropertyDeclaration__Group__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypePart
entryRuleTypePart 
:
{ before(grammarAccess.getTypePartRule()); }
	 ruleTypePart
{ after(grammarAccess.getTypePartRule()); } 
	 EOF 
;

// Rule TypePart
ruleTypePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypePartAccess().getGroup()); }
(rule__TypePart__Group__0)
{ after(grammarAccess.getTypePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeName
entryRuleTypeName 
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
(rule__TypeName__Alternatives)
{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicity
entryRuleMultiplicity 
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
(rule__Multiplicity__Group__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicityRange
entryRuleMultiplicityRange 
:
{ before(grammarAccess.getMultiplicityRangeRule()); }
	 ruleMultiplicityRange
{ after(grammarAccess.getMultiplicityRangeRule()); } 
	 EOF 
;

// Rule MultiplicityRange
ruleMultiplicityRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getGroup()); }
(rule__MultiplicityRange__Group__0)
{ after(grammarAccess.getMultiplicityRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedNaturalLiteral
entryRuleUnlimitedNaturalLiteral 
:
{ before(grammarAccess.getUnlimitedNaturalLiteralRule()); }
	 ruleUnlimitedNaturalLiteral
{ after(grammarAccess.getUnlimitedNaturalLiteralRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalLiteral
ruleUnlimitedNaturalLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getAlternatives()); }
(rule__UnlimitedNaturalLiteral__Alternatives)
{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDeclaration
entryRuleOperationDeclaration 
:
{ before(grammarAccess.getOperationDeclarationRule()); }
	 ruleOperationDeclaration
{ after(grammarAccess.getOperationDeclarationRule()); } 
	 EOF 
;

// Rule OperationDeclaration
ruleOperationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDeclarationAccess().getGroup()); }
(rule__OperationDeclaration__Group__0)
{ after(grammarAccess.getOperationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDefinitionOrStub
entryRuleOperationDefinitionOrStub 
:
{ before(grammarAccess.getOperationDefinitionOrStubRule()); }
	 ruleOperationDefinitionOrStub
{ after(grammarAccess.getOperationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule OperationDefinitionOrStub
ruleOperationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getGroup()); }
(rule__OperationDefinitionOrStub__Group__0)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRedefinitionClause
entryRuleRedefinitionClause 
:
{ before(grammarAccess.getRedefinitionClauseRule()); }
	 ruleRedefinitionClause
{ after(grammarAccess.getRedefinitionClauseRule()); } 
	 EOF 
;

// Rule RedefinitionClause
ruleRedefinitionClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getGroup()); }
(rule__RedefinitionClause__Group__0)
{ after(grammarAccess.getRedefinitionClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReceptionDefinition
entryRuleReceptionDefinition 
:
{ before(grammarAccess.getReceptionDefinitionRule()); }
	 ruleReceptionDefinition
{ after(grammarAccess.getReceptionDefinitionRule()); } 
	 EOF 
;

// Rule ReceptionDefinition
ruleReceptionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getGroup()); }
(rule__ReceptionDefinition__Group__0)
{ after(grammarAccess.getReceptionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReceptionDeclaration
entryRuleSignalReceptionDeclaration 
:
{ before(grammarAccess.getSignalReceptionDeclarationRule()); }
	 ruleSignalReceptionDeclaration
{ after(grammarAccess.getSignalReceptionDeclarationRule()); } 
	 EOF 
;

// Rule SignalReceptionDeclaration
ruleSignalReceptionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getGroup()); }
(rule__SignalReceptionDeclaration__Group__0)
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReceptionDefinitionOrStub
entryRuleSignalReceptionDefinitionOrStub 
:
{ before(grammarAccess.getSignalReceptionDefinitionOrStubRule()); }
	 ruleSignalReceptionDefinitionOrStub
{ after(grammarAccess.getSignalReceptionDefinitionOrStubRule()); } 
	 EOF 
;

// Rule SignalReceptionDefinitionOrStub
ruleSignalReceptionDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup()); }
(rule__SignalReceptionDefinitionOrStub__Group__0)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getIdAssignment()); }
(rule__Name__IdAssignment)
{ after(grammarAccess.getNameAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColonQualifiedNameCompletion
entryRuleColonQualifiedNameCompletion 
:
{ before(grammarAccess.getColonQualifiedNameCompletionRule()); }
	 ruleColonQualifiedNameCompletion
{ after(grammarAccess.getColonQualifiedNameCompletionRule()); } 
	 EOF 
;

// Rule ColonQualifiedNameCompletion
ruleColonQualifiedNameCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getColonQualifiedNameCompletionAccess().getGroup()); }
(rule__ColonQualifiedNameCompletion__Group__0)
{ after(grammarAccess.getColonQualifiedNameCompletionAccess().getGroup()); }
)
(
{ before(grammarAccess.getColonQualifiedNameCompletionAccess().getGroup()); }
(rule__ColonQualifiedNameCompletion__Group__0)*
{ after(grammarAccess.getColonQualifiedNameCompletionAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnqualifiedName
entryRuleUnqualifiedName 
:
{ before(grammarAccess.getUnqualifiedNameRule()); }
	 ruleUnqualifiedName
{ after(grammarAccess.getUnqualifiedNameRule()); } 
	 EOF 
;

// Rule UnqualifiedName
ruleUnqualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualifiedNameAccess().getNameBindingParserRuleCall()); }
	ruleNameBinding
{ after(grammarAccess.getUnqualifiedNameAccess().getNameBindingParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameBinding
entryRuleNameBinding 
:
{ before(grammarAccess.getNameBindingRule()); }
	 ruleNameBinding
{ after(grammarAccess.getNameBindingRule()); } 
	 EOF 
;

// Rule NameBinding
ruleNameBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameBindingAccess().getGroup()); }
(rule__NameBinding__Group__0)
{ after(grammarAccess.getNameBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithoutBinding
entryRuleQualifiedNameWithoutBinding 
:
{ before(grammarAccess.getQualifiedNameWithoutBindingRule()); }
	 ruleQualifiedNameWithoutBinding
{ after(grammarAccess.getQualifiedNameWithoutBindingRule()); } 
	 EOF 
;

// Rule QualifiedNameWithoutBinding
ruleQualifiedNameWithoutBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithoutBindingAccess().getGroup()); }
(rule__QualifiedNameWithoutBinding__Group__0)
{ after(grammarAccess.getQualifiedNameWithoutBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColonQualifiedNameCompletionWithoutBinding
entryRuleColonQualifiedNameCompletionWithoutBinding 
:
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingRule()); }
	 ruleColonQualifiedNameCompletionWithoutBinding
{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingRule()); } 
	 EOF 
;

// Rule ColonQualifiedNameCompletionWithoutBinding
ruleColonQualifiedNameCompletionWithoutBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getGroup()); }
(rule__ColonQualifiedNameCompletionWithoutBinding__Group__0)
{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getGroup()); }
)
(
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getGroup()); }
(rule__ColonQualifiedNameCompletionWithoutBinding__Group__0)*
{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateBinding
entryRuleTemplateBinding 
:
{ before(grammarAccess.getTemplateBindingRule()); }
	 ruleTemplateBinding
{ after(grammarAccess.getTemplateBindingRule()); } 
	 EOF 
;

// Rule TemplateBinding
ruleTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateBindingAccess().getGroup()); }
(rule__TemplateBinding__Group__0)
{ after(grammarAccess.getTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalTemplateBinding
entryRulePositionalTemplateBinding 
:
{ before(grammarAccess.getPositionalTemplateBindingRule()); }
	 rulePositionalTemplateBinding
{ after(grammarAccess.getPositionalTemplateBindingRule()); } 
	 EOF 
;

// Rule PositionalTemplateBinding
rulePositionalTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getGroup()); }
(rule__PositionalTemplateBinding__Group__0)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTemplateBinding
entryRuleNamedTemplateBinding 
:
{ before(grammarAccess.getNamedTemplateBindingRule()); }
	 ruleNamedTemplateBinding
{ after(grammarAccess.getNamedTemplateBindingRule()); } 
	 EOF 
;

// Rule NamedTemplateBinding
ruleNamedTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getGroup()); }
(rule__NamedTemplateBinding__Group__0)
{ after(grammarAccess.getNamedTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateParameterSubstitution
entryRuleTemplateParameterSubstitution 
:
{ before(grammarAccess.getTemplateParameterSubstitutionRule()); }
	 ruleTemplateParameterSubstitution
{ after(grammarAccess.getTemplateParameterSubstitutionRule()); } 
	 EOF 
;

// Rule TemplateParameterSubstitution
ruleTemplateParameterSubstitution
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getGroup()); }
(rule__TemplateParameterSubstitution__Group__0)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonNameExpression
entryRuleNonNameExpression 
:
{ before(grammarAccess.getNonNameExpressionRule()); }
	 ruleNonNameExpression
{ after(grammarAccess.getNonNameExpressionRule()); } 
	 EOF 
;

// Rule NonNameExpression
ruleNonNameExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonNameExpressionAccess().getGroup()); }
(rule__NonNameExpression__Group__0)
{ after(grammarAccess.getNonNameExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameToExpressionCompletion
entryRuleNameToExpressionCompletion 
:
{ before(grammarAccess.getNameToExpressionCompletionRule()); }
	 ruleNameToExpressionCompletion
{ after(grammarAccess.getNameToExpressionCompletionRule()); } 
	 EOF 
;

// Rule NameToExpressionCompletion
ruleNameToExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameToExpressionCompletionAccess().getGroup()); }
(rule__NameToExpressionCompletion__Group__0)
{ after(grammarAccess.getNameToExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryToExpressionCompletion
entryRulePrimaryToExpressionCompletion 
:
{ before(grammarAccess.getPrimaryToExpressionCompletionRule()); }
	 rulePrimaryToExpressionCompletion
{ after(grammarAccess.getPrimaryToExpressionCompletionRule()); } 
	 EOF 
;

// Rule PrimaryToExpressionCompletion
rulePrimaryToExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryToExpressionCompletionAccess().getGroup()); }
(rule__PrimaryToExpressionCompletion__Group__0)
{ after(grammarAccess.getPrimaryToExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionCompletion
entryRuleExpressionCompletion 
:
{ before(grammarAccess.getExpressionCompletionRule()); }
	 ruleExpressionCompletion
{ after(grammarAccess.getExpressionCompletionRule()); } 
	 EOF 
;

// Rule ExpressionCompletion
ruleExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionCompletionAccess().getAlternatives()); }
(rule__ExpressionCompletion__Alternatives)
{ after(grammarAccess.getExpressionCompletionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseExpression
entryRuleBaseExpression 
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
(rule__BaseExpression__Alternatives)
{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameToPrimaryExpression
entryRuleNameToPrimaryExpression 
:
{ before(grammarAccess.getNameToPrimaryExpressionRule()); }
	 ruleNameToPrimaryExpression
{ after(grammarAccess.getNameToPrimaryExpressionRule()); } 
	 EOF 
;

// Rule NameToPrimaryExpression
ruleNameToPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getAlternatives()); }
(rule__NameToPrimaryExpression__Alternatives)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpressionCompletion
entryRulePrimaryExpressionCompletion 
:
{ before(grammarAccess.getPrimaryExpressionCompletionRule()); }
	 rulePrimaryExpressionCompletion
{ after(grammarAccess.getPrimaryExpressionCompletionRule()); } 
	 EOF 
;

// Rule PrimaryExpressionCompletion
rulePrimaryExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getPrimaryExpressionCompletionAccess().getContentAssignment()); }
(rule__PrimaryExpressionCompletion__ContentAssignment)
{ after(grammarAccess.getPrimaryExpressionCompletionAccess().getContentAssignment()); }
)
(
{ before(grammarAccess.getPrimaryExpressionCompletionAccess().getContentAssignment()); }
(rule__PrimaryExpressionCompletion__ContentAssignment)*
{ after(grammarAccess.getPrimaryExpressionCompletionAccess().getContentAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature_Or_SequenceOperationOrReductionOrExpansion_Or_Index
entryRuleFeature_Or_SequenceOperationOrReductionOrExpansion_Or_Index 
:
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexRule()); }
	 ruleFeature_Or_SequenceOperationOrReductionOrExpansion_Or_Index
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexRule()); } 
	 EOF 
;

// Rule Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index
ruleFeature_Or_SequenceOperationOrReductionOrExpansion_Or_Index
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getAlternatives()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Alternatives)
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression 
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionAccess().getExpressionAssignment()); }
(rule__LiteralExpression__ExpressionAssignment)
{ after(grammarAccess.getLiteralExpressionAccess().getExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameOrPrimaryExpression
entryRuleNameOrPrimaryExpression 
:
{ before(grammarAccess.getNameOrPrimaryExpressionRule()); }
	 ruleNameOrPrimaryExpression
{ after(grammarAccess.getNameOrPrimaryExpressionRule()); } 
	 EOF 
;

// Rule NameOrPrimaryExpression
ruleNameOrPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameOrPrimaryExpressionAccess().getGroup()); }
(rule__NameOrPrimaryExpression__Group__0)
{ after(grammarAccess.getNameOrPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisExpression
entryRuleThisExpression 
:
{ before(grammarAccess.getThisExpressionRule()); }
	 ruleThisExpression
{ after(grammarAccess.getThisExpressionRule()); } 
	 EOF 
;

// Rule ThisExpression
ruleThisExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisExpressionAccess().getGroup()); }
(rule__ThisExpression__Group__0)
{ after(grammarAccess.getThisExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getGroup()); }
(rule__Feature__Group__0)
{ after(grammarAccess.getFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTuple
entryRuleTuple 
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleAccess().getGroup()); }
(rule__Tuple__Group__0)
{ after(grammarAccess.getTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalTupleExpressionList
entryRulePositionalTupleExpressionList 
:
{ before(grammarAccess.getPositionalTupleExpressionListRule()); }
	 rulePositionalTupleExpressionList
{ after(grammarAccess.getPositionalTupleExpressionListRule()); } 
	 EOF 
;

// Rule PositionalTupleExpressionList
rulePositionalTupleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getGroup()); }
(rule__PositionalTupleExpressionList__Group__0)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalTupleExpressionListCompletion
entryRulePositionalTupleExpressionListCompletion 
:
{ before(grammarAccess.getPositionalTupleExpressionListCompletionRule()); }
	 rulePositionalTupleExpressionListCompletion
{ after(grammarAccess.getPositionalTupleExpressionListCompletionRule()); } 
	 EOF 
;

// Rule PositionalTupleExpressionListCompletion
rulePositionalTupleExpressionListCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getGroup()); }
(rule__PositionalTupleExpressionListCompletion__Group__0)
{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTupleExpressionList
entryRuleNamedTupleExpressionList 
:
{ before(grammarAccess.getNamedTupleExpressionListRule()); }
	 ruleNamedTupleExpressionList
{ after(grammarAccess.getNamedTupleExpressionListRule()); } 
	 EOF 
;

// Rule NamedTupleExpressionList
ruleNamedTupleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getGroup()); }
(rule__NamedTupleExpressionList__Group__0)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedExpression
entryRuleNamedExpression 
:
{ before(grammarAccess.getNamedExpressionRule()); }
	 ruleNamedExpression
{ after(grammarAccess.getNamedExpressionRule()); } 
	 EOF 
;

// Rule NamedExpression
ruleNamedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedExpressionAccess().getGroup()); }
(rule__NamedExpression__Group__0)
{ after(grammarAccess.getNamedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorInvocation
entryRuleBehaviorInvocation 
:
{ before(grammarAccess.getBehaviorInvocationRule()); }
	 ruleBehaviorInvocation
{ after(grammarAccess.getBehaviorInvocationRule()); } 
	 EOF 
;

// Rule BehaviorInvocation
ruleBehaviorInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorInvocationAccess().getTupleAssignment()); }
(rule__BehaviorInvocation__TupleAssignment)
{ after(grammarAccess.getBehaviorInvocationAccess().getTupleAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureInvocation
entryRuleFeatureInvocation 
:
{ before(grammarAccess.getFeatureInvocationRule()); }
	 ruleFeatureInvocation
{ after(grammarAccess.getFeatureInvocationRule()); } 
	 EOF 
;

// Rule FeatureInvocation
ruleFeatureInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureInvocationAccess().getTupleAssignment()); }
(rule__FeatureInvocation__TupleAssignment)
{ after(grammarAccess.getFeatureInvocationAccess().getTupleAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperInvocationExpression
entryRuleSuperInvocationExpression 
:
{ before(grammarAccess.getSuperInvocationExpressionRule()); }
	 ruleSuperInvocationExpression
{ after(grammarAccess.getSuperInvocationExpressionRule()); } 
	 EOF 
;

// Rule SuperInvocationExpression
ruleSuperInvocationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getGroup()); }
(rule__SuperInvocationExpression__Group__0)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceCreationOrSequenceConstructionExpression
entryRuleInstanceCreationOrSequenceConstructionExpression 
:
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule()); }
	 ruleInstanceCreationOrSequenceConstructionExpression
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule()); } 
	 EOF 
;

// Rule InstanceCreationOrSequenceConstructionExpression
ruleInstanceCreationOrSequenceConstructionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Group__0)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkOperationCompletion
entryRuleLinkOperationCompletion 
:
{ before(grammarAccess.getLinkOperationCompletionRule()); }
	 ruleLinkOperationCompletion
{ after(grammarAccess.getLinkOperationCompletionRule()); } 
	 EOF 
;

// Rule LinkOperationCompletion
ruleLinkOperationCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkOperationCompletionAccess().getGroup()); }
(rule__LinkOperationCompletion__Group__0)
{ after(grammarAccess.getLinkOperationCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkOperationTuple
entryRuleLinkOperationTuple 
:
{ before(grammarAccess.getLinkOperationTupleRule()); }
	 ruleLinkOperationTuple
{ after(grammarAccess.getLinkOperationTupleRule()); } 
	 EOF 
;

// Rule LinkOperationTuple
ruleLinkOperationTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup()); }
(rule__LinkOperationTuple__Group__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedNamedExpressionListCompletion
entryRuleIndexedNamedExpressionListCompletion 
:
{ before(grammarAccess.getIndexedNamedExpressionListCompletionRule()); }
	 ruleIndexedNamedExpressionListCompletion
{ after(grammarAccess.getIndexedNamedExpressionListCompletionRule()); } 
	 EOF 
;

// Rule IndexedNamedExpressionListCompletion
ruleIndexedNamedExpressionListCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getGroup()); }
(rule__IndexedNamedExpressionListCompletion__Group__0)
{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedNamedExpression
entryRuleIndexedNamedExpression 
:
{ before(grammarAccess.getIndexedNamedExpressionRule()); }
	 ruleIndexedNamedExpression
{ after(grammarAccess.getIndexedNamedExpressionRule()); } 
	 EOF 
;

// Rule IndexedNamedExpression
ruleIndexedNamedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getGroup()); }
(rule__IndexedNamedExpression__Group__0)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassExtentExpressionCompletion
entryRuleClassExtentExpressionCompletion 
:
{ before(grammarAccess.getClassExtentExpressionCompletionRule()); }
	 ruleClassExtentExpressionCompletion
{ after(grammarAccess.getClassExtentExpressionCompletionRule()); } 
	 EOF 
;

// Rule ClassExtentExpressionCompletion
ruleClassExtentExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassExtentExpressionCompletionAccess().getGroup()); }
(rule__ClassExtentExpressionCompletion__Group__0)
{ after(grammarAccess.getClassExtentExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceAnyExpression
entryRuleSequenceAnyExpression 
:
{ before(grammarAccess.getSequenceAnyExpressionRule()); }
	 ruleSequenceAnyExpression
{ after(grammarAccess.getSequenceAnyExpressionRule()); } 
	 EOF 
;

// Rule SequenceAnyExpression
ruleSequenceAnyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getGroup()); }
(rule__SequenceAnyExpression__Group__0)
{ after(grammarAccess.getSequenceAnyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceConstructionExpressionCompletion
entryRuleSequenceConstructionExpressionCompletion 
:
{ before(grammarAccess.getSequenceConstructionExpressionCompletionRule()); }
	 ruleSequenceConstructionExpressionCompletion
{ after(grammarAccess.getSequenceConstructionExpressionCompletionRule()); } 
	 EOF 
;

// Rule SequenceConstructionExpressionCompletion
ruleSequenceConstructionExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getGroup()); }
(rule__SequenceConstructionExpressionCompletion__Group__0)
{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicityIndicator
entryRuleMultiplicityIndicator 
:
{ before(grammarAccess.getMultiplicityIndicatorRule()); }
	 ruleMultiplicityIndicator
{ after(grammarAccess.getMultiplicityIndicatorRule()); } 
	 EOF 
;

// Rule MultiplicityIndicator
ruleMultiplicityIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getGroup()); }
(rule__MultiplicityIndicator__Group__0)
{ after(grammarAccess.getMultiplicityIndicatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceElements
entryRuleSequenceElements 
:
{ before(grammarAccess.getSequenceElementsRule()); }
	 ruleSequenceElements
{ after(grammarAccess.getSequenceElementsRule()); } 
	 EOF 
;

// Rule SequenceElements
ruleSequenceElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceElementsAccess().getAlternatives()); }
(rule__SequenceElements__Alternatives)
{ after(grammarAccess.getSequenceElementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceElementListCompletion
entryRuleSequenceElementListCompletion 
:
{ before(grammarAccess.getSequenceElementListCompletionRule()); }
	 ruleSequenceElementListCompletion
{ after(grammarAccess.getSequenceElementListCompletionRule()); } 
	 EOF 
;

// Rule SequenceElementListCompletion
ruleSequenceElementListCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getGroup()); }
(rule__SequenceElementListCompletion__Group__0)
{ after(grammarAccess.getSequenceElementListCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceElement
entryRuleSequenceElement 
:
{ before(grammarAccess.getSequenceElementRule()); }
	 ruleSequenceElement
{ after(grammarAccess.getSequenceElementRule()); } 
	 EOF 
;

// Rule SequenceElement
ruleSequenceElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceElementAccess().getAlternatives()); }
(rule__SequenceElement__Alternatives)
{ after(grammarAccess.getSequenceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceInitializationExpression
entryRuleSequenceInitializationExpression 
:
{ before(grammarAccess.getSequenceInitializationExpressionRule()); }
	 ruleSequenceInitializationExpression
{ after(grammarAccess.getSequenceInitializationExpressionRule()); } 
	 EOF 
;

// Rule SequenceInitializationExpression
ruleSequenceInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getGroup()); }
(rule__SequenceInitializationExpression__Group__0)
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndex
entryRuleIndex 
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexAccess().getGroup()); }
(rule__Index__Group__0)
{ after(grammarAccess.getIndexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceOperationOrReductionOrExpansion
entryRuleSequenceOperationOrReductionOrExpansion 
:
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionRule()); }
	 ruleSequenceOperationOrReductionOrExpansion
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionRule()); } 
	 EOF 
;

// Rule SequenceOperationOrReductionOrExpansion
ruleSequenceOperationOrReductionOrExpansion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup()); }
(rule__SequenceOperationOrReductionOrExpansion__Group__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixExpressionCompletion
entryRulePostfixExpressionCompletion 
:
{ before(grammarAccess.getPostfixExpressionCompletionRule()); }
	 rulePostfixExpressionCompletion
{ after(grammarAccess.getPostfixExpressionCompletionRule()); } 
	 EOF 
;

// Rule PostfixExpressionCompletion
rulePostfixExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getAlternatives()); }
(rule__PostfixExpressionCompletion__Alternatives)
{ after(grammarAccess.getPostfixExpressionCompletionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixOperation
entryRulePostfixOperation 
:
{ before(grammarAccess.getPostfixOperationRule()); }
	 rulePostfixOperation
{ after(grammarAccess.getPostfixOperationRule()); } 
	 EOF 
;

// Rule PostfixOperation
rulePostfixOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixOperationAccess().getOperatorAssignment()); }
(rule__PostfixOperation__OperatorAssignment)
{ after(grammarAccess.getPostfixOperationAccess().getOperatorAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixExpression
entryRulePrefixExpression 
:
{ before(grammarAccess.getPrefixExpressionRule()); }
	 rulePrefixExpression
{ after(grammarAccess.getPrefixExpressionRule()); } 
	 EOF 
;

// Rule PrefixExpression
rulePrefixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixExpressionAccess().getGroup()); }
(rule__PrefixExpression__Group__0)
{ after(grammarAccess.getPrefixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixOrCastExpression
entryRulePostfixOrCastExpression 
:
{ before(grammarAccess.getPostfixOrCastExpressionRule()); }
	 rulePostfixOrCastExpression
{ after(grammarAccess.getPostfixOrCastExpressionRule()); } 
	 EOF 
;

// Rule PostfixOrCastExpression
rulePostfixOrCastExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getAlternatives()); }
(rule__PostfixOrCastExpression__Alternatives)
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonNameUnaryExpression
entryRuleNonNameUnaryExpression 
:
{ before(grammarAccess.getNonNameUnaryExpressionRule()); }
	 ruleNonNameUnaryExpression
{ after(grammarAccess.getNonNameUnaryExpressionRule()); } 
	 EOF 
;

// Rule NonNameUnaryExpression
ruleNonNameUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonNameUnaryExpressionAccess().getAlternatives()); }
(rule__NonNameUnaryExpression__Alternatives)
{ after(grammarAccess.getNonNameUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonNamePostfixOrCastExpression
entryRuleNonNamePostfixOrCastExpression 
:
{ before(grammarAccess.getNonNamePostfixOrCastExpressionRule()); }
	 ruleNonNamePostfixOrCastExpression
{ after(grammarAccess.getNonNamePostfixOrCastExpressionRule()); } 
	 EOF 
;

// Rule NonNamePostfixOrCastExpression
ruleNonNamePostfixOrCastExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives()); }
(rule__NonNamePostfixOrCastExpression__Alternatives)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonPostfixNonCastUnaryExpression
entryRuleNonPostfixNonCastUnaryExpression 
:
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionRule()); }
	 ruleNonPostfixNonCastUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionRule()); } 
	 EOF 
;

// Rule NonPostfixNonCastUnaryExpression
ruleNonPostfixNonCastUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getAlternatives()); }
(rule__NonPostfixNonCastUnaryExpression__Alternatives)
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanNegationExpression
entryRuleBooleanNegationExpression 
:
{ before(grammarAccess.getBooleanNegationExpressionRule()); }
	 ruleBooleanNegationExpression
{ after(grammarAccess.getBooleanNegationExpressionRule()); } 
	 EOF 
;

// Rule BooleanNegationExpression
ruleBooleanNegationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanNegationExpressionAccess().getGroup()); }
(rule__BooleanNegationExpression__Group__0)
{ after(grammarAccess.getBooleanNegationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitStringComplementExpression
entryRuleBitStringComplementExpression 
:
{ before(grammarAccess.getBitStringComplementExpressionRule()); }
	 ruleBitStringComplementExpression
{ after(grammarAccess.getBitStringComplementExpressionRule()); } 
	 EOF 
;

// Rule BitStringComplementExpression
ruleBitStringComplementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStringComplementExpressionAccess().getGroup()); }
(rule__BitStringComplementExpression__Group__0)
{ after(grammarAccess.getBitStringComplementExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericUnaryExpression
entryRuleNumericUnaryExpression 
:
{ before(grammarAccess.getNumericUnaryExpressionRule()); }
	 ruleNumericUnaryExpression
{ after(grammarAccess.getNumericUnaryExpressionRule()); } 
	 EOF 
;

// Rule NumericUnaryExpression
ruleNumericUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getGroup()); }
(rule__NumericUnaryExpression__Group__0)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsolationExpression
entryRuleIsolationExpression 
:
{ before(grammarAccess.getIsolationExpressionRule()); }
	 ruleIsolationExpression
{ after(grammarAccess.getIsolationExpressionRule()); } 
	 EOF 
;

// Rule IsolationExpression
ruleIsolationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsolationExpressionAccess().getGroup()); }
(rule__IsolationExpression__Group__0)
{ after(grammarAccess.getIsolationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCastCompletion
entryRuleCastCompletion 
:
{ before(grammarAccess.getCastCompletionRule()); }
	 ruleCastCompletion
{ after(grammarAccess.getCastCompletionRule()); } 
	 EOF 
;

// Rule CastCompletion
ruleCastCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastCompletionAccess().getAlternatives()); }
(rule__CastCompletion__Alternatives)
{ after(grammarAccess.getCastCompletionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpressionCompletion
entryRuleMultiplicativeExpressionCompletion 
:
{ before(grammarAccess.getMultiplicativeExpressionCompletionRule()); }
	 ruleMultiplicativeExpressionCompletion
{ after(grammarAccess.getMultiplicativeExpressionCompletionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpressionCompletion
ruleMultiplicativeExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getGroup()); }
(rule__MultiplicativeExpressionCompletion__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpressionCompletion
entryRuleAdditiveExpressionCompletion 
:
{ before(grammarAccess.getAdditiveExpressionCompletionRule()); }
	 ruleAdditiveExpressionCompletion
{ after(grammarAccess.getAdditiveExpressionCompletionRule()); } 
	 EOF 
;

// Rule AdditiveExpressionCompletion
ruleAdditiveExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getGroup()); }
(rule__AdditiveExpressionCompletion__Group__0)
{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftExpression
entryRuleShiftExpression 
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
(rule__ShiftExpression__Group__0)
{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftExpressionCompletion
entryRuleShiftExpressionCompletion 
:
{ before(grammarAccess.getShiftExpressionCompletionRule()); }
	 ruleShiftExpressionCompletion
{ after(grammarAccess.getShiftExpressionCompletionRule()); } 
	 EOF 
;

// Rule ShiftExpressionCompletion
ruleShiftExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getGroup()); }
(rule__ShiftExpressionCompletion__Group__0)
{ after(grammarAccess.getShiftExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleRelationalExpressionCompletion
entryRuleRelationalExpressionCompletion 
:
{ before(grammarAccess.getRelationalExpressionCompletionRule()); }
	 ruleRelationalExpressionCompletion
{ after(grammarAccess.getRelationalExpressionCompletionRule()); } 
	 EOF 
;

// Rule RelationalExpressionCompletion
ruleRelationalExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getGroup()); }
(rule__RelationalExpressionCompletion__Group__0)
{ after(grammarAccess.getRelationalExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression 
:
{ before(grammarAccess.getClassificationExpressionRule()); }
	 ruleClassificationExpression
{ after(grammarAccess.getClassificationExpressionRule()); } 
	 EOF 
;

// Rule ClassificationExpression
ruleClassificationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationExpressionAccess().getGroup()); }
(rule__ClassificationExpression__Group__0)
{ after(grammarAccess.getClassificationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationExpressionCompletion
entryRuleClassificationExpressionCompletion 
:
{ before(grammarAccess.getClassificationExpressionCompletionRule()); }
	 ruleClassificationExpressionCompletion
{ after(grammarAccess.getClassificationExpressionCompletionRule()); } 
	 EOF 
;

// Rule ClassificationExpressionCompletion
ruleClassificationExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getGroup()); }
(rule__ClassificationExpressionCompletion__Group__0)
{ after(grammarAccess.getClassificationExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpressionCompletion
entryRuleEqualityExpressionCompletion 
:
{ before(grammarAccess.getEqualityExpressionCompletionRule()); }
	 ruleEqualityExpressionCompletion
{ after(grammarAccess.getEqualityExpressionCompletionRule()); } 
	 EOF 
;

// Rule EqualityExpressionCompletion
ruleEqualityExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getGroup()); }
(rule__EqualityExpressionCompletion__Group__0)
{ after(grammarAccess.getEqualityExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpressionCompletion
entryRuleAndExpressionCompletion 
:
{ before(grammarAccess.getAndExpressionCompletionRule()); }
	 ruleAndExpressionCompletion
{ after(grammarAccess.getAndExpressionCompletionRule()); } 
	 EOF 
;

// Rule AndExpressionCompletion
ruleAndExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getGroup()); }
(rule__AndExpressionCompletion__Group__0)
{ after(grammarAccess.getAndExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression 
:
{ before(grammarAccess.getExclusiveOrExpressionRule()); }
	 ruleExclusiveOrExpression
{ after(grammarAccess.getExclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
(rule__ExclusiveOrExpression__Group__0)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExclusiveOrExpressionCompletion
entryRuleExclusiveOrExpressionCompletion 
:
{ before(grammarAccess.getExclusiveOrExpressionCompletionRule()); }
	 ruleExclusiveOrExpressionCompletion
{ after(grammarAccess.getExclusiveOrExpressionCompletionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpressionCompletion
ruleExclusiveOrExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getGroup()); }
(rule__ExclusiveOrExpressionCompletion__Group__0)
{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression 
:
{ before(grammarAccess.getInclusiveOrExpressionRule()); }
	 ruleInclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
(rule__InclusiveOrExpression__Group__0)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclusiveOrExpressionCompletion
entryRuleInclusiveOrExpressionCompletion 
:
{ before(grammarAccess.getInclusiveOrExpressionCompletionRule()); }
	 ruleInclusiveOrExpressionCompletion
{ after(grammarAccess.getInclusiveOrExpressionCompletionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpressionCompletion
ruleInclusiveOrExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getGroup()); }
(rule__InclusiveOrExpressionCompletion__Group__0)
{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression 
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
(rule__ConditionalAndExpression__Group__0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalAndExpressionCompletion
entryRuleConditionalAndExpressionCompletion 
:
{ before(grammarAccess.getConditionalAndExpressionCompletionRule()); }
	 ruleConditionalAndExpressionCompletion
{ after(grammarAccess.getConditionalAndExpressionCompletionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpressionCompletion
ruleConditionalAndExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getGroup()); }
(rule__ConditionalAndExpressionCompletion__Group__0)
{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleConditionalOrExpressionCompletion
entryRuleConditionalOrExpressionCompletion 
:
{ before(grammarAccess.getConditionalOrExpressionCompletionRule()); }
	 ruleConditionalOrExpressionCompletion
{ after(grammarAccess.getConditionalOrExpressionCompletionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpressionCompletion
ruleConditionalOrExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getGroup()); }
(rule__ConditionalOrExpressionCompletion__Group__0)
{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpressionCompletion
entryRuleConditionalExpressionCompletion 
:
{ before(grammarAccess.getConditionalExpressionCompletionRule()); }
	 ruleConditionalExpressionCompletion
{ after(grammarAccess.getConditionalExpressionCompletionRule()); } 
	 EOF 
;

// Rule ConditionalExpressionCompletion
ruleConditionalExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getGroup()); }
(rule__ConditionalExpressionCompletion__Group__0)
{ after(grammarAccess.getConditionalExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpressionCompletion
entryRuleAssignmentExpressionCompletion 
:
{ before(grammarAccess.getAssignmentExpressionCompletionRule()); }
	 ruleAssignmentExpressionCompletion
{ after(grammarAccess.getAssignmentExpressionCompletionRule()); } 
	 EOF 
;

// Rule AssignmentExpressionCompletion
ruleAssignmentExpressionCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentExpressionCompletionAccess().getGroup()); }
(rule__AssignmentExpressionCompletion__Group__0)
{ after(grammarAccess.getAssignmentExpressionCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementSequence
entryRuleStatementSequence 
:
{ before(grammarAccess.getStatementSequenceRule()); }
	 ruleStatementSequence
{ after(grammarAccess.getStatementSequenceRule()); } 
	 EOF 
;

// Rule StatementSequence
ruleStatementSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementSequenceAccess().getGroup()); }
(rule__StatementSequence__Group__0)
{ after(grammarAccess.getStatementSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocumentedStatement
entryRuleDocumentedStatement 
:
{ before(grammarAccess.getDocumentedStatementRule()); }
	 ruleDocumentedStatement
{ after(grammarAccess.getDocumentedStatementRule()); } 
	 EOF 
;

// Rule DocumentedStatement
ruleDocumentedStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentedStatementAccess().getGroup()); }
(rule__DocumentedStatement__Group__0)
{ after(grammarAccess.getDocumentedStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotatedStatement
entryRuleAnnotatedStatement 
:
{ before(grammarAccess.getAnnotatedStatementRule()); }
	 ruleAnnotatedStatement
{ after(grammarAccess.getAnnotatedStatementRule()); } 
	 EOF 
;

// Rule AnnotatedStatement
ruleAnnotatedStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getGroup()); }
(rule__AnnotatedStatement__Group__0)
{ after(grammarAccess.getAnnotatedStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotations
entryRuleAnnotations 
:
{ before(grammarAccess.getAnnotationsRule()); }
	 ruleAnnotations
{ after(grammarAccess.getAnnotationsRule()); } 
	 EOF 
;

// Rule Annotations
ruleAnnotations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationsAccess().getGroup()); }
(rule__Annotations__Group__0)
{ after(grammarAccess.getAnnotationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameList
entryRuleNameList 
:
{ before(grammarAccess.getNameListRule()); }
	 ruleNameList
{ after(grammarAccess.getNameListRule()); } 
	 EOF 
;

// Rule NameList
ruleNameList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameListAccess().getGroup()); }
(rule__NameList__Group__0)
{ after(grammarAccess.getNameListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInLineStatement
entryRuleInLineStatement 
:
{ before(grammarAccess.getInLineStatementRule()); }
	 ruleInLineStatement
{ after(grammarAccess.getInLineStatementRule()); } 
	 EOF 
;

// Rule InLineStatement
ruleInLineStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInLineStatementAccess().getGroup()); }
(rule__InLineStatement__Group__0)
{ after(grammarAccess.getInLineStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockStatement
entryRuleBlockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getBlockAssignment()); }
(rule__BlockStatement__BlockAssignment)
{ after(grammarAccess.getBlockStatementAccess().getBlockAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement 
:
{ before(grammarAccess.getEmptyStatementRule()); }
	 ruleEmptyStatement
{ after(grammarAccess.getEmptyStatementRule()); } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyStatementAccess().getGroup()); }
(rule__EmptyStatement__Group__0)
{ after(grammarAccess.getEmptyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalNameDeclarationOrExpressionStatement
entryRuleLocalNameDeclarationOrExpressionStatement 
:
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementRule()); }
	 ruleLocalNameDeclarationOrExpressionStatement
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementRule()); } 
	 EOF 
;

// Rule LocalNameDeclarationOrExpressionStatement
ruleLocalNameDeclarationOrExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getAlternatives()); }
(rule__LocalNameDeclarationOrExpressionStatement__Alternatives)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalNameDeclarationStatement
entryRuleLocalNameDeclarationStatement 
:
{ before(grammarAccess.getLocalNameDeclarationStatementRule()); }
	 ruleLocalNameDeclarationStatement
{ after(grammarAccess.getLocalNameDeclarationStatementRule()); } 
	 EOF 
;

// Rule LocalNameDeclarationStatement
ruleLocalNameDeclarationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup()); }
(rule__LocalNameDeclarationStatement__Group__0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalNameDeclarationStatementCompletion
entryRuleLocalNameDeclarationStatementCompletion 
:
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionRule()); }
	 ruleLocalNameDeclarationStatementCompletion
{ after(grammarAccess.getLocalNameDeclarationStatementCompletionRule()); } 
	 EOF 
;

// Rule LocalNameDeclarationStatementCompletion
ruleLocalNameDeclarationStatementCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getGroup()); }
(rule__LocalNameDeclarationStatementCompletion__Group__0)
{ after(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitializationExpression
entryRuleInitializationExpression 
:
{ before(grammarAccess.getInitializationExpressionRule()); }
	 ruleInitializationExpression
{ after(grammarAccess.getInitializationExpressionRule()); } 
	 EOF 
;

// Rule InitializationExpression
ruleInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitializationExpressionAccess().getAlternatives()); }
(rule__InitializationExpression__Alternatives)
{ after(grammarAccess.getInitializationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceInitializationExpression
entryRuleInstanceInitializationExpression 
:
{ before(grammarAccess.getInstanceInitializationExpressionRule()); }
	 ruleInstanceInitializationExpression
{ after(grammarAccess.getInstanceInitializationExpressionRule()); } 
	 EOF 
;

// Rule InstanceInitializationExpression
ruleInstanceInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getGroup()); }
(rule__InstanceInitializationExpression__Group__0)
{ after(grammarAccess.getInstanceInitializationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequentialClauses
entryRuleSequentialClauses 
:
{ before(grammarAccess.getSequentialClausesRule()); }
	 ruleSequentialClauses
{ after(grammarAccess.getSequentialClausesRule()); } 
	 EOF 
;

// Rule SequentialClauses
ruleSequentialClauses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequentialClausesAccess().getGroup()); }
(rule__SequentialClauses__Group__0)
{ after(grammarAccess.getSequentialClausesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcurrentClauses
entryRuleConcurrentClauses 
:
{ before(grammarAccess.getConcurrentClausesRule()); }
	 ruleConcurrentClauses
{ after(grammarAccess.getConcurrentClausesRule()); } 
	 EOF 
;

// Rule ConcurrentClauses
ruleConcurrentClauses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcurrentClausesAccess().getGroup()); }
(rule__ConcurrentClauses__Group__0)
{ after(grammarAccess.getConcurrentClausesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonFinalClause
entryRuleNonFinalClause 
:
{ before(grammarAccess.getNonFinalClauseRule()); }
	 ruleNonFinalClause
{ after(grammarAccess.getNonFinalClauseRule()); } 
	 EOF 
;

// Rule NonFinalClause
ruleNonFinalClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonFinalClauseAccess().getGroup()); }
(rule__NonFinalClause__Group__0)
{ after(grammarAccess.getNonFinalClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFinalClause
entryRuleFinalClause 
:
{ before(grammarAccess.getFinalClauseRule()); }
	 ruleFinalClause
{ after(grammarAccess.getFinalClauseRule()); } 
	 EOF 
;

// Rule FinalClause
ruleFinalClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFinalClauseAccess().getGroup()); }
(rule__FinalClause__Group__0)
{ after(grammarAccess.getFinalClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement 
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchClause
entryRuleSwitchClause 
:
{ before(grammarAccess.getSwitchClauseRule()); }
	 ruleSwitchClause
{ after(grammarAccess.getSwitchClauseRule()); } 
	 EOF 
;

// Rule SwitchClause
ruleSwitchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchClauseAccess().getGroup()); }
(rule__SwitchClause__Group__0)
{ after(grammarAccess.getSwitchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchCase
entryRuleSwitchCase 
:
{ before(grammarAccess.getSwitchCaseRule()); }
	 ruleSwitchCase
{ after(grammarAccess.getSwitchCaseRule()); } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchCaseAccess().getGroup()); }
(rule__SwitchCase__Group__0)
{ after(grammarAccess.getSwitchCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchDefaultClause
entryRuleSwitchDefaultClause 
:
{ before(grammarAccess.getSwitchDefaultClauseRule()); }
	 ruleSwitchDefaultClause
{ after(grammarAccess.getSwitchDefaultClauseRule()); } 
	 EOF 
;

// Rule SwitchDefaultClause
ruleSwitchDefaultClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getGroup()); }
(rule__SwitchDefaultClause__Group__0)
{ after(grammarAccess.getSwitchDefaultClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonEmptyStatementSequence
entryRuleNonEmptyStatementSequence 
:
{ before(grammarAccess.getNonEmptyStatementSequenceRule()); }
	 ruleNonEmptyStatementSequence
{ after(grammarAccess.getNonEmptyStatementSequenceRule()); } 
	 EOF 
;

// Rule NonEmptyStatementSequence
ruleNonEmptyStatementSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
(rule__NonEmptyStatementSequence__StatementAssignment)
{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
)
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
(rule__NonEmptyStatementSequence__StatementAssignment)*
{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForControl
entryRuleForControl 
:
{ before(grammarAccess.getForControlRule()); }
	 ruleForControl
{ after(grammarAccess.getForControlRule()); } 
	 EOF 
;

// Rule ForControl
ruleForControl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForControlAccess().getGroup()); }
(rule__ForControl__Group__0)
{ after(grammarAccess.getForControlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopVariableDefinition
entryRuleLoopVariableDefinition 
:
{ before(grammarAccess.getLoopVariableDefinitionRule()); }
	 ruleLoopVariableDefinition
{ after(grammarAccess.getLoopVariableDefinitionRule()); } 
	 EOF 
;

// Rule LoopVariableDefinition
ruleLoopVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives()); }
(rule__LoopVariableDefinition__Alternatives)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement 
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
(rule__BreakStatement__Group__0)
{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptStatement
entryRuleAcceptStatement 
:
{ before(grammarAccess.getAcceptStatementRule()); }
	 ruleAcceptStatement
{ after(grammarAccess.getAcceptStatementRule()); } 
	 EOF 
;

// Rule AcceptStatement
ruleAcceptStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptStatementAccess().getGroup()); }
(rule__AcceptStatement__Group__0)
{ after(grammarAccess.getAcceptStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleAcceptStatementCompletion
entryRuleSimpleAcceptStatementCompletion 
:
{ before(grammarAccess.getSimpleAcceptStatementCompletionRule()); }
	 ruleSimpleAcceptStatementCompletion
{ after(grammarAccess.getSimpleAcceptStatementCompletionRule()); } 
	 EOF 
;

// Rule SimpleAcceptStatementCompletion
ruleSimpleAcceptStatementCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleAcceptStatementCompletionAccess().getGroup()); }
(rule__SimpleAcceptStatementCompletion__Group__0)
{ after(grammarAccess.getSimpleAcceptStatementCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundAcceptStatementCompletion
entryRuleCompoundAcceptStatementCompletion 
:
{ before(grammarAccess.getCompoundAcceptStatementCompletionRule()); }
	 ruleCompoundAcceptStatementCompletion
{ after(grammarAccess.getCompoundAcceptStatementCompletionRule()); } 
	 EOF 
;

// Rule CompoundAcceptStatementCompletion
ruleCompoundAcceptStatementCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getGroup()); }
(rule__CompoundAcceptStatementCompletion__Group__0)
{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptBlock
entryRuleAcceptBlock 
:
{ before(grammarAccess.getAcceptBlockRule()); }
	 ruleAcceptBlock
{ after(grammarAccess.getAcceptBlockRule()); } 
	 EOF 
;

// Rule AcceptBlock
ruleAcceptBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptBlockAccess().getGroup()); }
(rule__AcceptBlock__Group__0)
{ after(grammarAccess.getAcceptBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptClause
entryRuleAcceptClause 
:
{ before(grammarAccess.getAcceptClauseRule()); }
	 ruleAcceptClause
{ after(grammarAccess.getAcceptClauseRule()); } 
	 EOF 
;

// Rule AcceptClause
ruleAcceptClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptClauseAccess().getGroup()); }
(rule__AcceptClause__Group__0)
{ after(grammarAccess.getAcceptClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifyStatement
entryRuleClassifyStatement 
:
{ before(grammarAccess.getClassifyStatementRule()); }
	 ruleClassifyStatement
{ after(grammarAccess.getClassifyStatementRule()); } 
	 EOF 
;

// Rule ClassifyStatement
ruleClassifyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifyStatementAccess().getGroup()); }
(rule__ClassifyStatement__Group__0)
{ after(grammarAccess.getClassifyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationClause
entryRuleClassificationClause 
:
{ before(grammarAccess.getClassificationClauseRule()); }
	 ruleClassificationClause
{ after(grammarAccess.getClassificationClauseRule()); } 
	 EOF 
;

// Rule ClassificationClause
ruleClassificationClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationClauseAccess().getAlternatives()); }
(rule__ClassificationClause__Alternatives)
{ after(grammarAccess.getClassificationClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationFromClause
entryRuleClassificationFromClause 
:
{ before(grammarAccess.getClassificationFromClauseRule()); }
	 ruleClassificationFromClause
{ after(grammarAccess.getClassificationFromClauseRule()); } 
	 EOF 
;

// Rule ClassificationFromClause
ruleClassificationFromClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getGroup()); }
(rule__ClassificationFromClause__Group__0)
{ after(grammarAccess.getClassificationFromClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationToClause
entryRuleClassificationToClause 
:
{ before(grammarAccess.getClassificationToClauseRule()); }
	 ruleClassificationToClause
{ after(grammarAccess.getClassificationToClauseRule()); } 
	 EOF 
;

// Rule ClassificationToClause
ruleClassificationToClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationToClauseAccess().getGroup()); }
(rule__ClassificationToClause__Group__0)
{ after(grammarAccess.getClassificationToClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReclassifyAllClause
entryRuleReclassifyAllClause 
:
{ before(grammarAccess.getReclassifyAllClauseRule()); }
	 ruleReclassifyAllClause
{ after(grammarAccess.getReclassifyAllClauseRule()); } 
	 EOF 
;

// Rule ReclassifyAllClause
ruleReclassifyAllClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getGroup()); }
(rule__ReclassifyAllClause__Group__0)
{ after(grammarAccess.getReclassifyAllClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameList
entryRuleQualifiedNameList 
:
{ before(grammarAccess.getQualifiedNameListRule()); }
	 ruleQualifiedNameList
{ after(grammarAccess.getQualifiedNameListRule()); } 
	 EOF 
;

// Rule QualifiedNameList
ruleQualifiedNameList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameListAccess().getGroup()); }
(rule__QualifiedNameList__Group__0)
{ after(grammarAccess.getQualifiedNameListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ImportVisibilityIndicator
ruleImportVisibilityIndicator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getAlternatives()); }
(rule__ImportVisibilityIndicator__Alternatives)
{ after(grammarAccess.getImportVisibilityIndicatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ParameterDirection
ruleParameterDirection
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDirectionAccess().getAlternatives()); }
(rule__ParameterDirection__Alternatives)
{ after(grammarAccess.getParameterDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LinkOperation
ruleLinkOperation
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationAccess().getAlternatives()); }
(rule__LinkOperation__Alternatives)
{ after(grammarAccess.getLinkOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AffixOperator
ruleAffixOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffixOperatorAccess().getAlternatives()); }
(rule__AffixOperator__Alternatives)
{ after(grammarAccess.getAffixOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NumericUnaryOperator
ruleNumericUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getAlternatives()); }
(rule__NumericUnaryOperator__Alternatives)
{ after(grammarAccess.getNumericUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultiplicativeOperator
ruleMultiplicativeOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
(rule__MultiplicativeOperator__Alternatives)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AdditiveOperator
ruleAdditiveOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
(rule__AdditiveOperator__Alternatives)
{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ShiftOperator
ruleShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
(rule__ShiftOperator__Alternatives)
{ after(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelationalOperator
ruleRelationalOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
(rule__RelationalOperator__Alternatives)
{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ClassificationOperator
ruleClassificationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
(rule__ClassificationOperator__Alternatives)
{ after(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AssignmentOperator
ruleAssignmentOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NUMBER_LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBER_LITERALAccess().getINTEGER_LITERALParserRuleCall_0()); }
	ruleINTEGER_LITERAL
{ after(grammarAccess.getNUMBER_LITERALAccess().getINTEGER_LITERALParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNUMBER_LITERALAccess().getUNLIMITED_NATURALParserRuleCall_1()); }
	ruleUNLIMITED_NATURAL
{ after(grammarAccess.getNUMBER_LITERALAccess().getUNLIMITED_NATURALParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValues__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValuesAccess().getQualifiedNameListParserRuleCall_0()); }
	ruleQualifiedNameList
{ after(grammarAccess.getTaggedValuesAccess().getQualifiedNameListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTaggedValuesAccess().getTaggedValueListParserRuleCall_1()); }
	ruleTaggedValueList
{ after(grammarAccess.getTaggedValuesAccess().getTaggedValueListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PRIMITIVE_LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPRIMITIVE_LITERALAccess().getBOOLEAN_LITERALParserRuleCall_0()); }
	ruleBOOLEAN_LITERAL
{ after(grammarAccess.getPRIMITIVE_LITERALAccess().getBOOLEAN_LITERALParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPRIMITIVE_LITERALAccess().getNUMBER_LITERALParserRuleCall_1()); }
	ruleNUMBER_LITERAL
{ after(grammarAccess.getPRIMITIVE_LITERALAccess().getNUMBER_LITERALParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPRIMITIVE_LITERALAccess().getSTRING_LITERALParserRuleCall_2()); }
	ruleSTRING_LITERAL
{ after(grammarAccess.getPRIMITIVE_LITERALAccess().getSTRING_LITERALParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getCompletionAssignment_1_0()); }
(rule__ImportReference__CompletionAssignment_1_0)
{ after(grammarAccess.getImportReferenceAccess().getCompletionAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getImportReferenceAccess().getAliasAssignment_1_1()); }
(rule__ImportReference__AliasAssignment_1_1)
{ after(grammarAccess.getImportReferenceAccess().getAliasAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getImportReferenceAccess().getGroup_1_2()); }
(rule__ImportReference__Group_1_2__0)
{ after(grammarAccess.getImportReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup_3_0()); }
(rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__0)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAliasAssignment_3_1()); }
(rule__ColonQualifiedNameCompletionOfImportReference__AliasAssignment_3_1)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAliasAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getPackageDefinitionParserRuleCall_0()); }
	rulePackageDefinition
{ after(grammarAccess.getNamespaceDefinitionAccess().getPackageDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamespaceDefinitionAccess().getClassifierDefinitionParserRuleCall_1()); }
	ruleClassifierDefinition
{ after(grammarAccess.getNamespaceDefinitionAccess().getClassifierDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPUBLICAssignment_0()); }
(rule__VisibilityIndicator__PUBLICAssignment_0)
{ after(grammarAccess.getVisibilityIndicatorAccess().getPUBLICAssignment_0()); }
)

    |(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEAssignment_1()); }
(rule__VisibilityIndicator__PRIVATEAssignment_1)
{ after(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEAssignment_1()); }
)

    |(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDAssignment_2()); }
(rule__VisibilityIndicator__PROTECTEDAssignment_2)
{ after(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getBodyAssignment_1_1()); }
(rule__PackageDefinitionOrStub__BodyAssignment_1_1)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElementDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0()); }
	rulePackageDefinitionOrStub
{ after(grammarAccess.getPackagedElementDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_1()); }
	ruleClassifierDefinitionOrStub
{ after(grammarAccess.getPackagedElementDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDefinitionAccess().getClassDefinitionParserRuleCall_0()); }
	ruleClassDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getClassDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getActiveClassDefinitionParserRuleCall_1()); }
	ruleActiveClassDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getActiveClassDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getDataTypeDefinitionParserRuleCall_2()); }
	ruleDataTypeDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getDataTypeDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getEnumerationDefinitionParserRuleCall_3()); }
	ruleEnumerationDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getEnumerationDefinitionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getAssociationDefinitionParserRuleCall_4()); }
	ruleAssociationDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getAssociationDefinitionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getSignalDefinitionParserRuleCall_5()); }
	ruleSignalDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getSignalDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getActivityDefinitionParserRuleCall_6()); }
	ruleActivityDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getActivityDefinitionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getClassDefinitionOrStubParserRuleCall_0()); }
	ruleClassDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getClassDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getActiveClassDefinitionOrStubParserRuleCall_1()); }
	ruleActiveClassDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getActiveClassDefinitionOrStubParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getDataTypeDefinitionOrStubParserRuleCall_2()); }
	ruleDataTypeDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getDataTypeDefinitionOrStubParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getEnumerationDefinitionOrStubParserRuleCall_3()); }
	ruleEnumerationDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getEnumerationDefinitionOrStubParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getAssociationDefinitionOrStubParserRuleCall_4()); }
	ruleAssociationDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getAssociationDefinitionOrStubParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getSignalDefinitionOrStubParserRuleCall_5()); }
	ruleSignalDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getSignalDefinitionOrStubParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getActivityDefinitionOrStubParserRuleCall_6()); }
	ruleActivityDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getActivityDefinitionOrStubParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getClassDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getClassBodyAssignment_1_1()); }
(rule__ClassDefinitionOrStub__ClassBodyAssignment_1_1)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getClassBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_0()); }
	ruleClassifierDefinitionOrStub
{ after(grammarAccess.getClassMemberDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassMemberDefinitionAccess().getFeatureDefinitionOrStubParserRuleCall_1()); }
	ruleFeatureDefinitionOrStub
{ after(grammarAccess.getClassMemberDefinitionAccess().getFeatureDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassBodyAssignment_1_1()); }
(rule__ActiveClassDefinitionOrStub__ActiveClassBodyAssignment_1_1)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getBlockAssignment_0()); }
(rule__BehaviorClause__BlockAssignment_0)
{ after(grammarAccess.getBehaviorClauseAccess().getBlockAssignment_0()); }
)

    |(
{ before(grammarAccess.getBehaviorClauseAccess().getNameAssignment_1()); }
(rule__BehaviorClause__NameAssignment_1)
{ after(grammarAccess.getBehaviorClauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMemberDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getClassMemberDefinitionParserRuleCall_0()); }
	ruleClassMemberDefinition
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getClassMemberDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getActiveFeatureDefinitionOrStubParserRuleCall_1()); }
	ruleActiveFeatureDefinitionOrStub
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getActiveFeatureDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getStructureBodyAssignment_1_1()); }
(rule__DataTypeDefinitionOrStub__StructureBodyAssignment_1_1)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getStructureBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
(rule__AssociationDefinitionOrStub__StructuredBodyAssignment_1_1)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationBodyAssignment_1_1()); }
(rule__EnumerationDefinitionOrStub__EnumerationBodyAssignment_1_1)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getSignalDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
(rule__SignalDefinitionOrStub__StructuredBodyAssignment_1_1)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getActivityDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getBlockAssignment_1_1()); }
(rule__ActivityDefinitionOrStub__BlockAssignment_1_1)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getBlockAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getAttributeDefinitionParserRuleCall_0()); }
	ruleAttributeDefinition
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getAttributeDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getOperationDefinitionOrStubParserRuleCall_1()); }
	ruleOperationDefinitionOrStub
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getOperationDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveFeatureDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getReceptionDefinitionParserRuleCall_0()); }
	ruleReceptionDefinition
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getReceptionDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getSignalReceptionDefinitionOrStubParserRuleCall_1()); }
	ruleSignalReceptionDefinitionOrStub
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getSignalReceptionDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getQualifiedNameAssignment_0()); }
(rule__TypeName__QualifiedNameAssignment_0)
{ after(grammarAccess.getTypeNameAccess().getQualifiedNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeNameAccess().getAnyAssignment_1()); }
(rule__TypeName__AnyAssignment_1)
{ after(grammarAccess.getTypeNameAccess().getAnyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup_4_0()); }
(rule__Multiplicity__Group_4_0__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getGroup_4_1()); }
(rule__Multiplicity__Group_4_1__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_4_1()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getIsSequenceAssignment_4_2()); }
(rule__Multiplicity__IsSequenceAssignment_4_2)
{ after(grammarAccess.getMultiplicityAccess().getIsSequenceAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getIntegerAssignment_0()); }
(rule__UnlimitedNaturalLiteral__IntegerAssignment_0)
{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getIntegerAssignment_0()); }
)

    |(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAssignment_1()); }
(rule__UnlimitedNaturalLiteral__StarAssignment_1)
{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getOperationDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getBlockAssignment_1_1()); }
(rule__OperationDefinitionOrStub__BlockAssignment_1_1)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getBlockAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
(rule__SignalReceptionDefinitionOrStub__StructuredBodyAssignment_1_1)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getStructuredBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getNamedTemplateBindingParserRuleCall_1_0()); }
	ruleNamedTemplateBinding
{ after(grammarAccess.getTemplateBindingAccess().getNamedTemplateBindingParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTemplateBindingAccess().getPositionalTemplateBindingParserRuleCall_1_1()); }
	rulePositionalTemplateBinding
{ after(grammarAccess.getTemplateBindingAccess().getPositionalTemplateBindingParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompletion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompletionAccess().getAssignmentExpressionCompletionParserRuleCall_0()); }
	ruleAssignmentExpressionCompletion
{ after(grammarAccess.getExpressionCompletionAccess().getAssignmentExpressionCompletionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionCompletionAccess().getConditionalExpressionCompletionParserRuleCall_1()); }
	ruleConditionalExpressionCompletion
{ after(grammarAccess.getExpressionCompletionAccess().getConditionalExpressionCompletionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameOrPrimaryExpressionAssignment_0_0()); }
(rule__PrimaryExpression__NameOrPrimaryExpressionAssignment_0_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameOrPrimaryExpressionAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionAssignment_0_1()); }
(rule__PrimaryExpression__BaseExpressionAssignment_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionAssignment_0_2()); }
(rule__PrimaryExpression__ParenthesizedExpressionAssignment_0_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_0()); }
	ruleLiteralExpression
{ after(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getThisExpressionParserRuleCall_1()); }
	ruleThisExpression
{ after(grammarAccess.getBaseExpressionAccess().getThisExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSuperInvocationExpressionParserRuleCall_2()); }
	ruleSuperInvocationExpression
{ after(grammarAccess.getBaseExpressionAccess().getSuperInvocationExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getInstanceCreationOrSequenceConstructionExpressionParserRuleCall_3()); }
	ruleInstanceCreationOrSequenceConstructionExpression
{ after(grammarAccess.getBaseExpressionAccess().getInstanceCreationOrSequenceConstructionExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSequenceAnyExpressionParserRuleCall_4()); }
	ruleSequenceAnyExpression
{ after(grammarAccess.getBaseExpressionAccess().getSequenceAnyExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getGroup_0()); }
(rule__NameToPrimaryExpression__Group_0__0)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getSequenceConstructionCompletionAssignment_1()); }
(rule__NameToPrimaryExpression__SequenceConstructionCompletionAssignment_1)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getSequenceConstructionCompletionAssignment_1()); }
)

    |(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getBehaviorInvocationAssignment_2()); }
(rule__NameToPrimaryExpression__BehaviorInvocationAssignment_2)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getBehaviorInvocationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getLinkOperationCompletionAssignment_0_1_0()); }
(rule__NameToPrimaryExpression__LinkOperationCompletionAssignment_0_1_0)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getLinkOperationCompletionAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getClassExtentExpressionCompletionAssignment_0_1_1()); }
(rule__NameToPrimaryExpression__ClassExtentExpressionCompletionAssignment_0_1_1)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getClassExtentExpressionCompletionAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getGroup_0()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__0)
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getSequenceOperationOrReductionOrExpansionAssignment_1()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__SequenceOperationOrReductionOrExpansionAssignment_1)
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getSequenceOperationOrReductionOrExpansionAssignment_1()); }
)

    |(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getIndexAssignment_2()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__IndexAssignment_2)
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getNamedTupleExpressionListAssignment_2_0()); }
(rule__Tuple__NamedTupleExpressionListAssignment_2_0)
{ after(grammarAccess.getTupleAccess().getNamedTupleExpressionListAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getTupleAccess().getPositionalTupleExpressionListAssignment_2_1()); }
(rule__Tuple__PositionalTupleExpressionListAssignment_2_1)
{ after(grammarAccess.getTupleAccess().getPositionalTupleExpressionListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionCompletionAssignment_2_0()); }
(rule__InstanceCreationOrSequenceConstructionExpression__SequenceConstructionExpressionCompletionAssignment_2_0)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionCompletionAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleAssignment_2_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__TupleAssignment_2_1)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0()); }
(rule__LinkOperationTuple__Group_2_0__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListAssignment_2_1()); }
(rule__LinkOperationTuple__PositionalTupleExpressionListAssignment_2_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Alternatives_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0()); }
(rule__LinkOperationTuple__Group_2_0_1_0__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_1()); }
(rule__LinkOperationTuple__Group_2_0_1_1__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_1()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionAssignment_2_0_1_2()); }
(rule__LinkOperationTuple__PositionalTupleExpressionListCompletionAssignment_2_0_1_2)
{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionAssignment_2_0_1_2()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_3()); }
(rule__LinkOperationTuple__Group_2_0_1_3__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Alternatives_2_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0_1_0()); }
(rule__LinkOperationTuple__Group_2_0_1_0_1_0__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0_1_1()); }
(rule__LinkOperationTuple__Group_2_0_1_0_1_1__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup_2_0_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getGroup_1_0()); }
(rule__SequenceAnyExpression__Group_1_0__0)
{ after(grammarAccess.getSequenceAnyExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getNullKeyword_1_1()); }

	'null' 

{ after(grammarAccess.getSequenceAnyExpressionAccess().getNullKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getGroup_0()); }
(rule__SequenceElements__Group_0__0)
{ after(grammarAccess.getSequenceElementsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSequenceElementsAccess().getGroup_1()); }
(rule__SequenceElements__Group_1__0)
{ after(grammarAccess.getSequenceElementsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getGroup_0_1_0()); }
(rule__SequenceElements__Group_0_1_0__0)
{ after(grammarAccess.getSequenceElementsAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionAssignment_0_1_1()); }
(rule__SequenceElements__SequenceElementListCompletionAssignment_0_1_1)
{ after(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementAccess().getExpressionAssignment_0()); }
(rule__SequenceElement__ExpressionAssignment_0)
{ after(grammarAccess.getSequenceElementAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionAssignment_1()); }
(rule__SequenceElement__SequenceInitializationExpressionAssignment_1)
{ after(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_0()); }
(rule__SequenceOperationOrReductionOrExpansion__Group_1_0__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_1()); }
(rule__SequenceOperationOrReductionOrExpansion__Group_1_1__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_2()); }
(rule__SequenceOperationOrReductionOrExpansion__Group_1_2__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getGroup_0()); }
(rule__PostfixExpressionCompletion__Group_0__0)
{ after(grammarAccess.getPostfixExpressionCompletionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationAssignment_1()); }
(rule__PostfixExpressionCompletion__PostfixOperationAssignment_1)
{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
	rulePostfixOrCastExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
	ruleNonPostfixNonCastUnaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getNonNamePostfixOrCastExpressionAssignment_0()); }
(rule__PostfixOrCastExpression__NonNamePostfixOrCastExpressionAssignment_0)
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getNonNamePostfixOrCastExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getGroup_1()); }
(rule__PostfixOrCastExpression__Group_1__0)
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNameUnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNameUnaryExpressionAccess().getNonNamePostfixOrCastExpressionParserRuleCall_0()); }
	ruleNonNamePostfixOrCastExpression
{ after(grammarAccess.getNonNameUnaryExpressionAccess().getNonNamePostfixOrCastExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonNameUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
	ruleNonPostfixNonCastUnaryExpression
{ after(grammarAccess.getNonNameUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0()); }
(rule__NonNamePostfixOrCastExpression__Group_0__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_1()); }
(rule__NonNamePostfixOrCastExpression__Group_1__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_0()); }
(rule__NonNamePostfixOrCastExpression__Group_0_1_0__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1()); }
(rule__NonNamePostfixOrCastExpression__Group_0_1_1__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1()); }
)

    |(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_2()); }
(rule__NonNamePostfixOrCastExpression__Group_0_1_2__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Alternatives_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1_1_0()); }
(rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1_1_1()); }
(rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getGroup_0_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Alternatives_0_1_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionAssignment_0_1_1_1_0_1_0()); }
(rule__NonNamePostfixOrCastExpression__CastCompletionAssignment_0_1_1_1_0_1_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionAssignment_0_1_1_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostifixExpressionCompletionAssignment_0_1_1_1_0_1_1()); }
(rule__NonNamePostfixOrCastExpression__PostifixExpressionCompletionAssignment_0_1_1_1_0_1_1)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostifixExpressionCompletionAssignment_0_1_1_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonPostfixNonCastUnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getPrefixExpressionParserRuleCall_0()); }
	rulePrefixExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getPrefixExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getNumericUnaryExpressionParserRuleCall_1()); }
	ruleNumericUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getNumericUnaryExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBooleanNegationExpressionParserRuleCall_2()); }
	ruleBooleanNegationExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBooleanNegationExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBitStringComplementExpressionParserRuleCall_3()); }
	ruleBitStringComplementExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBitStringComplementExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getIsolationExpressionParserRuleCall_4()); }
	ruleIsolationExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getIsolationExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastCompletion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastCompletionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
	rulePostfixOrCastExpression
{ after(grammarAccess.getCastCompletionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getBooleanNegationExpressionParserRuleCall_1()); }
	ruleBooleanNegationExpression
{ after(grammarAccess.getCastCompletionAccess().getBooleanNegationExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getBitStringComplementExpressionParserRuleCall_2()); }
	ruleBitStringComplementExpression
{ after(grammarAccess.getCastCompletionAccess().getBitStringComplementExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getIsolationExpressionParserRuleCall_3()); }
	ruleIsolationExpression
{ after(grammarAccess.getCastCompletionAccess().getIsolationExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAnnotatedStatementParserRuleCall_0()); }
	ruleAnnotatedStatement
{ after(grammarAccess.getStatementAccess().getAnnotatedStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInLineStatementParserRuleCall_1()); }
	ruleInLineStatement
{ after(grammarAccess.getStatementAccess().getInLineStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_2()); }
	ruleBlockStatement
{ after(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_3()); }
	ruleEmptyStatement
{ after(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLocalNameDeclarationOrExpressionStatementParserRuleCall_4()); }
	ruleLocalNameDeclarationOrExpressionStatement
{ after(grammarAccess.getStatementAccess().getLocalNameDeclarationOrExpressionStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLocalNameDeclarationStatementParserRuleCall_5()); }
	ruleLocalNameDeclarationStatement
{ after(grammarAccess.getStatementAccess().getLocalNameDeclarationStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_6()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7()); }
	ruleSwitchStatement
{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_8()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_9()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_10()); }
	ruleDoStatement
{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_11()); }
	ruleBreakStatement
{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_12()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAcceptStatementParserRuleCall_13()); }
	ruleAcceptStatement
{ after(grammarAccess.getStatementAccess().getAcceptStatementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getClassifyStatementParserRuleCall_14()); }
	ruleClassifyStatement
{ after(grammarAccess.getStatementAccess().getClassifyStatementParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__Group_0__0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_1()); }
(rule__LocalNameDeclarationOrExpressionStatement__Group_1__0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0_1_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0_1_1()); }
(rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializationExpressionAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getInitializationExpressionAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitializationExpressionAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
	ruleSequenceInitializationExpression
{ after(grammarAccess.getInitializationExpressionAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInitializationExpressionAccess().getInstanceInitializationExpressionParserRuleCall_2()); }
	ruleInstanceInitializationExpression
{ after(grammarAccess.getInitializationExpressionAccess().getInstanceInitializationExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0()); }
(rule__LoopVariableDefinition__Group_0__0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_1()); }
(rule__LoopVariableDefinition__Group_1__0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getSimpleCompletionAssignment_1_0()); }
(rule__AcceptStatement__SimpleCompletionAssignment_1_0)
{ after(grammarAccess.getAcceptStatementAccess().getSimpleCompletionAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getAcceptStatementAccess().getCompoundCompletionAssignment_1_1()); }
(rule__AcceptStatement__CompoundCompletionAssignment_1_1)
{ after(grammarAccess.getAcceptStatementAccess().getCompoundCompletionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getGroup_0()); }
(rule__ClassificationClause__Group_0__0)
{ after(grammarAccess.getClassificationClauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClassificationClauseAccess().getGroup_1()); }
(rule__ClassificationClause__Group_1__0)
{ after(grammarAccess.getClassificationClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVisibilityIndicator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getImportVisibilityIndicatorAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getPRIVATEEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getImportVisibilityIndicatorAccess().getPRIVATEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDirection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDirectionAccess().getINEnumLiteralDeclaration_0()); }
(	'in' 
)
{ after(grammarAccess.getParameterDirectionAccess().getINEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getParameterDirectionAccess().getOUTEnumLiteralDeclaration_1()); }
(	'out' 
)
{ after(grammarAccess.getParameterDirectionAccess().getOUTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getParameterDirectionAccess().getINOUTEnumLiteralDeclaration_2()); }
(	'inout' 
)
{ after(grammarAccess.getParameterDirectionAccess().getINOUTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationAccess().getCREATE_LINKEnumLiteralDeclaration_0()); }
(	'createLink' 
)
{ after(grammarAccess.getLinkOperationAccess().getCREATE_LINKEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationAccess().getDESTROY_LINKEnumLiteralDeclaration_1()); }
(	'destroyLink' 
)
{ after(grammarAccess.getLinkOperationAccess().getDESTROY_LINKEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getLinkOperationAccess().getCLEAR_ASSOCEnumLiteralDeclaration_2()); }
(	'clearAssoc' 
)
{ after(grammarAccess.getLinkOperationAccess().getCLEAR_ASSOCEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AffixOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffixOperatorAccess().getINCREnumLiteralDeclaration_0()); }
(	'++' 
)
{ after(grammarAccess.getAffixOperatorAccess().getINCREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAffixOperatorAccess().getDECREnumLiteralDeclaration_1()); }
(	'--' 
)
{ after(grammarAccess.getAffixOperatorAccess().getDECREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getNumericUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getNumericUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getSTAREnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getSTAREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getSLASHEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getSLASHEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getREMEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getREMEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getLSHIFTEnumLiteralDeclaration_0()); }
(	'<<' 
)
{ after(grammarAccess.getShiftOperatorAccess().getLSHIFTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getRSHIFTEnumLiteralDeclaration_1()); }
(	'>>' 
)
{ after(grammarAccess.getShiftOperatorAccess().getRSHIFTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getURSHIFTEnumLiteralDeclaration_2()); }
(	'>>>' 
)
{ after(grammarAccess.getShiftOperatorAccess().getURSHIFTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getLTEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGTEnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLEEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGEEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationOperatorAccess().getINSTANCEOFEnumLiteralDeclaration_0()); }
(	'instanceof' 
)
{ after(grammarAccess.getClassificationOperatorAccess().getINSTANCEOFEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getClassificationOperatorAccess().getHASTYPEEnumLiteralDeclaration_1()); }
(	'hastype' 
)
{ after(grammarAccess.getClassificationOperatorAccess().getHASTYPEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPLUSASSIGNEnumLiteralDeclaration_1()); }
(	'+=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getPLUSASSIGNEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getMINUSASSIGNEnumLiteralDeclaration_2()); }
(	'-=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getMINUSASSIGNEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getSTARASSIGNEnumLiteralDeclaration_3()); }
(	'*=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getSTARASSIGNEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getSLASHASSIGNEnumLiteralDeclaration_4()); }
(	'/=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getSLASHASSIGNEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getREMASSIGNEnumLiteralDeclaration_5()); }
(	'%=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getREMASSIGNEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getANSASSIGNEnumLiteralDeclaration_6()); }
(	'&=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getANSASSIGNEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getORASSIGNEnumLiteralDeclaration_7()); }
(	'|=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getORASSIGNEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getXORASSIGNEnumLiteralDeclaration_8()); }
(	'^=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getXORASSIGNEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getLSHIFTASSIGNEnumLiteralDeclaration_9()); }
(	'<<=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getLSHIFTASSIGNEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getRSHIFTASSIGNEnumLiteralDeclaration_10()); }
(	'>>=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getRSHIFTASSIGNEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getURSHIFTASSIGNEnumLiteralDeclaration_11()); }
(	'>>>=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getURSHIFTASSIGNEnumLiteralDeclaration_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UnitDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitDefinition__Group__0__Impl
	rule__UnitDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getNamespaceDeclarationAssignment_0()); }
(rule__UnitDefinition__NamespaceDeclarationAssignment_0)?
{ after(grammarAccess.getUnitDefinitionAccess().getNamespaceDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitDefinition__Group__1__Impl
	rule__UnitDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getImportDeclarationsAssignment_1()); }
(rule__UnitDefinition__ImportDeclarationsAssignment_1)*
{ after(grammarAccess.getUnitDefinitionAccess().getImportDeclarationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitDefinition__Group__2__Impl
	rule__UnitDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getCommentAssignment_2()); }
(rule__UnitDefinition__CommentAssignment_2)?
{ after(grammarAccess.getUnitDefinitionAccess().getCommentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitDefinition__Group__3__Impl
	rule__UnitDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getStereotypeAnnotationsAssignment_3()); }
(rule__UnitDefinition__StereotypeAnnotationsAssignment_3)
{ after(grammarAccess.getUnitDefinitionAccess().getStereotypeAnnotationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getNamesapceDefinitionAssignment_4()); }
(rule__UnitDefinition__NamesapceDefinitionAssignment_4)
{ after(grammarAccess.getUnitDefinitionAccess().getNamesapceDefinitionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StereotypeAnnotations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotations__Group__0__Impl
	rule__StereotypeAnnotations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationsAccess().getStereotypeAnnotationsAction_0()); }
(

)
{ after(grammarAccess.getStereotypeAnnotationsAccess().getStereotypeAnnotationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationsAccess().getAnnotationAssignment_1()); }
(rule__StereotypeAnnotations__AnnotationAssignment_1)*
{ after(grammarAccess.getStereotypeAnnotationsAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StereotypeAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__0__Impl
	rule__StereotypeAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__1__Impl
	rule__StereotypeAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameAssignment_1()); }
(rule__StereotypeAnnotation__StereotypeNameAssignment_1)
{ after(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getGroup_2()); }
(rule__StereotypeAnnotation__Group_2__0)?
{ after(grammarAccess.getStereotypeAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StereotypeAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__0__Impl
	rule__StereotypeAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__1__Impl
	rule__StereotypeAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesAssignment_2_1()); }
(rule__StereotypeAnnotation__TaggedValuesAssignment_2_1)
{ after(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaggedValueList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group__0__Impl
	rule__TaggedValueList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_0()); }
(rule__TaggedValueList__TaggedValueAssignment_0)
{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValueList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getGroup_1()); }
(rule__TaggedValueList__Group_1__0)*
{ after(grammarAccess.getTaggedValueListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaggedValueList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group_1__0__Impl
	rule__TaggedValueList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTaggedValueListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValueList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_1_1()); }
(rule__TaggedValueList__TaggedValueAssignment_1_1)
{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaggedValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__0__Impl
	rule__TaggedValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getNameAssignment_0()); }
(rule__TaggedValue__NameAssignment_0)
{ after(grammarAccess.getTaggedValueAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__1__Impl
	rule__TaggedValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTaggedValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueAssignment_2()); }
(rule__TaggedValue__ValueAssignment_2)
{ after(grammarAccess.getTaggedValueAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
	rule__NamespaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameAssignment_1()); }
(rule__NamespaceDeclaration__QualifiedNameAssignment_1)
{ after(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getVisibilityAssignment_0()); }
(rule__ImportDeclaration__VisibilityAssignment_0)
{ after(grammarAccess.getImportDeclarationAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
	rule__ImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_1()); }

	'import' 

{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__2__Impl
	rule__ImportDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportReferenceAssignment_2()); }
(rule__ImportDeclaration__ImportReferenceAssignment_2)
{ after(grammarAccess.getImportDeclarationAccess().getImportReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ImportReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportReference__Group__0__Impl
	rule__ImportReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getNameAssignment_0()); }
(rule__ImportReference__NameAssignment_0)
{ after(grammarAccess.getImportReferenceAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getAlternatives_1()); }
(rule__ImportReference__Alternatives_1)?
{ after(grammarAccess.getImportReferenceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportReference__Group_1_2__0__Impl
	rule__ImportReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getColonColonKeyword_1_2_0()); }

	'::' 

{ after(grammarAccess.getImportReferenceAccess().getColonColonKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getStarAssignment_1_2_1()); }
(rule__ImportReference__StarAssignment_1_2_1)
{ after(grammarAccess.getImportReferenceAccess().getStarAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColonQualifiedNameCompletionOfImportReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group__0__Impl
	rule__ColonQualifiedNameCompletionOfImportReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_0()); }

	'::' 

{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionOfImportReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group__1__Impl
	rule__ColonQualifiedNameCompletionOfImportReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameAssignment_1()); }
(rule__ColonQualifiedNameCompletionOfImportReference__NameAssignment_1)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionOfImportReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group__2__Impl
	rule__ColonQualifiedNameCompletionOfImportReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup_2()); }
(rule__ColonQualifiedNameCompletionOfImportReference__Group_2__0)*
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionOfImportReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAlternatives_3()); }
(rule__ColonQualifiedNameCompletionOfImportReference__Alternatives_3)?
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ColonQualifiedNameCompletionOfImportReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group_2__0__Impl
	rule__ColonQualifiedNameCompletionOfImportReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_2_0()); }

	'::' 

{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionOfImportReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameAssignment_2_1()); }
(rule__ColonQualifiedNameCompletionOfImportReference__NameAssignment_2_1)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__0__Impl
	rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_3_0_0()); }

	'::' 

{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getColonColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAssignment_3_0_1()); }
(rule__ColonQualifiedNameCompletionOfImportReference__StarAssignment_3_0_1)
{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefinition__Group__0__Impl
	rule__AliasDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefinitionAccess().getAsKeyword_0()); }

	'as' 

{ after(grammarAccess.getAliasDefinitionAccess().getAsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefinitionAccess().getAliasAssignment_1()); }
(rule__AliasDefinition__AliasAssignment_1)
{ after(grammarAccess.getAliasDefinitionAccess().getAliasAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getDeclarationAssignment_0()); }
(rule__PackageDefinition__DeclarationAssignment_0)
{ after(grammarAccess.getPackageDefinitionAccess().getDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getBodyAssignment_1()); }
(rule__PackageDefinition__BodyAssignment_1)
{ after(grammarAccess.getPackageDefinitionAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group__0__Impl
	rule__PackageDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getDeclarationAssignment_0()); }
(rule__PackageDefinitionOrStub__DeclarationAssignment_0)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getAlternatives_1()); }
(rule__PackageDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageBody__Group__0__Impl
	rule__PackageBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageBodyAccess().getPackageBodyAction_0()); }
(

)
{ after(grammarAccess.getPackageBodyAccess().getPackageBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageBody__Group__1__Impl
	rule__PackageBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageBody__Group__2__Impl
	rule__PackageBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageBodyAccess().getPackagedElementAssignment_2()); }
(rule__PackageBody__PackagedElementAssignment_2)*
{ after(grammarAccess.getPackageBodyAccess().getPackagedElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PackagedElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__0__Impl
	rule__PackagedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getCommentAssignment_0()); }
(rule__PackagedElement__CommentAssignment_0)?
{ after(grammarAccess.getPackagedElementAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__1__Impl
	rule__PackagedElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getStereotypeAnnotationsAssignment_1()); }
(rule__PackagedElement__StereotypeAnnotationsAssignment_1)
{ after(grammarAccess.getPackagedElementAccess().getStereotypeAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__2__Impl
	rule__PackagedElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getImportVisibilityIndicatorAssignment_2()); }
(rule__PackagedElement__ImportVisibilityIndicatorAssignment_2)
{ after(grammarAccess.getPackagedElementAccess().getImportVisibilityIndicatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getPackagedElementDefinitionAssignment_3()); }
(rule__PackagedElement__PackagedElementDefinitionAssignment_3)
{ after(grammarAccess.getPackagedElementAccess().getPackagedElementDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassifierSignature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierSignature__Group__0__Impl
	rule__ClassifierSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getNameAssignment_0()); }
(rule__ClassifierSignature__NameAssignment_0)
{ after(grammarAccess.getClassifierSignatureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierSignature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierSignature__Group__1__Impl
	rule__ClassifierSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getTemplateParametersAssignment_1()); }
(rule__ClassifierSignature__TemplateParametersAssignment_1)?
{ after(grammarAccess.getClassifierSignatureAccess().getTemplateParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierSignature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierSignature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getSpecializationClauseAssignment_2()); }
(rule__ClassifierSignature__SpecializationClauseAssignment_2)?
{ after(grammarAccess.getClassifierSignatureAccess().getSpecializationClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemplateParameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group__0__Impl
	rule__TemplateParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTemplateParametersAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group__1__Impl
	rule__TemplateParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterAssignment_1()); }
(rule__TemplateParameters__ClassifierTemplateParameterAssignment_1)
{ after(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameters__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group__2__Impl
	rule__TemplateParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getGroup_2()); }
(rule__TemplateParameters__Group_2__0)*
{ after(grammarAccess.getTemplateParametersAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameters__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTemplateParametersAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TemplateParameters__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group_2__0__Impl
	rule__TemplateParameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTemplateParametersAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameters__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterAssignment_2_1()); }
(rule__TemplateParameters__ClassifierTemplateParameterAssignment_2_1)
{ after(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierTemplateParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group__0__Impl
	rule__ClassifierTemplateParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getCommentAssignment_0()); }
(rule__ClassifierTemplateParameter__CommentAssignment_0)?
{ after(grammarAccess.getClassifierTemplateParameterAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group__1__Impl
	rule__ClassifierTemplateParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getNameAssignment_1()); }
(rule__ClassifierTemplateParameter__NameAssignment_1)
{ after(grammarAccess.getClassifierTemplateParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getGroup_2()); }
(rule__ClassifierTemplateParameter__Group_2__0)?
{ after(grammarAccess.getClassifierTemplateParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassifierTemplateParameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group_2__0__Impl
	rule__ClassifierTemplateParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getSpecializesKeyword_2_0()); }

	'specializes' 

{ after(grammarAccess.getClassifierTemplateParameterAccess().getSpecializesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getQualifiedNameAssignment_2_1()); }
(rule__ClassifierTemplateParameter__QualifiedNameAssignment_2_1)
{ after(grammarAccess.getClassifierTemplateParameterAccess().getQualifiedNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecializationClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecializationClause__Group__0__Impl
	rule__SpecializationClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecializationClauseAccess().getSpecializesKeyword_0()); }

	'specializes' 

{ after(grammarAccess.getSpecializationClauseAccess().getSpecializesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecializationClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListAssignment_1()); }
(rule__SpecializationClause__QualifiedNameListAssignment_1)
{ after(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__ClassDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassifierSignatureAssignment_2()); }
(rule__ClassDeclaration__ClassifierSignatureAssignment_2)
{ after(grammarAccess.getClassDeclarationAccess().getClassifierSignatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__0__Impl
	rule__ClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassDeclarationAssignment_0()); }
(rule__ClassDefinition__ClassDeclarationAssignment_0)
{ after(grammarAccess.getClassDefinitionAccess().getClassDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassBodyAssignment_1()); }
(rule__ClassDefinition__ClassBodyAssignment_1)
{ after(grammarAccess.getClassDefinitionAccess().getClassBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group__0__Impl
	rule__ClassDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationAssignment_0()); }
(rule__ClassDefinitionOrStub__ClassDeclarationAssignment_0)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ClassDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__0__Impl
	rule__ClassBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getClassBodyAction_0()); }
(

)
{ after(grammarAccess.getClassBodyAccess().getClassBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__1__Impl
	rule__ClassBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__2__Impl
	rule__ClassBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getClassMemberAssignment_2()); }
(rule__ClassBody__ClassMemberAssignment_2)*
{ after(grammarAccess.getClassBodyAccess().getClassMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__0__Impl
	rule__ClassMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getCommentAssignment_0()); }
(rule__ClassMember__CommentAssignment_0)?
{ after(grammarAccess.getClassMemberAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__1__Impl
	rule__ClassMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getStereotypeAnnotationsAssignment_1()); }
(rule__ClassMember__StereotypeAnnotationsAssignment_1)
{ after(grammarAccess.getClassMemberAccess().getStereotypeAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__2__Impl
	rule__ClassMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getVisibilityIndicatorAssignment_2()); }
(rule__ClassMember__VisibilityIndicatorAssignment_2)?
{ after(grammarAccess.getClassMemberAccess().getVisibilityIndicatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getClassMemberDefinitionAssignment_3()); }
(rule__ClassMember__ClassMemberDefinitionAssignment_3)
{ after(grammarAccess.getClassMemberAccess().getClassMemberDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActiveClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__0__Impl
	rule__ActiveClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__ActiveClassDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__1__Impl
	rule__ActiveClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getActiveKeyword_1()); }

	'active' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getActiveKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__2__Impl
	rule__ActiveClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getClassifierSignatureAssignment_3()); }
(rule__ActiveClassDeclaration__ClassifierSignatureAssignment_3)
{ after(grammarAccess.getActiveClassDeclarationAccess().getClassifierSignatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActiveClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__0__Impl
	rule__ActiveClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationAssignment_0()); }
(rule__ActiveClassDefinition__ActiveClassDeclarationAssignment_0)
{ after(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getActiveClassBodyAssignment_1()); }
(rule__ActiveClassDefinition__ActiveClassBodyAssignment_1)
{ after(grammarAccess.getActiveClassDefinitionAccess().getActiveClassBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group__0__Impl
	rule__ActiveClassDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationAssignment_0()); }
(rule__ActiveClassDefinitionOrStub__ActiveClassDeclarationAssignment_0)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ActiveClassDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group__0__Impl
	rule__ActiveClassBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getActiveClassBodyAction_0()); }
(

)
{ after(grammarAccess.getActiveClassBodyAccess().getActiveClassBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group__1__Impl
	rule__ActiveClassBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getActiveClassBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group__2__Impl
	rule__ActiveClassBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getActiveClassMemberAssignment_2()); }
(rule__ActiveClassBody__ActiveClassMemberAssignment_2)*
{ after(grammarAccess.getActiveClassBodyAccess().getActiveClassMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group__3__Impl
	rule__ActiveClassBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getActiveClassBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getGroup_4()); }
(rule__ActiveClassBody__Group_4__0)?
{ after(grammarAccess.getActiveClassBodyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActiveClassBody__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group_4__0__Impl
	rule__ActiveClassBody__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getDoKeyword_4_0()); }

	'do' 

{ after(grammarAccess.getActiveClassBodyAccess().getDoKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassBody__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassBody__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getBehaviorClasueAssignment_4_1()); }
(rule__ActiveClassBody__BehaviorClasueAssignment_4_1)
{ after(grammarAccess.getActiveClassBodyAccess().getBehaviorClasueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__0__Impl
	rule__ActiveClassMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getCommentAssignment_0()); }
(rule__ActiveClassMember__CommentAssignment_0)?
{ after(grammarAccess.getActiveClassMemberAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__1__Impl
	rule__ActiveClassMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getStereotypeAnnotationsAssignment_1()); }
(rule__ActiveClassMember__StereotypeAnnotationsAssignment_1)
{ after(grammarAccess.getActiveClassMemberAccess().getStereotypeAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__2__Impl
	rule__ActiveClassMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getVisibilityIndicatorAssignment_2()); }
(rule__ActiveClassMember__VisibilityIndicatorAssignment_2)?
{ after(grammarAccess.getActiveClassMemberAccess().getVisibilityIndicatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getActiveClassMemberDefinitionAssignment_3()); }
(rule__ActiveClassMember__ActiveClassMemberDefinitionAssignment_3)
{ after(grammarAccess.getActiveClassMemberAccess().getActiveClassMemberDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__0__Impl
	rule__DataTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__DataTypeDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__1__Impl
	rule__DataTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }

	'datatype' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getClassifierSignatureAssignment_2()); }
(rule__DataTypeDeclaration__ClassifierSignatureAssignment_2)
{ after(grammarAccess.getDataTypeDeclarationAccess().getClassifierSignatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataTypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__0__Impl
	rule__DataTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationAssignment_0()); }
(rule__DataTypeDefinition__DataTypeDeclarationAssignment_0)
{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getStructureBodyAssignment_1()); }
(rule__DataTypeDefinition__StructureBodyAssignment_1)
{ after(grammarAccess.getDataTypeDefinitionAccess().getStructureBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group__0__Impl
	rule__DataTypeDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationAssignment_0()); }
(rule__DataTypeDefinitionOrStub__DataTypeDeclarationAssignment_0)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getAlternatives_1()); }
(rule__DataTypeDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructuredBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredBody__Group__0__Impl
	rule__StructuredBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredBodyAccess().getStructuredBodyAction_0()); }
(

)
{ after(grammarAccess.getStructuredBodyAccess().getStructuredBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredBody__Group__1__Impl
	rule__StructuredBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStructuredBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredBody__Group__2__Impl
	rule__StructuredBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredBodyAccess().getStructuredMemberAssignment_2()); }
(rule__StructuredBody__StructuredMemberAssignment_2)*
{ after(grammarAccess.getStructuredBodyAccess().getStructuredMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStructuredBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructuredMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__0__Impl
	rule__StructuredMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getCommentAssignment_0()); }
(rule__StructuredMember__CommentAssignment_0)?
{ after(grammarAccess.getStructuredMemberAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__1__Impl
	rule__StructuredMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getStreotypeAnnotationsAssignment_1()); }
(rule__StructuredMember__StreotypeAnnotationsAssignment_1)
{ after(grammarAccess.getStructuredMemberAccess().getStreotypeAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__2__Impl
	rule__StructuredMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getIsPublicAssignment_2()); }
(rule__StructuredMember__IsPublicAssignment_2)?
{ after(grammarAccess.getStructuredMemberAccess().getIsPublicAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getPropertyDefinitionAssignment_3()); }
(rule__StructuredMember__PropertyDefinitionAssignment_3)
{ after(grammarAccess.getStructuredMemberAccess().getPropertyDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssociationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__0__Impl
	rule__AssociationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__AssociationDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__1__Impl
	rule__AssociationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }

	'assoc' 

{ after(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getClassifierSignatureAssignment_2()); }
(rule__AssociationDeclaration__ClassifierSignatureAssignment_2)
{ after(grammarAccess.getAssociationDeclarationAccess().getClassifierSignatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssociationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__0__Impl
	rule__AssociationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationAssignment_0()); }
(rule__AssociationDefinition__AssociationDeclarationAssignment_0)
{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getStructuredBodyAssignment_1()); }
(rule__AssociationDefinition__StructuredBodyAssignment_1)
{ after(grammarAccess.getAssociationDefinitionAccess().getStructuredBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssociationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group__0__Impl
	rule__AssociationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationAssignment_0()); }
(rule__AssociationDefinitionOrStub__AssociationDeclarationAssignment_0)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__AssociationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__0__Impl
	rule__EnumerationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationDeclarationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__1__Impl
	rule__EnumerationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getNameAssignment_1()); }
(rule__EnumerationDeclaration__NameAssignment_1)
{ after(grammarAccess.getEnumerationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getSpecializationClauseAssignment_2()); }
(rule__EnumerationDeclaration__SpecializationClauseAssignment_2)?
{ after(grammarAccess.getEnumerationDeclarationAccess().getSpecializationClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumerationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__0__Impl
	rule__EnumerationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumerationClauseAssignment_0()); }
(rule__EnumerationDefinition__EnumerationClauseAssignment_0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumerationClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumerationBodyAssignment_1()); }
(rule__EnumerationDefinition__EnumerationBodyAssignment_1)
{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumerationBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group__0__Impl
	rule__EnumerationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationAssignment_0()); }
(rule__EnumerationDefinitionOrStub__EnumerationDeclarationAssignment_0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__EnumerationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group__0__Impl
	rule__EnumerationBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getEnumerationBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group__1__Impl
	rule__EnumerationBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameAssignment_1()); }
(rule__EnumerationBody__EnumerationLiteralNameAssignment_1)
{ after(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group__2__Impl
	rule__EnumerationBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getGroup_2()); }
(rule__EnumerationBody__Group_2__0)*
{ after(grammarAccess.getEnumerationBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getEnumerationBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumerationBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group_2__0__Impl
	rule__EnumerationBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getEnumerationBodyAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationBody__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameAssignment_2_1()); }
(rule__EnumerationBody__EnumerationLiteralNameAssignment_2_1)
{ after(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationLiteralName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteralName__Group__0__Impl
	rule__EnumerationLiteralName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getCommentAssignment_0()); }
(rule__EnumerationLiteralName__CommentAssignment_0)?
{ after(grammarAccess.getEnumerationLiteralNameAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteralName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteralName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getNameAssignment_1()); }
(rule__EnumerationLiteralName__NameAssignment_1)
{ after(grammarAccess.getEnumerationLiteralNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__0__Impl
	rule__SignalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__SignalDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__1__Impl
	rule__SignalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_1()); }

	'signal' 

{ after(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getClassifierSignatureAssignment_2()); }
(rule__SignalDeclaration__ClassifierSignatureAssignment_2)
{ after(grammarAccess.getSignalDeclarationAccess().getClassifierSignatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__0__Impl
	rule__SignalDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationAssignment_0()); }
(rule__SignalDefinition__SignalDeclarationAssignment_0)
{ after(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getStructuredBodyAssignment_1()); }
(rule__SignalDefinition__StructuredBodyAssignment_1)
{ after(grammarAccess.getSignalDefinitionAccess().getStructuredBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group__0__Impl
	rule__SignalDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationAssignment_0()); }
(rule__SignalDefinitionOrStub__SignalDeclarationAssignment_0)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getAlternatives_1()); }
(rule__SignalDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__0__Impl
	rule__ActivityDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getActivityKeyword_0()); }

	'activity' 

{ after(grammarAccess.getActivityDeclarationAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__1__Impl
	rule__ActivityDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getNameAssignment_1()); }
(rule__ActivityDeclaration__NameAssignment_1)
{ after(grammarAccess.getActivityDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__2__Impl
	rule__ActivityDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getTemplateParametersAssignment_2()); }
(rule__ActivityDeclaration__TemplateParametersAssignment_2)?
{ after(grammarAccess.getActivityDeclarationAccess().getTemplateParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__3__Impl
	rule__ActivityDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getFormalParametersAssignment_3()); }
(rule__ActivityDeclaration__FormalParametersAssignment_3)
{ after(grammarAccess.getActivityDeclarationAccess().getFormalParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup_4()); }
(rule__ActivityDeclaration__Group_4__0)?
{ after(grammarAccess.getActivityDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActivityDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4__0__Impl
	rule__ActivityDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getActivityDeclarationAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getTypePartAssignment_4_1()); }
(rule__ActivityDeclaration__TypePartAssignment_4_1)
{ after(grammarAccess.getActivityDeclarationAccess().getTypePartAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinition__Group__0__Impl
	rule__ActivityDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationAssignment_0()); }
(rule__ActivityDefinition__ActivityDeclarationAssignment_0)
{ after(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getBlockAssignment_1()); }
(rule__ActivityDefinition__BlockAssignment_1)
{ after(grammarAccess.getActivityDefinitionAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinitionOrStub__Group__0__Impl
	rule__ActivityDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationAssignment_0()); }
(rule__ActivityDefinitionOrStub__ActivityDeclarationAssignment_0)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ActivityDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameters__Group__0__Impl
	rule__FormalParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParametersAccess().getFormalParametersAction_0()); }
(

)
{ after(grammarAccess.getFormalParametersAccess().getFormalParametersAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameters__Group__1__Impl
	rule__FormalParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParametersAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFormalParametersAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameters__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameters__Group__2__Impl
	rule__FormalParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameters__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParametersAccess().getFormalParameterListAssignment_2()); }
(rule__FormalParameters__FormalParameterListAssignment_2)?
{ after(grammarAccess.getFormalParametersAccess().getFormalParameterListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameters__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameters__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParametersAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFormalParametersAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FormalParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group__0__Impl
	rule__FormalParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getFormalParameterAssignment_0()); }
(rule__FormalParameterList__FormalParameterAssignment_0)
{ after(grammarAccess.getFormalParameterListAccess().getFormalParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getGroup_1()); }
(rule__FormalParameterList__Group_1__0)*
{ after(grammarAccess.getFormalParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group_1__0__Impl
	rule__FormalParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getFormalParameterListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getFormalParameterAssignment_1_1()); }
(rule__FormalParameterList__FormalParameterAssignment_1_1)
{ after(grammarAccess.getFormalParameterListAccess().getFormalParameterAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__0__Impl
	rule__FormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getCommentAssignment_0()); }
(rule__FormalParameter__CommentAssignment_0)?
{ after(grammarAccess.getFormalParameterAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__1__Impl
	rule__FormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getStereotypeAnnotationsAssignment_1()); }
(rule__FormalParameter__StereotypeAnnotationsAssignment_1)
{ after(grammarAccess.getFormalParameterAccess().getStereotypeAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__2__Impl
	rule__FormalParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getParameterDirectionAssignment_2()); }
(rule__FormalParameter__ParameterDirectionAssignment_2)
{ after(grammarAccess.getFormalParameterAccess().getParameterDirectionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__3__Impl
	rule__FormalParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getNameAssignment_3()); }
(rule__FormalParameter__NameAssignment_3)
{ after(grammarAccess.getFormalParameterAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__4__Impl
	rule__FormalParameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getFormalParameterAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getTypePartAssignment_5()); }
(rule__FormalParameter__TypePartAssignment_5)
{ after(grammarAccess.getFormalParameterAccess().getTypePartAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PropertyDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__0__Impl
	rule__PropertyDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationAssignment_0()); }
(rule__PropertyDefinition__PropertyDeclarationAssignment_0)
{ after(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationAssignment_0()); }
(rule__AttributeDefinition__PropertyDeclarationAssignment_0)
{ after(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getAttributeInitializerAssignment_1()); }
(rule__AttributeDefinition__AttributeInitializerAssignment_1)?
{ after(grammarAccess.getAttributeDefinitionAccess().getAttributeInitializerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeInitializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInitializer__Group__0__Impl
	rule__AttributeInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitializerAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAttributeInitializerAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInitializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInitializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionAssignment_1()); }
(rule__AttributeInitializer__InitializationExpressionAssignment_1)
{ after(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
(rule__PropertyDeclaration__NameAssignment_0)
{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__2__Impl
	rule__PropertyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeAssignment_2()); }
(rule__PropertyDeclaration__IsCompositeAssignment_2)?
{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypePartAssignment_3()); }
(rule__PropertyDeclaration__TypePartAssignment_3)
{ after(grammarAccess.getPropertyDeclarationAccess().getTypePartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group__0__Impl
	rule__TypePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getTypeNameAssignment_0()); }
(rule__TypePart__TypeNameAssignment_0)
{ after(grammarAccess.getTypePartAccess().getTypeNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getMultiplicityAssignment_1()); }
(rule__TypePart__MultiplicityAssignment_1)?
{ after(grammarAccess.getTypePartAccess().getMultiplicityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getMultiplicityAction_0()); }
(

)
{ after(grammarAccess.getMultiplicityAccess().getMultiplicityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__2__Impl
	rule__Multiplicity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getMultiplicityRangeAssignment_2()); }
(rule__Multiplicity__MultiplicityRangeAssignment_2)?
{ after(grammarAccess.getMultiplicityAccess().getMultiplicityRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__3__Impl
	rule__Multiplicity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getAlternatives_4()); }
(rule__Multiplicity__Alternatives_4)?
{ after(grammarAccess.getMultiplicityAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Multiplicity__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_4_0__0__Impl
	rule__Multiplicity__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedAssignment_4_0_0()); }
(rule__Multiplicity__IsOrderedAssignment_4_0_0)
{ after(grammarAccess.getMultiplicityAccess().getIsOrderedAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueAssignment_4_0_1()); }
(rule__Multiplicity__IsNonUniqueAssignment_4_0_1)?
{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicity__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_4_1__0__Impl
	rule__Multiplicity__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueAssignment_4_1_0()); }
(rule__Multiplicity__IsNonUniqueAssignment_4_1_0)
{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedAssignment_4_1_1()); }
(rule__Multiplicity__IsOrderedAssignment_4_1_1)?
{ after(grammarAccess.getMultiplicityAccess().getIsOrderedAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicityRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityRange__Group__0__Impl
	rule__MultiplicityRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getGroup_0()); }
(rule__MultiplicityRange__Group_0__0)?
{ after(grammarAccess.getMultiplicityRangeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityRange__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getUpperAssignment_1()); }
(rule__MultiplicityRange__UpperAssignment_1)
{ after(grammarAccess.getMultiplicityRangeAccess().getUpperAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicityRange__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityRange__Group_0__0__Impl
	rule__MultiplicityRange__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getLowerAssignment_0_0()); }
(rule__MultiplicityRange__LowerAssignment_0_0)
{ after(grammarAccess.getMultiplicityRangeAccess().getLowerAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityRange__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityRange__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getFullStopFullStopKeyword_0_1()); }

	'..' 

{ after(grammarAccess.getMultiplicityRangeAccess().getFullStopFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__0__Impl
	rule__OperationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__OperationDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__1__Impl
	rule__OperationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getNameAssignment_1()); }
(rule__OperationDeclaration__NameAssignment_1)
{ after(grammarAccess.getOperationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__2__Impl
	rule__OperationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getFormalParametersAssignment_2()); }
(rule__OperationDeclaration__FormalParametersAssignment_2)
{ after(grammarAccess.getOperationDeclarationAccess().getFormalParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__3__Impl
	rule__OperationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getGroup_3()); }
(rule__OperationDeclaration__Group_3__0)?
{ after(grammarAccess.getOperationDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getRedefinitionClauseAssignment_4()); }
(rule__OperationDeclaration__RedefinitionClauseAssignment_4)?
{ after(grammarAccess.getOperationDeclarationAccess().getRedefinitionClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OperationDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3__0__Impl
	rule__OperationDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getOperationDeclarationAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getTypePartAssignment_3_1()); }
(rule__OperationDeclaration__TypePartAssignment_3_1)
{ after(grammarAccess.getOperationDeclarationAccess().getTypePartAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinitionOrStub__Group__0__Impl
	rule__OperationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getOperationDeclarationParserRuleCall_0()); }
	ruleOperationDeclaration
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getOperationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__OperationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RedefinitionClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinitionClause__Group__0__Impl
	rule__RedefinitionClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinitionClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getRedefinesKeyword_0()); }

	'redefines' 

{ after(grammarAccess.getRedefinitionClauseAccess().getRedefinesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RedefinitionClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinitionClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinitionClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListAssignment_1()); }
(rule__RedefinitionClause__QualifiedNameListAssignment_1)
{ after(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReceptionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__0__Impl
	rule__ReceptionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getReceptionDefinitionAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceptionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__1__Impl
	rule__ReceptionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getReceptionNameAssignment_1()); }
(rule__ReceptionDefinition__ReceptionNameAssignment_1)
{ after(grammarAccess.getReceptionDefinitionAccess().getReceptionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceptionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReceptionDefinitionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReceptionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__0__Impl
	rule__SignalReceptionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getSignalReceptionDeclarationAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__1__Impl
	rule__SignalReceptionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSignalKeyword_1()); }

	'signal' 

{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSignalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__2__Impl
	rule__SignalReceptionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSignalNameAssignment_2()); }
(rule__SignalReceptionDeclaration__SignalNameAssignment_2)
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSignalNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationClauseAssignment_3()); }
(rule__SignalReceptionDeclaration__SpecializationClauseAssignment_3)?
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SignalReceptionDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group__0__Impl
	rule__SignalReceptionDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionOrDeclarationAssignment_0()); }
(rule__SignalReceptionDefinitionOrStub__SignalReceptionOrDeclarationAssignment_0)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionOrDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getAlternatives_1()); }
(rule__SignalReceptionDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getUnqualifiedAssignment_0()); }
(rule__QualifiedName__UnqualifiedAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getUnqualifiedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameCompletionAssignment_1()); }
(rule__QualifiedName__NameCompletionAssignment_1)?
{ after(grammarAccess.getQualifiedNameAccess().getNameCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColonQualifiedNameCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletion__Group__0__Impl
	rule__ColonQualifiedNameCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionAccess().getColonColonKeyword_0()); }

	'::' 

{ after(grammarAccess.getColonQualifiedNameCompletionAccess().getColonColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionAccess().getNamedBindingsAssignment_1()); }
(rule__ColonQualifiedNameCompletion__NamedBindingsAssignment_1)
{ after(grammarAccess.getColonQualifiedNameCompletionAccess().getNamedBindingsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameBinding__Group__0__Impl
	rule__NameBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getNameAssignment_0()); }
(rule__NameBinding__NameAssignment_0)
{ after(grammarAccess.getNameBindingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getTemplateBindingAssignment_1()); }
(rule__NameBinding__TemplateBindingAssignment_1)?
{ after(grammarAccess.getNameBindingAccess().getTemplateBindingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithoutBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithoutBinding__Group__0__Impl
	rule__QualifiedNameWithoutBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithoutBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithoutBindingAccess().getUnqualifiedAssignment_0()); }
(rule__QualifiedNameWithoutBinding__UnqualifiedAssignment_0)
{ after(grammarAccess.getQualifiedNameWithoutBindingAccess().getUnqualifiedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithoutBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithoutBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithoutBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithoutBindingAccess().getNameCompletionAssignment_1()); }
(rule__QualifiedNameWithoutBinding__NameCompletionAssignment_1)?
{ after(grammarAccess.getQualifiedNameWithoutBindingAccess().getNameCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColonQualifiedNameCompletionWithoutBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionWithoutBinding__Group__0__Impl
	rule__ColonQualifiedNameCompletionWithoutBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionWithoutBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getColonColonKeyword_0()); }

	'::' 

{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getColonColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedNameCompletionWithoutBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColonQualifiedNameCompletionWithoutBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionWithoutBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getNamesAssignment_1()); }
(rule__ColonQualifiedNameCompletionWithoutBinding__NamesAssignment_1)
{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__0__Impl
	rule__TemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTemplateBindingAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__1__Impl
	rule__TemplateBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getAlternatives_1()); }
(rule__TemplateBinding__Alternatives_1)
{ after(grammarAccess.getTemplateBindingAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateBinding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getTemplateBindingAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PositionalTemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group__0__Impl
	rule__PositionalTemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameAssignment_0()); }
(rule__PositionalTemplateBinding__QualifiedNameAssignment_0)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getGroup_1()); }
(rule__PositionalTemplateBinding__Group_1__0)*
{ after(grammarAccess.getPositionalTemplateBindingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTemplateBinding__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group_1__0__Impl
	rule__PositionalTemplateBinding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getPositionalTemplateBindingAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTemplateBinding__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameAssignment_1_1()); }
(rule__PositionalTemplateBinding__QualifiedNameAssignment_1_1)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group__0__Impl
	rule__NamedTemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionAssignment_0()); }
(rule__NamedTemplateBinding__TemplateParameterSubstitutionAssignment_0)
{ after(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getGroup_1()); }
(rule__NamedTemplateBinding__Group_1__0)*
{ after(grammarAccess.getNamedTemplateBindingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTemplateBinding__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group_1__0__Impl
	rule__NamedTemplateBinding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamedTemplateBindingAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTemplateBinding__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionAssignment_1_1()); }
(rule__NamedTemplateBinding__TemplateParameterSubstitutionAssignment_1_1)
{ after(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateParameterSubstitution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__0__Impl
	rule__TemplateParameterSubstitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getNameAssignment_0()); }
(rule__TemplateParameterSubstitution__NameAssignment_0)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameterSubstitution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__1__Impl
	rule__TemplateParameterSubstitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameterSubstitution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getQualifiedNameAssignment_2()); }
(rule__TemplateParameterSubstitution__QualifiedNameAssignment_2)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getQualifiedNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__Expression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionCompletionAssignment_1()); }
(rule__Expression__ExpressionCompletionAssignment_1)
{ after(grammarAccess.getExpressionAccess().getExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonNameExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNameExpression__Group__0__Impl
	rule__NonNameExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNameExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNameExpressionAccess().getNonNameUnaryExpressionAssignment_0()); }
(rule__NonNameExpression__NonNameUnaryExpressionAssignment_0)
{ after(grammarAccess.getNonNameExpressionAccess().getNonNameUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNameExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNameExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNameExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNameExpressionAccess().getExpressionCompletionAssignment_1()); }
(rule__NonNameExpression__ExpressionCompletionAssignment_1)
{ after(grammarAccess.getNonNameExpressionAccess().getExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameToExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameToExpressionCompletion__Group__0__Impl
	rule__NameToExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameToExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToExpressionCompletionAccess().getNameToPrimaryAssignment_0()); }
(rule__NameToExpressionCompletion__NameToPrimaryAssignment_0)?
{ after(grammarAccess.getNameToExpressionCompletionAccess().getNameToPrimaryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameToExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameToExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameToExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToExpressionCompletionAccess().getPrimaryToExpressionCompletionAssignment_1()); }
(rule__NameToExpressionCompletion__PrimaryToExpressionCompletionAssignment_1)
{ after(grammarAccess.getNameToExpressionCompletionAccess().getPrimaryToExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryToExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryToExpressionCompletion__Group__0__Impl
	rule__PrimaryToExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryToExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryToExpressionCompletionAccess().getPostFixExpressionCompletionAssignment_0()); }
(rule__PrimaryToExpressionCompletion__PostFixExpressionCompletionAssignment_0)?
{ after(grammarAccess.getPrimaryToExpressionCompletionAccess().getPostFixExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryToExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryToExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryToExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryToExpressionCompletionAccess().getExpressionCompletionAssignment_1()); }
(rule__PrimaryToExpressionCompletion__ExpressionCompletionAssignment_1)
{ after(grammarAccess.getPrimaryToExpressionCompletionAccess().getExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
(rule__PrimaryExpression__Alternatives_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionCompletionAssignment_1()); }
(rule__PrimaryExpression__PrimaryExpressionCompletionAssignment_1)?
{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameToPrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameToPrimaryExpression__Group_0__0__Impl
	rule__NameToPrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getFullStopKeyword_0_0()); }

	'.' 

{ after(grammarAccess.getNameToPrimaryExpressionAccess().getFullStopKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameToPrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameToPrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getAlternatives_0_1()); }
(rule__NameToPrimaryExpression__Alternatives_0_1)
{ after(grammarAccess.getNameToPrimaryExpressionAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__0__Impl
	rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureAssignment_0_0()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__FeatureAssignment_0_0)
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureInvocationAssignment_0_1()); }
(rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__FeatureInvocationAssignment_0_1)?
{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureInvocationAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrPrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrPrimaryExpression__Group__0__Impl
	rule__NameOrPrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrPrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrPrimaryExpressionAccess().getPotentiallyAmbiguousQualifiedNameAssignment_0()); }
(rule__NameOrPrimaryExpression__PotentiallyAmbiguousQualifiedNameAssignment_0)
{ after(grammarAccess.getNameOrPrimaryExpressionAccess().getPotentiallyAmbiguousQualifiedNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrPrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrPrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrPrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrPrimaryExpressionAccess().getNameToPrimaryExpressionAssignment_1()); }
(rule__NameOrPrimaryExpression__NameToPrimaryExpressionAssignment_1)?
{ after(grammarAccess.getNameOrPrimaryExpressionAccess().getNameToPrimaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThisExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group__0__Impl
	rule__ThisExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getThisExpressionAction_0()); }
(

)
{ after(grammarAccess.getThisExpressionAccess().getThisExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group__1__Impl
	rule__ThisExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getThisKeyword_1()); }

	'this' 

{ after(grammarAccess.getThisExpressionAccess().getThisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getTupleAssignment_2()); }
(rule__ThisExpression__TupleAssignment_2)?
{ after(grammarAccess.getThisExpressionAccess().getTupleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionAssignment_1()); }
(rule__ParenthesizedExpression__ExpressionAssignment_1)
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Feature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getFeatureAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
(rule__Feature__NameAssignment_1)
{ after(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getTupleAction_0()); }
(

)
{ after(grammarAccess.getTupleAccess().getTupleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__2__Impl
	rule__Tuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getAlternatives_2()); }
(rule__Tuple__Alternatives_2)?
{ after(grammarAccess.getTupleAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PositionalTupleExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group__0__Impl
	rule__PositionalTupleExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_0()); }
(rule__PositionalTupleExpressionList__ExpressionAssignment_0)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1()); }
(rule__PositionalTupleExpressionList__Group_1__0)*
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTupleExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1__0__Impl
	rule__PositionalTupleExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getPositionalTupleExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_1()); }
(rule__PositionalTupleExpressionList__ExpressionAssignment_1_1)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTupleExpressionListCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionListCompletion__Group__0__Impl
	rule__PositionalTupleExpressionListCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionListCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getPositionalTupleExpressionListCompletionAction_0()); }
(

)
{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getPositionalTupleExpressionListCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionListCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionListCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionListCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getGroup_1()); }
(rule__PositionalTupleExpressionListCompletion__Group_1__0)*
{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTupleExpressionListCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionListCompletion__Group_1__0__Impl
	rule__PositionalTupleExpressionListCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionListCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionListCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionListCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionListCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getExpressionAssignment_1_1()); }
(rule__PositionalTupleExpressionListCompletion__ExpressionAssignment_1_1)
{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTupleExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group__0__Impl
	rule__NamedTupleExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
(rule__NamedTupleExpressionList__NamedExpressionAssignment_0)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTupleExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getGroup_1()); }
(rule__NamedTupleExpressionList__Group_1__0)*
{ after(grammarAccess.getNamedTupleExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTupleExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group_1__0__Impl
	rule__NamedTupleExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTupleExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
(rule__NamedTupleExpressionList__NamedExpressionAssignment_1_1)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__0__Impl
	rule__NamedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getNameAssignment_0()); }
(rule__NamedExpression__NameAssignment_0)
{ after(grammarAccess.getNamedExpressionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__1__Impl
	rule__NamedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getExpressionAssignment_2()); }
(rule__NamedExpression__ExpressionAssignment_2)
{ after(grammarAccess.getNamedExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuperInvocationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__0__Impl
	rule__SuperInvocationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getSuperKeyword_0()); }

	'super' 

{ after(grammarAccess.getSuperInvocationExpressionAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__1__Impl
	rule__SuperInvocationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getGroup_1()); }
(rule__SuperInvocationExpression__Group_1__0)?
{ after(grammarAccess.getSuperInvocationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTupleAssignment_2()); }
(rule__SuperInvocationExpression__TupleAssignment_2)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getTupleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuperInvocationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group_1__0__Impl
	rule__SuperInvocationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getSuperInvocationExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getQualifiedNameAssignment_1_1()); }
(rule__SuperInvocationExpression__QualifiedNameAssignment_1_1)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getQualifiedNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceCreationOrSequenceConstructionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group__0__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group__1__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getQualifiedNameAssignment_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__QualifiedNameAssignment_1)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getQualifiedNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getAlternatives_2()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Alternatives_2)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LinkOperationCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationCompletion__Group__0__Impl
	rule__LinkOperationCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationAssignment_0()); }
(rule__LinkOperationCompletion__LinkOperationAssignment_0)
{ after(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationTupleAssignment_1()); }
(rule__LinkOperationCompletion__LinkOperationTupleAssignment_1)
{ after(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationTupleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__0__Impl
	rule__LinkOperationTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getLinkOperationTupleAction_0()); }
(

)
{ after(grammarAccess.getLinkOperationTupleAccess().getLinkOperationTupleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__1__Impl
	rule__LinkOperationTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getLinkOperationTupleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__2__Impl
	rule__LinkOperationTuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2()); }
(rule__LinkOperationTuple__Alternatives_2)?
{ after(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getLinkOperationTupleAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LinkOperationTuple__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0__0__Impl
	rule__LinkOperationTuple__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getNameAssignment_2_0_0()); }
(rule__LinkOperationTuple__NameAssignment_2_0_0)
{ after(grammarAccess.getLinkOperationTupleAccess().getNameAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2_0_1()); }
(rule__LinkOperationTuple__Alternatives_2_0_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group_2_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0__0__Impl
	rule__LinkOperationTuple__Group_2_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexAssignment_2_0_1_0_0()); }
(rule__LinkOperationTuple__IndexAssignment_2_0_1_0_0)
{ after(grammarAccess.getLinkOperationTupleAccess().getIndexAssignment_2_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2_0_1_0_1()); }
(rule__LinkOperationTuple__Alternatives_2_0_1_0_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getAlternatives_2_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group_2_0_1_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0_1_0__0__Impl
	rule__LinkOperationTuple__Group_2_0_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getEqualsSignGreaterThanSignKeyword_2_0_1_0_1_0_0()); }

	'=>' 

{ after(grammarAccess.getLinkOperationTupleAccess().getEqualsSignGreaterThanSignKeyword_2_0_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexNamedExpressionListCompletionAssignment_2_0_1_0_1_0_1()); }
(rule__LinkOperationTuple__IndexNamedExpressionListCompletionAssignment_2_0_1_0_1_0_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getIndexNamedExpressionListCompletionAssignment_2_0_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group_2_0_1_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0_1_1__0__Impl
	rule__LinkOperationTuple__Group_2_0_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPrimaryToExpressionCompletionAssignment_2_0_1_0_1_1_0()); }
(rule__LinkOperationTuple__PrimaryToExpressionCompletionAssignment_2_0_1_0_1_1_0)
{ after(grammarAccess.getLinkOperationTupleAccess().getPrimaryToExpressionCompletionAssignment_2_0_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionAssignment_2_0_1_0_1_1_1()); }
(rule__LinkOperationTuple__PositionalTupleExpressionListCompletionAssignment_2_0_1_0_1_1_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionAssignment_2_0_1_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group_2_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_1__0__Impl
	rule__LinkOperationTuple__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getEqualsSignGreaterThanSignKeyword_2_0_1_1_0()); }

	'=>' 

{ after(grammarAccess.getLinkOperationTupleAccess().getEqualsSignGreaterThanSignKeyword_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedExpressionListCompletionAssignment_2_0_1_1_1()); }
(rule__LinkOperationTuple__IndexedNamedExpressionListCompletionAssignment_2_0_1_1_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedExpressionListCompletionAssignment_2_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkOperationTuple__Group_2_0_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_3__0__Impl
	rule__LinkOperationTuple__Group_2_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getNameToExpressionCompletionAssignment_2_0_1_3_0()); }
(rule__LinkOperationTuple__NameToExpressionCompletionAssignment_2_0_1_3_0)
{ after(grammarAccess.getLinkOperationTupleAccess().getNameToExpressionCompletionAssignment_2_0_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_3__1__Impl
	rule__LinkOperationTuple__Group_2_0_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getCommaKeyword_2_0_1_3_1()); }

	',' 

{ after(grammarAccess.getLinkOperationTupleAccess().getCommaKeyword_2_0_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group_2_0_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group_2_0_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group_2_0_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListAssignment_2_0_1_3_2()); }
(rule__LinkOperationTuple__PositionalTupleExpressionListAssignment_2_0_1_3_2)
{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListAssignment_2_0_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IndexedNamedExpressionListCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpressionListCompletion__Group__0__Impl
	rule__IndexedNamedExpressionListCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getExpressionAssignment_0()); }
(rule__IndexedNamedExpressionListCompletion__ExpressionAssignment_0)
{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpressionListCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpressionListCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getGroup_1()); }
(rule__IndexedNamedExpressionListCompletion__Group_1__0)*
{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedNamedExpressionListCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpressionListCompletion__Group_1__0__Impl
	rule__IndexedNamedExpressionListCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpressionListCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpressionListCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getIndexedNamedExpressionAssignment_1_1()); }
(rule__IndexedNamedExpressionListCompletion__IndexedNamedExpressionAssignment_1_1)
{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getIndexedNamedExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedNamedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__0__Impl
	rule__IndexedNamedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getNameAssignment_0()); }
(rule__IndexedNamedExpression__NameAssignment_0)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__1__Impl
	rule__IndexedNamedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getIndexAssignment_1()); }
(rule__IndexedNamedExpression__IndexAssignment_1)?
{ after(grammarAccess.getIndexedNamedExpressionAccess().getIndexAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__2__Impl
	rule__IndexedNamedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_2()); }

	'=>' 

{ after(grammarAccess.getIndexedNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getExpressionAssignment_3()); }
(rule__IndexedNamedExpression__ExpressionAssignment_3)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassExtentExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpressionCompletion__Group__0__Impl
	rule__ClassExtentExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionCompletionAccess().getClassExtentExpressionCompletionAction_0()); }
(

)
{ after(grammarAccess.getClassExtentExpressionCompletionAccess().getClassExtentExpressionCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpressionCompletion__Group__1__Impl
	rule__ClassExtentExpressionCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionCompletionAccess().getAllInstancesKeyword_1()); }

	'allInstances' 

{ after(grammarAccess.getClassExtentExpressionCompletionAccess().getAllInstancesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpressionCompletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpressionCompletion__Group__2__Impl
	rule__ClassExtentExpressionCompletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpressionCompletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionCompletionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getClassExtentExpressionCompletionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpressionCompletion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpressionCompletion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpressionCompletion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionCompletionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getClassExtentExpressionCompletionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SequenceAnyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceAnyExpression__Group__0__Impl
	rule__SequenceAnyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getSequenceAnyExpressionAction_0()); }
(

)
{ after(grammarAccess.getSequenceAnyExpressionAccess().getSequenceAnyExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceAnyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceAnyExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getAlternatives_1()); }
(rule__SequenceAnyExpression__Alternatives_1)
{ after(grammarAccess.getSequenceAnyExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceAnyExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceAnyExpression__Group_1_0__0__Impl
	rule__SequenceAnyExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getAnyKeyword_1_0_0()); }

	'any' 

{ after(grammarAccess.getSequenceAnyExpressionAccess().getAnyKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceAnyExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceAnyExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getSequenceConstructionExpressionCompletionAssignment_1_0_1()); }
(rule__SequenceAnyExpression__SequenceConstructionExpressionCompletionAssignment_1_0_1)
{ after(grammarAccess.getSequenceAnyExpressionAccess().getSequenceConstructionExpressionCompletionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceConstructionExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpressionCompletion__Group__0__Impl
	rule__SequenceConstructionExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceConstructionExpressionCompletionAction_0()); }
(

)
{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceConstructionExpressionCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpressionCompletion__Group__1__Impl
	rule__SequenceConstructionExpressionCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getMultiplicityIndicatorAssignment_1()); }
(rule__SequenceConstructionExpressionCompletion__MultiplicityIndicatorAssignment_1)?
{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getMultiplicityIndicatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpressionCompletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpressionCompletion__Group__2__Impl
	rule__SequenceConstructionExpressionCompletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpressionCompletion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpressionCompletion__Group__3__Impl
	rule__SequenceConstructionExpressionCompletion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceElementsAssignment_3()); }
(rule__SequenceConstructionExpressionCompletion__SequenceElementsAssignment_3)?
{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpressionCompletion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpressionCompletion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MultiplicityIndicator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityIndicator__Group__0__Impl
	rule__MultiplicityIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityIndicator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getMultiplicityIndicatorAction_0()); }
(

)
{ after(grammarAccess.getMultiplicityIndicatorAccess().getMultiplicityIndicatorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityIndicator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityIndicator__Group__1__Impl
	rule__MultiplicityIndicator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityIndicator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getMultiplicityIndicatorAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityIndicator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityIndicator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityIndicator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getMultiplicityIndicatorAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceElements__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_0__0__Impl
	rule__SequenceElements__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getExpression1Assignment_0_0()); }
(rule__SequenceElements__Expression1Assignment_0_0)
{ after(grammarAccess.getSequenceElementsAccess().getExpression1Assignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElements__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getAlternatives_0_1()); }
(rule__SequenceElements__Alternatives_0_1)
{ after(grammarAccess.getSequenceElementsAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceElements__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_0_1_0__0__Impl
	rule__SequenceElements__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getFullStopFullStopKeyword_0_1_0_0()); }

	'..' 

{ after(grammarAccess.getSequenceElementsAccess().getFullStopFullStopKeyword_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElements__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getExpression2Assignment_0_1_0_1()); }
(rule__SequenceElements__Expression2Assignment_0_1_0_1)
{ after(grammarAccess.getSequenceElementsAccess().getExpression2Assignment_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceElements__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_1__0__Impl
	rule__SequenceElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceInitializationExpressionAssignment_1_0()); }
(rule__SequenceElements__SequenceInitializationExpressionAssignment_1_0)
{ after(grammarAccess.getSequenceElementsAccess().getSequenceInitializationExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElements__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionAssignment_1_1()); }
(rule__SequenceElements__SequenceElementListCompletionAssignment_1_1)
{ after(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceElementListCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElementListCompletion__Group__0__Impl
	rule__SequenceElementListCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementListCompletionAction_0()); }
(

)
{ after(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementListCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElementListCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElementListCompletion__Group__1__Impl
	rule__SequenceElementListCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getGroup_1()); }
(rule__SequenceElementListCompletion__Group_1__0)*
{ after(grammarAccess.getSequenceElementListCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElementListCompletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElementListCompletion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getCommaKeyword_2()); }
(
	',' 
)?
{ after(grammarAccess.getSequenceElementListCompletionAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceElementListCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElementListCompletion__Group_1__0__Impl
	rule__SequenceElementListCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getSequenceElementListCompletionAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElementListCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceElementListCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementAssignment_1_1()); }
(rule__SequenceElementListCompletion__SequenceElementAssignment_1_1)
{ after(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceInitializationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__0__Impl
	rule__SequenceInitializationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewAssignment_0()); }
(rule__SequenceInitializationExpression__IsNewAssignment_0)?
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__1__Impl
	rule__SequenceInitializationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__2__Impl
	rule__SequenceInitializationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getSequenceElementsAssignment_2()); }
(rule__SequenceInitializationExpression__SequenceElementsAssignment_2)
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getSequenceElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
(rule__Index__ExpressionAssignment_1)
{ after(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceOperationOrReductionOrExpansion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group__0__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getAlternatives_1()); }
(rule__SequenceOperationOrReductionOrExpansion__Alternatives_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceOperationOrReductionOrExpansion__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_0__0__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameAssignment_1_0_0()); }
(rule__SequenceOperationOrReductionOrExpansion__QualifiedNameAssignment_1_0_0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTupleAssignment_1_0_1()); }
(rule__SequenceOperationOrReductionOrExpansion__TupleAssignment_1_0_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTupleAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceOperationOrReductionOrExpansion__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__0__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceAssignment_1_1_0()); }
(rule__SequenceOperationOrReductionOrExpansion__IsReduceAssignment_1_1_0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__1__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedAssignment_1_1_1()); }
(rule__SequenceOperationOrReductionOrExpansion__IsOrderedAssignment_1_1_1)?
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__2__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameAssignment_1_1_2()); }
(rule__SequenceOperationOrReductionOrExpansion__QualifiedNameAssignment_1_1_2)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTemplateBindingAssignment_1_1_3()); }
(rule__SequenceOperationOrReductionOrExpansion__TemplateBindingAssignment_1_1_3)?
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTemplateBindingAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SequenceOperationOrReductionOrExpansion__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__0__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIdAssignment_1_2_0()); }
(rule__SequenceOperationOrReductionOrExpansion__IdAssignment_1_2_0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIdAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__1__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getNameAssignment_1_2_1()); }
(rule__SequenceOperationOrReductionOrExpansion__NameAssignment_1_2_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getNameAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__2__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getLeftParenthesisKeyword_1_2_2()); }

	'(' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getLeftParenthesisKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__3__Impl
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getExpressionAssignment_1_2_3()); }
(rule__SequenceOperationOrReductionOrExpansion__ExpressionAssignment_1_2_3)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getExpressionAssignment_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansion__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansion__Group_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getRightParenthesisKeyword_1_2_4()); }

	')' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getRightParenthesisKeyword_1_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PostfixExpressionCompletion__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionCompletion__Group_0__0__Impl
	rule__PostfixExpressionCompletion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPrimaryExpressionCompletionAssignment_0_0()); }
(rule__PostfixExpressionCompletion__PrimaryExpressionCompletionAssignment_0_0)
{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPrimaryExpressionCompletionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionCompletion__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionCompletion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationAssignment_0_1()); }
(rule__PostfixExpressionCompletion__PostfixOperationAssignment_0_1)?
{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpression__Group__0__Impl
	rule__PrefixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperatorAssignment_0()); }
(rule__PrefixExpression__OperatorAssignment_0)
{ after(grammarAccess.getPrefixExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getPrimaryExpressionAssignment_1()); }
(rule__PrefixExpression__PrimaryExpressionAssignment_1)
{ after(grammarAccess.getPrefixExpressionAccess().getPrimaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixOrCastExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOrCastExpression__Group_1__0__Impl
	rule__PostfixOrCastExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getNameOrPrimaryExpressionAssignment_1_0()); }
(rule__PostfixOrCastExpression__NameOrPrimaryExpressionAssignment_1_0)
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getNameOrPrimaryExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOrCastExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOrCastExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getPostFixExpressionCompletionAssignment_1_1()); }
(rule__PostfixOrCastExpression__PostFixExpressionCompletionAssignment_1_1)?
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getPostFixExpressionCompletionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonNamePostfixOrCastExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1()); }
(rule__NonNamePostfixOrCastExpression__Alternatives_0_1)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonNamePostfixOrCastExpression__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_0__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAssignment_0_1_0_0()); }
(rule__NonNamePostfixOrCastExpression__AnyAssignment_0_1_0_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAssignment_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_0__1__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_0_1()); }

	')' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionAssignment_0_1_0_2()); }
(rule__NonNamePostfixOrCastExpression__CastCompletionAssignment_0_1_0_2)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionAssignment_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonNamePostfixOrCastExpression__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPotentiallyAmbiguousQualifiedNameAssignment_0_1_1_0()); }
(rule__NonNamePostfixOrCastExpression__PotentiallyAmbiguousQualifiedNameAssignment_0_1_1_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPotentiallyAmbiguousQualifiedNameAssignment_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1_1_1()); }
(rule__NonNamePostfixOrCastExpression__Alternatives_0_1_1_1)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_1_1_0_0()); }

	')' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1_1_1_0_1()); }
(rule__NonNamePostfixOrCastExpression__Alternatives_0_1_1_1_0_1)?
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAlternatives_0_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNameToExpressionCompletionAssignment_0_1_1_1_1_0()); }
(rule__NonNamePostfixOrCastExpression__NameToExpressionCompletionAssignment_0_1_1_1_1_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNameToExpressionCompletionAssignment_0_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__1__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_1_1_1_1()); }

	')' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_0_1_1_1_1_2()); }
(rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_0_1_1_1_1_2)?
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_0_1_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonNamePostfixOrCastExpression__Group_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_2__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNonNameExpressionAssignment_0_1_2_0()); }
(rule__NonNamePostfixOrCastExpression__NonNameExpressionAssignment_0_1_2_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNonNameExpressionAssignment_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_2__1__Impl
	rule__NonNamePostfixOrCastExpression__Group_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_2_1()); }

	')' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getRightParenthesisKeyword_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_0_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_0_1_2_2()); }
(rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_0_1_2_2)?
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonNamePostfixOrCastExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_1__0__Impl
	rule__NonNamePostfixOrCastExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getBaseExpressionAssignment_1_0()); }
(rule__NonNamePostfixOrCastExpression__BaseExpressionAssignment_1_0)
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getBaseExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonNamePostfixOrCastExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonNamePostfixOrCastExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_1_1()); }
(rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_1_1)?
{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanNegationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanNegationExpression__Group__0__Impl
	rule__BooleanNegationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanNegationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanNegationExpressionAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getBooleanNegationExpressionAccess().getExclamationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanNegationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanNegationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanNegationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanNegationExpressionAccess().getUnaryExpressionAssignment_1()); }
(rule__BooleanNegationExpression__UnaryExpressionAssignment_1)
{ after(grammarAccess.getBooleanNegationExpressionAccess().getUnaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitStringComplementExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStringComplementExpression__Group__0__Impl
	rule__BitStringComplementExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringComplementExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringComplementExpressionAccess().getTildeKeyword_0()); }

	'~' 

{ after(grammarAccess.getBitStringComplementExpressionAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStringComplementExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStringComplementExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringComplementExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringComplementExpressionAccess().getUnaryExpressionAssignment_1()); }
(rule__BitStringComplementExpression__UnaryExpressionAssignment_1)
{ after(grammarAccess.getBitStringComplementExpressionAccess().getUnaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericUnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericUnaryExpression__Group__0__Impl
	rule__NumericUnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperatorAssignment_0()); }
(rule__NumericUnaryExpression__OperatorAssignment_0)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericUnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericUnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getUnaryExpressionAssignment_1()); }
(rule__NumericUnaryExpression__UnaryExpressionAssignment_1)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getUnaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsolationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsolationExpression__Group__0__Impl
	rule__IsolationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getIsolationExpressionAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsolationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsolationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getUnaryExpressionAssignment_1()); }
(rule__IsolationExpression__UnaryExpressionAssignment_1)
{ after(grammarAccess.getIsolationExpressionAccess().getUnaryExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__MultiplicativeExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionCompletionAssignment_1()); }
(rule__MultiplicativeExpression__MultiplicativeExpressionCompletionAssignment_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionCompletion__Group__0__Impl
	rule__MultiplicativeExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getMultiplicativeExpressionCompletionAction_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getMultiplicativeExpressionCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getGroup_1()); }
(rule__MultiplicativeExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionCompletion__Group_1__0__Impl
	rule__MultiplicativeExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getOperatorAssignment_1_0()); }
(rule__MultiplicativeExpressionCompletion__OperatorAssignment_1_0)
{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getUnaryExpressionAssignment_1_1()); }
(rule__MultiplicativeExpressionCompletion__UnaryExpressionAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getUnaryExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__AdditiveExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionCompletionAssignment_1()); }
(rule__AdditiveExpression__AdditiveExpressionCompletionAssignment_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionCompletion__Group__0__Impl
	rule__AdditiveExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionCompletionAssignment_0()); }
(rule__AdditiveExpressionCompletion__MultiplicativeExpressionCompletionAssignment_0)
{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getGroup_1()); }
(rule__AdditiveExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionCompletion__Group_1__0__Impl
	rule__AdditiveExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getOperatorAssignment_1_0()); }
(rule__AdditiveExpressionCompletion__OperatorAssignment_1_0)
{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionAssignment_1_1()); }
(rule__AdditiveExpressionCompletion__MultiplicativeExpressionAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__ShiftExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getShiftExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getShiftExpressionCompletionAssignment_1()); }
(rule__ShiftExpression__ShiftExpressionCompletionAssignment_1)
{ after(grammarAccess.getShiftExpressionAccess().getShiftExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpressionCompletion__Group__0__Impl
	rule__ShiftExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionCompletionAssignment_0()); }
(rule__ShiftExpressionCompletion__AdditiveExpressionCompletionAssignment_0)
{ after(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getGroup_1()); }
(rule__ShiftExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getShiftExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpressionCompletion__Group_1__0__Impl
	rule__ShiftExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getOperatorAssignment_1_0()); }
(rule__ShiftExpressionCompletion__OperatorAssignment_1_0)
{ after(grammarAccess.getShiftExpressionCompletionAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionAssignment_1_1()); }
(rule__ShiftExpressionCompletion__AdditiveExpressionAssignment_1_1)
{ after(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RelationalExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpressionCompletion__Group__0__Impl
	rule__RelationalExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionCompletionAssignment_0()); }
(rule__RelationalExpressionCompletion__ShiftExpressionCompletionAssignment_0)
{ after(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getGroup_1()); }
(rule__RelationalExpressionCompletion__Group_1__0)?
{ after(grammarAccess.getRelationalExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpressionCompletion__Group_1__0__Impl
	rule__RelationalExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getRelationalOperatorAssignment_1_0()); }
(rule__RelationalExpressionCompletion__RelationalOperatorAssignment_1_0)
{ after(grammarAccess.getRelationalExpressionCompletionAccess().getRelationalOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionAssignment_1_1()); }
(rule__RelationalExpressionCompletion__ShiftExpressionAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group__0__Impl
	rule__ClassificationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__ClassificationExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getClassificationExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionCompletionAssignment_1()); }
(rule__ClassificationExpression__ClassificationExpressionCompletionAssignment_1)
{ after(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpressionCompletion__Group__0__Impl
	rule__ClassificationExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getRelationalExpressionCompletionAssignment_0()); }
(rule__ClassificationExpressionCompletion__RelationalExpressionCompletionAssignment_0)
{ after(grammarAccess.getClassificationExpressionCompletionAccess().getRelationalExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getGroup_1()); }
(rule__ClassificationExpressionCompletion__Group_1__0)?
{ after(grammarAccess.getClassificationExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpressionCompletion__Group_1__0__Impl
	rule__ClassificationExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getOperatorAssignment_1_0()); }
(rule__ClassificationExpressionCompletion__OperatorAssignment_1_0)
{ after(grammarAccess.getClassificationExpressionCompletionAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getNameAssignment_1_1()); }
(rule__ClassificationExpressionCompletion__NameAssignment_1_1)
{ after(grammarAccess.getClassificationExpressionCompletionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__EqualityExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getEqualityExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionCompletionAssignment_1()); }
(rule__EqualityExpression__ClassificationExpressionCompletionAssignment_1)
{ after(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpressionCompletion__Group__0__Impl
	rule__EqualityExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionCompletionAssignment_0()); }
(rule__EqualityExpressionCompletion__ClassificationExpressionCompletionAssignment_0)
{ after(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getGroup_1()); }
(rule__EqualityExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpressionCompletion__Group_1__0__Impl
	rule__EqualityExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getOperatorAssignment_1_0()); }
(rule__EqualityExpressionCompletion__OperatorAssignment_1_0)
{ after(grammarAccess.getEqualityExpressionCompletionAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionAssignment_1_1()); }
(rule__EqualityExpressionCompletion__ClassificationExpressionAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__AndExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getAndExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAndExpressionCompletionAssignment_1()); }
(rule__AndExpression__AndExpressionCompletionAssignment_1)
{ after(grammarAccess.getAndExpressionAccess().getAndExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpressionCompletion__Group__0__Impl
	rule__AndExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionCompletionAssignment_0()); }
(rule__AndExpressionCompletion__EqualityExpressionCompletionAssignment_0)
{ after(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getGroup_1()); }
(rule__AndExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getAndExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpressionCompletion__Group_1__0__Impl
	rule__AndExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getAndExpressionCompletionAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionAssignment_1_1()); }
(rule__AndExpressionCompletion__EqualityExpressionAssignment_1_1)
{ after(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__0__Impl
	rule__ExclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__ExclusiveOrExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionCompletionAssignment_1()); }
(rule__ExclusiveOrExpression__ExclusiveOrExpressionCompletionAssignment_1)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExclusiveOrExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpressionCompletion__Group__0__Impl
	rule__ExclusiveOrExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionCompletionAssignment_0()); }
(rule__ExclusiveOrExpressionCompletion__AndExpressionCompletionAssignment_0)
{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getGroup_1()); }
(rule__ExclusiveOrExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExclusiveOrExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpressionCompletion__Group_1__0__Impl
	rule__ExclusiveOrExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionAssignment_1_1()); }
(rule__ExclusiveOrExpressionCompletion__AndExpressionAssignment_1_1)
{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__0__Impl
	rule__InclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__InclusiveOrExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionCompletionAssignment_1()); }
(rule__InclusiveOrExpression__InclusiveOrExpressionCompletionAssignment_1)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InclusiveOrExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpressionCompletion__Group__0__Impl
	rule__InclusiveOrExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionCompletionAssignment_0()); }
(rule__InclusiveOrExpressionCompletion__ExclusiveOrExpressionCompletionAssignment_0)
{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getGroup_1()); }
(rule__InclusiveOrExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InclusiveOrExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpressionCompletion__Group_1__0__Impl
	rule__InclusiveOrExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionAssignment_1_1()); }
(rule__InclusiveOrExpressionCompletion__ExclusiveOrExpressionAssignment_1_1)
{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__ConditionalAndExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionCompletionAssignment_1()); }
(rule__ConditionalAndExpression__ConditionalAndExpressionCompletionAssignment_1)
{ after(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpressionCompletion__Group__0__Impl
	rule__ConditionalAndExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionCompletionAssignment_0()); }
(rule__ConditionalAndExpressionCompletion__InclusiveOrExpressionCompletionAssignment_0)
{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getGroup_1()); }
(rule__ConditionalAndExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpressionCompletion__Group_1__0__Impl
	rule__ConditionalAndExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionAssignment_1_1()); }
(rule__ConditionalAndExpressionCompletion__InclusiveOrExpressionAssignment_1_1)
{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ConditionalOrExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpressionCompletion__Group__0__Impl
	rule__ConditionalOrExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionCompletionAssignment_0()); }
(rule__ConditionalOrExpressionCompletion__ConditionalAndExpressionCompletionAssignment_0)
{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getGroup_1()); }
(rule__ConditionalOrExpressionCompletion__Group_1__0)*
{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalOrExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpressionCompletion__Group_1__0__Impl
	rule__ConditionalOrExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpressionCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionAssignment_1_1()); }
(rule__ConditionalOrExpressionCompletion__ConditionalAndExpressionAssignment_1_1)
{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getUnaryExpressionAssignment_0()); }
(rule__ConditionalExpression__UnaryExpressionAssignment_0)
{ after(grammarAccess.getConditionalExpressionAccess().getUnaryExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionCompletionAssignment_1()); }
(rule__ConditionalExpression__ConditionalExpressionCompletionAssignment_1)
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionCompletionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group__0__Impl
	rule__ConditionalExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalOrExpressionCompletionAssignment_0()); }
(rule__ConditionalExpressionCompletion__ConditionalOrExpressionCompletionAssignment_0)
{ after(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalOrExpressionCompletionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getGroup_1()); }
(rule__ConditionalExpressionCompletion__Group_1__0)?
{ after(grammarAccess.getConditionalExpressionCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpressionCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group_1__0__Impl
	rule__ConditionalExpressionCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getConditionalExpressionCompletionAccess().getQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpressionCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group_1__1__Impl
	rule__ConditionalExpressionCompletion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getExpressionAssignment_1_1()); }
(rule__ConditionalExpressionCompletion__ExpressionAssignment_1_1)
{ after(grammarAccess.getConditionalExpressionCompletionAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpressionCompletion__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group_1__2__Impl
	rule__ConditionalExpressionCompletion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getConditionalExpressionCompletionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpressionCompletion__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpressionCompletion__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalExpressionAssignment_1_3()); }
(rule__ConditionalExpressionCompletion__ConditionalExpressionAssignment_1_3)
{ after(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalExpressionAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssignmentExpressionCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpressionCompletion__Group__0__Impl
	rule__AssignmentExpressionCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionCompletionAccess().getOperatorAssignment_0()); }
(rule__AssignmentExpressionCompletion__OperatorAssignment_0)
{ after(grammarAccess.getAssignmentExpressionCompletionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpressionCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpressionCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionCompletionAccess().getExpressionAssignment_1()); }
(rule__AssignmentExpressionCompletion__ExpressionAssignment_1)
{ after(grammarAccess.getAssignmentExpressionCompletionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementSequence__Group__0__Impl
	rule__StatementSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); }
(

)
{ after(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementSequenceAccess().getDocumentStatementAssignment_1()); }
(rule__StatementSequence__DocumentStatementAssignment_1)*
{ after(grammarAccess.getStatementSequenceAccess().getDocumentStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DocumentedStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentedStatement__Group__0__Impl
	rule__DocumentedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentedStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentedStatementAccess().getCommentAssignment_0()); }
(rule__DocumentedStatement__CommentAssignment_0)?
{ after(grammarAccess.getDocumentedStatementAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentedStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentedStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentedStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentedStatementAccess().getStatementAssignment_1()); }
(rule__DocumentedStatement__StatementAssignment_1)
{ after(grammarAccess.getDocumentedStatementAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementSequenceAssignment_1()); }
(rule__Block__StatementSequenceAssignment_1)
{ after(grammarAccess.getBlockAccess().getStatementSequenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotatedStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__0__Impl
	rule__AnnotatedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getSolidusSolidusCommercialAtKeyword_0()); }

	'//@' 

{ after(grammarAccess.getAnnotatedStatementAccess().getSolidusSolidusCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__1__Impl
	rule__AnnotatedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getAnnotationsAssignment_1()); }
(rule__AnnotatedStatement__AnnotationsAssignment_1)
{ after(grammarAccess.getAnnotatedStatementAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__2__Impl
	rule__AnnotatedStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getControl000aKeyword_2()); }

	'\n' 

{ after(grammarAccess.getAnnotatedStatementAccess().getControl000aKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getStatementAssignment_3()); }
(rule__AnnotatedStatement__StatementAssignment_3)
{ after(grammarAccess.getAnnotatedStatementAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotations__Group__0__Impl
	rule__Annotations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAssignment_0()); }
(rule__Annotations__AnnotationAssignment_0)
{ after(grammarAccess.getAnnotationsAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getGroup_1()); }
(rule__Annotations__Group_1__0)*
{ after(grammarAccess.getAnnotationsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotations__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotations__Group_1__0__Impl
	rule__Annotations__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getAnnotationsAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotations__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotations__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAssignment_1_1()); }
(rule__Annotations__AnnotationAssignment_1_1)
{ after(grammarAccess.getAnnotationsAccess().getAnnotationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getIdAssignment_0()); }
(rule__Annotation__IdAssignment_0)
{ after(grammarAccess.getAnnotationAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_1()); }
(rule__Annotation__Group_1__0)?
{ after(grammarAccess.getAnnotationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_1__0__Impl
	rule__Annotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_1__1__Impl
	rule__Annotation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameListAssignment_1_1()); }
(rule__Annotation__NameListAssignment_1_1)
{ after(grammarAccess.getAnnotationAccess().getNameListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NameList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameList__Group__0__Impl
	rule__NameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getNameAssignment_0()); }
(rule__NameList__NameAssignment_0)
{ after(grammarAccess.getNameListAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getGroup_1()); }
(rule__NameList__Group_1__0)*
{ after(grammarAccess.getNameListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameList__Group_1__0__Impl
	rule__NameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNameListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getNameAssignment_1_1()); }
(rule__NameList__NameAssignment_1_1)
{ after(grammarAccess.getNameListAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InLineStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InLineStatement__Group__0__Impl
	rule__InLineStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getSolidusAsteriskCommercialAtKeyword_0()); }

	'/*@' 

{ after(grammarAccess.getInLineStatementAccess().getSolidusAsteriskCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InLineStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InLineStatement__Group__1__Impl
	rule__InLineStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getIdAssignment_1()); }
(rule__InLineStatement__IdAssignment_1)
{ after(grammarAccess.getInLineStatementAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InLineStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InLineStatement__Group__2__Impl
	rule__InLineStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getInLineStatementAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InLineStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InLineStatement__Group__3__Impl
	rule__InLineStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getNameAssignment_3()); }
(rule__InLineStatement__NameAssignment_3)
{ after(grammarAccess.getInLineStatementAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InLineStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InLineStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getInLineStatementAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EmptyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__0__Impl
	rule__EmptyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
(

)
{ after(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalNameDeclarationOrExpressionStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0__0__Impl
	rule__LocalNameDeclarationOrExpressionStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getPotentiallyAmbiguousNameAssignment_0_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__PotentiallyAmbiguousNameAssignment_0_0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getPotentiallyAmbiguousNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationOrExpressionStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getAlternatives_0_1()); }
(rule__LocalNameDeclarationOrExpressionStatement__Alternatives_0_1)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__0__Impl
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getMultiplicaityIndicatorAssignment_0_1_0_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__MultiplicaityIndicatorAssignment_0_1_0_0)?
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getMultiplicaityIndicatorAssignment_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__1__Impl
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameAssignment_0_1_0_1()); }
(rule__LocalNameDeclarationOrExpressionStatement__NameAssignment_0_1_0_1)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameAssignment_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getLocalNameDeclarationCompletionAssignment_0_1_0_2()); }
(rule__LocalNameDeclarationOrExpressionStatement__LocalNameDeclarationCompletionAssignment_0_1_0_2)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getLocalNameDeclarationCompletionAssignment_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__0__Impl
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameToExpressionCompletionAssignment_0_1_1_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__NameToExpressionCompletionAssignment_0_1_1_0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameToExpressionCompletionAssignment_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getSemicolonKeyword_0_1_1_1()); }

	';' 

{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getSemicolonKeyword_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalNameDeclarationOrExpressionStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_1__0__Impl
	rule__LocalNameDeclarationOrExpressionStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNonNameExpressionAssignment_1_0()); }
(rule__LocalNameDeclarationOrExpressionStatement__NonNameExpressionAssignment_1_0)
{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNonNameExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationOrExpressionStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationOrExpressionStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalNameDeclarationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__0__Impl
	rule__LocalNameDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getLetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__1__Impl
	rule__LocalNameDeclarationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_1()); }
(rule__LocalNameDeclarationStatement__NameAssignment_1)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__2__Impl
	rule__LocalNameDeclarationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__3__Impl
	rule__LocalNameDeclarationStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_3()); }
(rule__LocalNameDeclarationStatement__TypeNameAssignment_3)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__4__Impl
	rule__LocalNameDeclarationStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getMultiplicityIndicatorAssignment_4()); }
(rule__LocalNameDeclarationStatement__MultiplicityIndicatorAssignment_4)?
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getMultiplicityIndicatorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getLocalNameDeclarationCompletionAssignment_5()); }
(rule__LocalNameDeclarationStatement__LocalNameDeclarationCompletionAssignment_5)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getLocalNameDeclarationCompletionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocalNameDeclarationStatementCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatementCompletion__Group__0__Impl
	rule__LocalNameDeclarationStatementCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatementCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatementCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatementCompletion__Group__1__Impl
	rule__LocalNameDeclarationStatementCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatementCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getInitializationExpressionAssignment_1()); }
(rule__LocalNameDeclarationStatementCompletion__InitializationExpressionAssignment_1)
{ after(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getInitializationExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatementCompletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatementCompletion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatementCompletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstanceInitializationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceInitializationExpression__Group__0__Impl
	rule__InstanceInitializationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getInstanceInitializationExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceInitializationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceInitializationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getTupleAssignment_1()); }
(rule__InstanceInitializationExpression__TupleAssignment_1)
{ after(grammarAccess.getInstanceInitializationExpressionAccess().getTupleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getSequentialClausesAssignment_1()); }
(rule__IfStatement__SequentialClausesAssignment_1)
{ after(grammarAccess.getIfStatementAccess().getSequentialClausesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getFinalClauseAssignment_2()); }
(rule__IfStatement__FinalClauseAssignment_2)?
{ after(grammarAccess.getIfStatementAccess().getFinalClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequentialClauses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequentialClauses__Group__0__Impl
	rule__SequentialClauses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getConcurrentClausesAssignment_0()); }
(rule__SequentialClauses__ConcurrentClausesAssignment_0)
{ after(grammarAccess.getSequentialClausesAccess().getConcurrentClausesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequentialClauses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequentialClauses__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getGroup_1()); }
(rule__SequentialClauses__Group_1__0)*
{ after(grammarAccess.getSequentialClausesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequentialClauses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequentialClauses__Group_1__0__Impl
	rule__SequentialClauses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getElseKeyword_1_0()); }

	'else' 

{ after(grammarAccess.getSequentialClausesAccess().getElseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequentialClauses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequentialClauses__Group_1__1__Impl
	rule__SequentialClauses__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getIfKeyword_1_1()); }

	'if' 

{ after(grammarAccess.getSequentialClausesAccess().getIfKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequentialClauses__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequentialClauses__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getConcurrentClausesAssignment_1_2()); }
(rule__SequentialClauses__ConcurrentClausesAssignment_1_2)
{ after(grammarAccess.getSequentialClausesAccess().getConcurrentClausesAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConcurrentClauses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group__0__Impl
	rule__ConcurrentClauses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseAssignment_0()); }
(rule__ConcurrentClauses__NonFinalClauseAssignment_0)
{ after(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getGroup_1()); }
(rule__ConcurrentClauses__Group_1__0)*
{ after(grammarAccess.getConcurrentClausesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConcurrentClauses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__0__Impl
	rule__ConcurrentClauses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getConcurrentClausesAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__1__Impl
	rule__ConcurrentClauses__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getIfKeyword_1_1()); }

	'if' 

{ after(grammarAccess.getConcurrentClausesAccess().getIfKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseAssignment_1_2()); }
(rule__ConcurrentClauses__NonFinalClauseAssignment_1_2)
{ after(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonFinalClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__0__Impl
	rule__NonFinalClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNonFinalClauseAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__1__Impl
	rule__NonFinalClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getExpressionAssignment_1()); }
(rule__NonFinalClause__ExpressionAssignment_1)
{ after(grammarAccess.getNonFinalClauseAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__2__Impl
	rule__NonFinalClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNonFinalClauseAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getBlockAssignment_3()); }
(rule__NonFinalClause__BlockAssignment_3)
{ after(grammarAccess.getNonFinalClauseAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FinalClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FinalClause__Group__0__Impl
	rule__FinalClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalClauseAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getFinalClauseAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FinalClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FinalClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalClauseAccess().getBlockAssignment_1()); }
(rule__FinalClause__BlockAssignment_1)
{ after(grammarAccess.getFinalClauseAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
(rule__SwitchStatement__ExpressionAssignment_2)
{ after(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchClauseAssignment_5()); }
(rule__SwitchStatement__SwitchClauseAssignment_5)*
{ after(grammarAccess.getSwitchStatementAccess().getSwitchClauseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__6__Impl
	rule__SwitchStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultClauseAssignment_6()); }
(rule__SwitchStatement__DefaultClauseAssignment_6)?
{ after(grammarAccess.getSwitchStatementAccess().getDefaultClauseAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SwitchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__0__Impl
	rule__SwitchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getSwitchCaseAssignment_0()); }
(rule__SwitchClause__SwitchCaseAssignment_0)
{ after(grammarAccess.getSwitchClauseAccess().getSwitchCaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__1__Impl
	rule__SwitchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getSwitchCaseAssignment_1()); }
(rule__SwitchClause__SwitchCaseAssignment_1)*
{ after(grammarAccess.getSwitchClauseAccess().getSwitchCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getStatementSequenceAssignment_2()); }
(rule__SwitchClause__StatementSequenceAssignment_2)
{ after(grammarAccess.getSwitchClauseAccess().getStatementSequenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__0__Impl
	rule__SwitchCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__1__Impl
	rule__SwitchCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getExpressionAssignment_1()); }
(rule__SwitchCase__ExpressionAssignment_1)
{ after(grammarAccess.getSwitchCaseAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchDefaultClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__0__Impl
	rule__SwitchDefaultClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getSwitchDefaultClauseAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchDefaultClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__1__Impl
	rule__SwitchDefaultClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSwitchDefaultClauseAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchDefaultClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getStatementSequenceAssignment_2()); }
(rule__SwitchDefaultClause__StatementSequenceAssignment_2)
{ after(grammarAccess.getSwitchDefaultClauseAccess().getStatementSequenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getExpressionAssignment_2()); }
(rule__WhileStatement__ExpressionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBlockAssignment_4()); }
(rule__WhileStatement__BlockAssignment_4)
{ after(grammarAccess.getWhileStatementAccess().getBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getBlockAssignment_1()); }
(rule__DoStatement__BlockAssignment_1)
{ after(grammarAccess.getDoStatementAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
(rule__DoStatement__ExpressionAssignment_4)
{ after(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForControlAssignment_2()); }
(rule__ForStatement__ForControlAssignment_2)
{ after(grammarAccess.getForStatementAccess().getForControlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBlockAssignment_4()); }
(rule__ForStatement__BlockAssignment_4)
{ after(grammarAccess.getForStatementAccess().getBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForControl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__0__Impl
	rule__ForControl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getLoopVariableDefinitionAssignment_0()); }
(rule__ForControl__LoopVariableDefinitionAssignment_0)
{ after(grammarAccess.getForControlAccess().getLoopVariableDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getGroup_1()); }
(rule__ForControl__Group_1__0)*
{ after(grammarAccess.getForControlAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForControl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group_1__0__Impl
	rule__ForControl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getForControlAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getLoopVariableDefinitionAssignment_1_1()); }
(rule__ForControl__LoopVariableDefinitionAssignment_1_1)
{ after(grammarAccess.getForControlAccess().getLoopVariableDefinitionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopVariableDefinition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__0__Impl
	rule__LoopVariableDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getNameAssignment_0_0()); }
(rule__LoopVariableDefinition__NameAssignment_0_0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__1__Impl
	rule__LoopVariableDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getInKeyword_0_1()); }

	'in' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getInKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__2__Impl
	rule__LoopVariableDefinition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_0_2()); }
(rule__LoopVariableDefinition__Expression1Assignment_0_2)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0_3()); }
(rule__LoopVariableDefinition__Group_0_3__0)?
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LoopVariableDefinition__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0_3__0__Impl
	rule__LoopVariableDefinition__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getFullStopFullStopKeyword_0_3_0()); }

	'..' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getFullStopFullStopKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression2Assignment_0_3_1()); }
(rule__LoopVariableDefinition__Expression2Assignment_0_3_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression2Assignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopVariableDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__0__Impl
	rule__LoopVariableDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameAssignment_1_0()); }
(rule__LoopVariableDefinition__TypeNameAssignment_1_0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__1__Impl
	rule__LoopVariableDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getNameAssignment_1_1()); }
(rule__LoopVariableDefinition__NameAssignment_1_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__2__Impl
	rule__LoopVariableDefinition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression3Assignment_1_3()); }
(rule__LoopVariableDefinition__Expression3Assignment_1_3)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression3Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BreakStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
(

)
{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
(

)
{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
(rule__ReturnStatement__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AcceptStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group__0__Impl
	rule__AcceptStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptClauseAssignment_0()); }
(rule__AcceptStatement__AcceptClauseAssignment_0)
{ after(grammarAccess.getAcceptStatementAccess().getAcceptClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAlternatives_1()); }
(rule__AcceptStatement__Alternatives_1)
{ after(grammarAccess.getAcceptStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleAcceptStatementCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAcceptStatementCompletion__Group__0__Impl
	rule__SimpleAcceptStatementCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAcceptStatementCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAcceptStatementCompletionAccess().getSimpleAcceptStatementCompletionAction_0()); }
(

)
{ after(grammarAccess.getSimpleAcceptStatementCompletionAccess().getSimpleAcceptStatementCompletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAcceptStatementCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAcceptStatementCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAcceptStatementCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAcceptStatementCompletionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getSimpleAcceptStatementCompletionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundAcceptStatementCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundAcceptStatementCompletion__Group__0__Impl
	rule__CompoundAcceptStatementCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getBlockAssignment_0()); }
(rule__CompoundAcceptStatementCompletion__BlockAssignment_0)
{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getBlockAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundAcceptStatementCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundAcceptStatementCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getGroup_1()); }
(rule__CompoundAcceptStatementCompletion__Group_1__0)*
{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundAcceptStatementCompletion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundAcceptStatementCompletion__Group_1__0__Impl
	rule__CompoundAcceptStatementCompletion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundAcceptStatementCompletion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundAcceptStatementCompletion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getAcceptBlockAssignment_1_1()); }
(rule__CompoundAcceptStatementCompletion__AcceptBlockAssignment_1_1)
{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getAcceptBlockAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptBlock__Group__0__Impl
	rule__AcceptBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getAcceptClauseAssignment_0()); }
(rule__AcceptBlock__AcceptClauseAssignment_0)
{ after(grammarAccess.getAcceptBlockAccess().getAcceptClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getBlockAssignment_1()); }
(rule__AcceptBlock__BlockAssignment_1)
{ after(grammarAccess.getAcceptBlockAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__0__Impl
	rule__AcceptClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getAcceptKeyword_0()); }

	'accept' 

{ after(grammarAccess.getAcceptClauseAccess().getAcceptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__1__Impl
	rule__AcceptClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAcceptClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__2__Impl
	rule__AcceptClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getGroup_2()); }
(rule__AcceptClause__Group_2__0)?
{ after(grammarAccess.getAcceptClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__3__Impl
	rule__AcceptClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getQualifiedNameListAssignment_3()); }
(rule__AcceptClause__QualifiedNameListAssignment_3)
{ after(grammarAccess.getAcceptClauseAccess().getQualifiedNameListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAcceptClauseAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AcceptClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group_2__0__Impl
	rule__AcceptClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getNameAssignment_2_0()); }
(rule__AcceptClause__NameAssignment_2_0)
{ after(grammarAccess.getAcceptClauseAccess().getNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getAcceptClauseAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__0__Impl
	rule__ClassifyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getClassifyKeyword_0()); }

	'classify' 

{ after(grammarAccess.getClassifyStatementAccess().getClassifyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__1__Impl
	rule__ClassifyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getExpressionAssignment_1()); }
(rule__ClassifyStatement__ExpressionAssignment_1)
{ after(grammarAccess.getClassifyStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__2__Impl
	rule__ClassifyStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getClassificationClauseAssignment_2()); }
(rule__ClassifyStatement__ClassificationClauseAssignment_2)
{ after(grammarAccess.getClassifyStatementAccess().getClassificationClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getClassifyStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassificationClause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationClause__Group_0__0__Impl
	rule__ClassificationClause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationFromClauseAssignment_0_0()); }
(rule__ClassificationClause__ClassificationFromClauseAssignment_0_0)
{ after(grammarAccess.getClassificationClauseAccess().getClassificationFromClauseAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationClause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationClause__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationToClauseAssignment_0_1()); }
(rule__ClassificationClause__ClassificationToClauseAssignment_0_1)?
{ after(grammarAccess.getClassificationClauseAccess().getClassificationToClauseAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationClause__Group_1__0__Impl
	rule__ClassificationClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getReclassifyAllClauseAssignment_1_0()); }
(rule__ClassificationClause__ReclassifyAllClauseAssignment_1_0)?
{ after(grammarAccess.getClassificationClauseAccess().getReclassifyAllClauseAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationClause__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationToClauseAssignment_1_1()); }
(rule__ClassificationClause__ClassificationToClauseAssignment_1_1)
{ after(grammarAccess.getClassificationClauseAccess().getClassificationToClauseAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationFromClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationFromClause__Group__0__Impl
	rule__ClassificationFromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationFromClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getClassificationFromClauseAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationFromClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationFromClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationFromClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListAssignment_1()); }
(rule__ClassificationFromClause__QualifiedNameListAssignment_1)
{ after(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationToClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationToClause__Group__0__Impl
	rule__ClassificationToClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationToClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationToClauseAccess().getToKeyword_0()); }

	'to' 

{ after(grammarAccess.getClassificationToClauseAccess().getToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationToClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationToClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationToClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListAssignment_1()); }
(rule__ClassificationToClause__QualifiedNameListAssignment_1)
{ after(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReclassifyAllClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReclassifyAllClause__Group__0__Impl
	rule__ReclassifyAllClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReclassifyAllClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getReclassifyAllClauseAction_0()); }
(

)
{ after(grammarAccess.getReclassifyAllClauseAccess().getReclassifyAllClauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReclassifyAllClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReclassifyAllClause__Group__1__Impl
	rule__ReclassifyAllClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReclassifyAllClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getReclassifyAllClauseAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReclassifyAllClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReclassifyAllClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReclassifyAllClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getReclassifyAllClauseAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group__0__Impl
	rule__QualifiedNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getQualifiedNameAssignment_0()); }
(rule__QualifiedNameList__QualifiedNameAssignment_0)
{ after(grammarAccess.getQualifiedNameListAccess().getQualifiedNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getGroup_1()); }
(rule__QualifiedNameList__Group_1__0)*
{ after(grammarAccess.getQualifiedNameListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group_1__0__Impl
	rule__QualifiedNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getQualifiedNameListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getQualifiedNameAssignment_1_1()); }
(rule__QualifiedNameList__QualifiedNameAssignment_1_1)
{ after(grammarAccess.getQualifiedNameListAccess().getQualifiedNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__UnitDefinition__NamespaceDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getNamespaceDeclarationNamespaceDeclarationParserRuleCall_0_0()); }
	ruleNamespaceDeclaration{ after(grammarAccess.getUnitDefinitionAccess().getNamespaceDeclarationNamespaceDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__ImportDeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getImportDeclarationsImportDeclarationParserRuleCall_1_0()); }
	ruleImportDeclaration{ after(grammarAccess.getUnitDefinitionAccess().getImportDeclarationsImportDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__CommentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getCommentML_COMMENTTerminalRuleCall_2_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getUnitDefinitionAccess().getCommentML_COMMENTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__StereotypeAnnotationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_3_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getUnitDefinitionAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDefinition__NamesapceDefinitionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitDefinitionAccess().getNamesapceDefinitionNamespaceDefinitionParserRuleCall_4_0()); }
	ruleNamespaceDefinition{ after(grammarAccess.getUnitDefinitionAccess().getNamesapceDefinitionNamespaceDefinitionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getValueBOOLEAN_VALUETerminalRuleCall_0()); }
	RULE_BOOLEAN_VALUE{ after(grammarAccess.getBOOLEAN_LITERALAccess().getValueBOOLEAN_VALUETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTEGER_LITERAL__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTEGER_LITERALAccess().getValueINTEGER_VALUETerminalRuleCall_0()); }
	RULE_INTEGER_VALUE{ after(grammarAccess.getINTEGER_LITERALAccess().getValueINTEGER_VALUETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNLIMITED_NATURAL__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNLIMITED_NATURALAccess().getValueAsteriskKeyword_0()); }
(
{ before(grammarAccess.getUNLIMITED_NATURALAccess().getValueAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getUNLIMITED_NATURALAccess().getValueAsteriskKeyword_0()); }
)

{ after(grammarAccess.getUNLIMITED_NATURALAccess().getValueAsteriskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_LITERAL__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotations__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationsAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getStereotypeAnnotationsAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__StereotypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__TaggedValuesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesTaggedValuesParserRuleCall_2_1_0()); }
	ruleTaggedValues{ after(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesTaggedValuesParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__TaggedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_0_0()); }
	ruleTaggedValue{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__TaggedValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_1_1_0()); }
	ruleTaggedValue{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTaggedValueAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValuePRIMITIVE_LITERALParserRuleCall_2_0()); }
	rulePRIMITIVE_LITERAL{ after(grammarAccess.getTaggedValueAccess().getValuePRIMITIVE_LITERALParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__QualifiedNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getVisibilityImportVisibilityIndicatorEnumRuleCall_0_0()); }
	ruleImportVisibilityIndicator{ after(grammarAccess.getImportDeclarationAccess().getVisibilityImportVisibilityIndicatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__ImportReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportReferenceImportReferenceParserRuleCall_2_0()); }
	ruleImportReference{ after(grammarAccess.getImportDeclarationAccess().getImportReferenceImportReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getImportReferenceAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__CompletionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getCompletionImportReferenceQualifiedNameCompletionParserRuleCall_1_0_0()); }
	ruleImportReferenceQualifiedNameCompletion{ after(grammarAccess.getImportReferenceAccess().getCompletionImportReferenceQualifiedNameCompletionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__AliasAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getAliasAliasDefinitionParserRuleCall_1_1_0()); }
	ruleAliasDefinition{ after(grammarAccess.getImportReferenceAccess().getAliasAliasDefinitionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__StarAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportReferenceAccess().getStarAsteriskKeyword_1_2_1_0()); }
(
{ before(grammarAccess.getImportReferenceAccess().getStarAsteriskKeyword_1_2_1_0()); }

	'*' 

{ after(grammarAccess.getImportReferenceAccess().getStarAsteriskKeyword_1_2_1_0()); }
)

{ after(grammarAccess.getImportReferenceAccess().getStarAsteriskKeyword_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameNameParserRuleCall_2_1_0()); }
	ruleName{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getNameNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__StarAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAsteriskKeyword_3_0_1_0()); }
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAsteriskKeyword_3_0_1_0()); }

	'*' 

{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAsteriskKeyword_3_0_1_0()); }
)

{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getStarAsteriskKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionOfImportReference__AliasAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAliasAliasDefinitionParserRuleCall_3_1_0()); }
	ruleAliasDefinition{ after(grammarAccess.getColonQualifiedNameCompletionOfImportReferenceAccess().getAliasAliasDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefinition__AliasAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefinitionAccess().getAliasNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getAliasDefinitionAccess().getAliasNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__PUBLICAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPUBLICPublicKeyword_0_0()); }
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPUBLICPublicKeyword_0_0()); }

	'public' 

{ after(grammarAccess.getVisibilityIndicatorAccess().getPUBLICPublicKeyword_0_0()); }
)

{ after(grammarAccess.getVisibilityIndicatorAccess().getPUBLICPublicKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__PRIVATEAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEPrivateKeyword_1_0()); }
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEPrivateKeyword_1_0()); }

	'private' 

{ after(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEPrivateKeyword_1_0()); }
)

{ after(grammarAccess.getVisibilityIndicatorAccess().getPRIVATEPrivateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__PROTECTEDAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDProtectedKeyword_2_0()); }
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDProtectedKeyword_2_0()); }

	'protected' 

{ after(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDProtectedKeyword_2_0()); }
)

{ after(grammarAccess.getVisibilityIndicatorAccess().getPROTECTEDProtectedKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getPackageDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__DeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getDeclarationPackageDeclarationParserRuleCall_0_0()); }
	rulePackageDeclaration{ after(grammarAccess.getPackageDefinitionAccess().getDeclarationPackageDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getBodyPackageBodyParserRuleCall_1_0()); }
	rulePackageBody{ after(grammarAccess.getPackageDefinitionAccess().getBodyPackageBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__DeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getDeclarationPackageDeclarationParserRuleCall_0_0()); }
	rulePackageDeclaration{ after(grammarAccess.getPackageDefinitionOrStubAccess().getDeclarationPackageDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__BodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getBodyPackageBodyParserRuleCall_1_1_0()); }
	rulePackageBody{ after(grammarAccess.getPackageDefinitionOrStubAccess().getBodyPackageBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__PackagedElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageBodyAccess().getPackagedElementPackagedElementParserRuleCall_2_0()); }
	rulePackagedElement{ after(grammarAccess.getPackageBodyAccess().getPackagedElementPackagedElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getPackagedElementAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__StereotypeAnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getPackagedElementAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__ImportVisibilityIndicatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getImportVisibilityIndicatorImportVisibilityIndicatorEnumRuleCall_2_0()); }
	ruleImportVisibilityIndicator{ after(grammarAccess.getPackagedElementAccess().getImportVisibilityIndicatorImportVisibilityIndicatorEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__PackagedElementDefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getPackagedElementDefinitionPackagedElementDefinitionParserRuleCall_3_0()); }
	rulePackagedElementDefinition{ after(grammarAccess.getPackagedElementAccess().getPackagedElementDefinitionPackagedElementDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getClassifierSignatureAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__TemplateParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getTemplateParametersTemplateParametersParserRuleCall_1_0()); }
	ruleTemplateParameters{ after(grammarAccess.getClassifierSignatureAccess().getTemplateParametersTemplateParametersParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierSignature__SpecializationClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierSignatureAccess().getSpecializationClauseSpecializationClauseParserRuleCall_2_0()); }
	ruleSpecializationClause{ after(grammarAccess.getClassifierSignatureAccess().getSpecializationClauseSpecializationClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__ClassifierTemplateParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterClassifierTemplateParameterParserRuleCall_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterClassifierTemplateParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameters__ClassifierTemplateParameterAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterClassifierTemplateParameterParserRuleCall_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getTemplateParametersAccess().getClassifierTemplateParameterClassifierTemplateParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getClassifierTemplateParameterAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getClassifierTemplateParameterAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__QualifiedNameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getQualifiedNameQualifiedNameParserRuleCall_2_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getClassifierTemplateParameterAccess().getQualifiedNameQualifiedNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationClause__QualifiedNameListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassifierSignatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
	ruleClassifierSignature{ after(grammarAccess.getClassDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__ClassDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassDeclarationClassDeclarationParserRuleCall_0_0()); }
	ruleClassDeclaration{ after(grammarAccess.getClassDefinitionAccess().getClassDeclarationClassDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__ClassBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassBodyClassBodyParserRuleCall_1_0()); }
	ruleClassBody{ after(grammarAccess.getClassDefinitionAccess().getClassBodyClassBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__ClassDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationClassDeclarationParserRuleCall_0_0()); }
	ruleClassDeclaration{ after(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationClassDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__ClassBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getClassBodyClassBodyParserRuleCall_1_1_0()); }
	ruleClassBody{ after(grammarAccess.getClassDefinitionOrStubAccess().getClassBodyClassBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__ClassMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getClassMemberClassMemberParserRuleCall_2_0()); }
	ruleClassMember{ after(grammarAccess.getClassBodyAccess().getClassMemberClassMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getClassMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__StereotypeAnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getClassMemberAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__VisibilityIndicatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getVisibilityIndicatorVisibilityIndicatorParserRuleCall_2_0()); }
	ruleVisibilityIndicator{ after(grammarAccess.getClassMemberAccess().getVisibilityIndicatorVisibilityIndicatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__ClassMemberDefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getClassMemberDefinitionClassMemberDefinitionParserRuleCall_3_0()); }
	ruleClassMemberDefinition{ after(grammarAccess.getClassMemberAccess().getClassMemberDefinitionClassMemberDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__ClassifierSignatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_3_0()); }
	ruleClassifierSignature{ after(grammarAccess.getActiveClassDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__ActiveClassDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationActiveClassDeclarationParserRuleCall_0_0()); }
	ruleActiveClassDeclaration{ after(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationActiveClassDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__ActiveClassBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getActiveClassBodyActiveClassBodyParserRuleCall_1_0()); }
	ruleActiveClassBody{ after(grammarAccess.getActiveClassDefinitionAccess().getActiveClassBodyActiveClassBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__ActiveClassDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationActiveClassDeclarationParserRuleCall_0_0()); }
	ruleActiveClassDeclaration{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationActiveClassDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__ActiveClassBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassBodyActiveClassBodyParserRuleCall_1_1_0()); }
	ruleActiveClassBody{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassBodyActiveClassBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__ActiveClassMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getActiveClassMemberActiveClassMemberParserRuleCall_2_0()); }
	ruleActiveClassMember{ after(grammarAccess.getActiveClassBodyAccess().getActiveClassMemberActiveClassMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassBody__BehaviorClasueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassBodyAccess().getBehaviorClasueBehaviorClauseParserRuleCall_4_1_0()); }
	ruleBehaviorClause{ after(grammarAccess.getActiveClassBodyAccess().getBehaviorClasueBehaviorClauseParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__BlockAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getBlockBlockParserRuleCall_0_0()); }
	ruleBlock{ after(grammarAccess.getBehaviorClauseAccess().getBlockBlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getBehaviorClauseAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getActiveClassMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__StereotypeAnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getActiveClassMemberAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__VisibilityIndicatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getVisibilityIndicatorVisibilityIndicatorParserRuleCall_2_0()); }
	ruleVisibilityIndicator{ after(grammarAccess.getActiveClassMemberAccess().getVisibilityIndicatorVisibilityIndicatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__ActiveClassMemberDefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getActiveClassMemberDefinitionActiveClassMemberDefinitionParserRuleCall_3_0()); }
	ruleActiveClassMemberDefinition{ after(grammarAccess.getActiveClassMemberAccess().getActiveClassMemberDefinitionActiveClassMemberDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__ClassifierSignatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
	ruleClassifierSignature{ after(grammarAccess.getDataTypeDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__DataTypeDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationDataTypeDeclarationParserRuleCall_0_0()); }
	ruleDataTypeDeclaration{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationDataTypeDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__StructureBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getStructureBodyStructuredBodyParserRuleCall_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getDataTypeDefinitionAccess().getStructureBodyStructuredBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__DataTypeDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationDataTypeDeclarationParserRuleCall_0_0()); }
	ruleDataTypeDeclaration{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationDataTypeDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__StructureBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getStructureBodyStructuredBodyParserRuleCall_1_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getStructureBodyStructuredBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredBody__StructuredMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredBodyAccess().getStructuredMemberStructuredMemberParserRuleCall_2_0()); }
	ruleStructuredMember{ after(grammarAccess.getStructuredBodyAccess().getStructuredMemberStructuredMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getStructuredMemberAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__StreotypeAnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getStreotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getStructuredMemberAccess().getStreotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__IsPublicAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getIsPublicPublicKeyword_2_0()); }
(
{ before(grammarAccess.getStructuredMemberAccess().getIsPublicPublicKeyword_2_0()); }

	'public' 

{ after(grammarAccess.getStructuredMemberAccess().getIsPublicPublicKeyword_2_0()); }
)

{ after(grammarAccess.getStructuredMemberAccess().getIsPublicPublicKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__PropertyDefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getPropertyDefinitionPropertyDefinitionParserRuleCall_3_0()); }
	rulePropertyDefinition{ after(grammarAccess.getStructuredMemberAccess().getPropertyDefinitionPropertyDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__ClassifierSignatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
	ruleClassifierSignature{ after(grammarAccess.getAssociationDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__AssociationDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationAssociationDeclarationParserRuleCall_0_0()); }
	ruleAssociationDeclaration{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationAssociationDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__StructuredBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getStructuredBodyStructuredBodyParserRuleCall_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getAssociationDefinitionAccess().getStructuredBodyStructuredBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__AssociationDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationAssociationDeclarationParserRuleCall_0_0()); }
	ruleAssociationDeclaration{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationAssociationDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__StructuredBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getEnumerationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__SpecializationClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getSpecializationClauseSpecializationClauseParserRuleCall_2_0()); }
	ruleSpecializationClause{ after(grammarAccess.getEnumerationDeclarationAccess().getSpecializationClauseSpecializationClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__EnumerationClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumerationClauseEnumerationDeclarationParserRuleCall_0_0()); }
	ruleEnumerationDeclaration{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumerationClauseEnumerationDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__EnumerationBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumerationBodyEnumerationBodyParserRuleCall_1_0()); }
	ruleEnumerationBody{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumerationBodyEnumerationBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__EnumerationDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationEnumerationDeclarationParserRuleCall_0_0()); }
	ruleEnumerationDeclaration{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationEnumerationDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__EnumerationBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationBodyEnumerationBodyParserRuleCall_1_1_0()); }
	ruleEnumerationBody{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationBodyEnumerationBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__EnumerationLiteralNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameEnumerationLiteralNameParserRuleCall_1_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameEnumerationLiteralNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationBody__EnumerationLiteralNameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameEnumerationLiteralNameParserRuleCall_2_1_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationBodyAccess().getEnumerationLiteralNameEnumerationLiteralNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getEnumerationLiteralNameAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getEnumerationLiteralNameAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__ClassifierSignatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
	ruleClassifierSignature{ after(grammarAccess.getSignalDeclarationAccess().getClassifierSignatureClassifierSignatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__SignalDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationSignalDeclarationParserRuleCall_0_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationSignalDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__StructuredBodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getStructuredBodyStructuredBodyParserRuleCall_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getSignalDefinitionAccess().getStructuredBodyStructuredBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__SignalDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationSignalDeclarationParserRuleCall_0_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationSignalDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__StructuredBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getSignalDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getActivityDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__TemplateParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getTemplateParametersTemplateParametersParserRuleCall_2_0()); }
	ruleTemplateParameters{ after(grammarAccess.getActivityDeclarationAccess().getTemplateParametersTemplateParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__FormalParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getFormalParametersFormalParametersParserRuleCall_3_0()); }
	ruleFormalParameters{ after(grammarAccess.getActivityDeclarationAccess().getFormalParametersFormalParametersParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__TypePartAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getTypePartTypePartParserRuleCall_4_1_0()); }
	ruleTypePart{ after(grammarAccess.getActivityDeclarationAccess().getTypePartTypePartParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__ActivityDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationActivityDeclarationParserRuleCall_0_0()); }
	ruleActivityDeclaration{ after(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationActivityDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getActivityDefinitionAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__ActivityDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationActivityDeclarationParserRuleCall_0_0()); }
	ruleActivityDeclaration{ after(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationActivityDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__BlockAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getBlockBlockParserRuleCall_1_1_0()); }
	ruleBlock{ after(grammarAccess.getActivityDefinitionOrStubAccess().getBlockBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameters__FormalParameterListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParametersAccess().getFormalParameterListFormalParameterListParserRuleCall_2_0()); }
	ruleFormalParameterList{ after(grammarAccess.getFormalParametersAccess().getFormalParameterListFormalParameterListParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__FormalParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getFormalParameterFormalParameterParserRuleCall_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getFormalParameterListAccess().getFormalParameterFormalParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__FormalParameterAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getFormalParameterFormalParameterParserRuleCall_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getFormalParameterListAccess().getFormalParameterFormalParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getFormalParameterAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__StereotypeAnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
	ruleStereotypeAnnotations{ after(grammarAccess.getFormalParameterAccess().getStereotypeAnnotationsStereotypeAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__ParameterDirectionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getParameterDirectionParameterDirectionEnumRuleCall_2_0()); }
	ruleParameterDirection{ after(grammarAccess.getFormalParameterAccess().getParameterDirectionParameterDirectionEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getNameNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getFormalParameterAccess().getNameNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__TypePartAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getTypePartTypePartParserRuleCall_5_0()); }
	ruleTypePart{ after(grammarAccess.getFormalParameterAccess().getTypePartTypePartParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__PropertyDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationPropertyDeclarationParserRuleCall_0_0()); }
	rulePropertyDeclaration{ after(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationPropertyDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__PropertyDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationPropertyDeclarationParserRuleCall_0_0()); }
	rulePropertyDeclaration{ after(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationPropertyDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__AttributeInitializerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getAttributeInitializerAttributeInitializerParserRuleCall_1_0()); }
	ruleAttributeInitializer{ after(grammarAccess.getAttributeDefinitionAccess().getAttributeInitializerAttributeInitializerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitializer__InitializationExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionInitializationExpressionParserRuleCall_1_0()); }
	ruleInitializationExpression{ after(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionInitializationExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getPropertyDeclarationAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__IsCompositeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }

	'compose' 

{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
)

{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__TypePartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypePartTypePartParserRuleCall_3_0()); }
	ruleTypePart{ after(grammarAccess.getPropertyDeclarationAccess().getTypePartTypePartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
	ruleTypeName{ after(grammarAccess.getTypePartAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__MultiplicityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getMultiplicityMultiplicityParserRuleCall_1_0()); }
	ruleMultiplicity{ after(grammarAccess.getTypePartAccess().getMultiplicityMultiplicityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__QualifiedNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypeNameAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__AnyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getAnyAnyKeyword_1_0()); }
(
{ before(grammarAccess.getTypeNameAccess().getAnyAnyKeyword_1_0()); }

	'any' 

{ after(grammarAccess.getTypeNameAccess().getAnyAnyKeyword_1_0()); }
)

{ after(grammarAccess.getTypeNameAccess().getAnyAnyKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__MultiplicityRangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getMultiplicityRangeMultiplicityRangeParserRuleCall_2_0()); }
	ruleMultiplicityRange{ after(grammarAccess.getMultiplicityAccess().getMultiplicityRangeMultiplicityRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__IsOrderedAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_0_0_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_0_0_0()); }

	'ordered' 

{ after(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_0_0_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__IsNonUniqueAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_0_1_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_0_1_0()); }

	'nonunique' 

{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_0_1_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__IsNonUniqueAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_1_0_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_1_0_0()); }

	'nonunique' 

{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_1_0_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getIsNonUniqueNonuniqueKeyword_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__IsOrderedAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_1_1_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_1_1_0()); }

	'ordered' 

{ after(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_1_1_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getIsOrderedOrderedKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__IsSequenceAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getIsSequenceSequenceKeyword_4_2_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getIsSequenceSequenceKeyword_4_2_0()); }

	'sequence' 

{ after(grammarAccess.getMultiplicityAccess().getIsSequenceSequenceKeyword_4_2_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getIsSequenceSequenceKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__LowerAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getLowerINTEGER_LITERALParserRuleCall_0_0_0()); }
	ruleINTEGER_LITERAL{ after(grammarAccess.getMultiplicityRangeAccess().getLowerINTEGER_LITERALParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityRange__UpperAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityRangeAccess().getUpperUnlimitedNaturalLiteralParserRuleCall_1_0()); }
	ruleUnlimitedNaturalLiteral{ after(grammarAccess.getMultiplicityRangeAccess().getUpperUnlimitedNaturalLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteral__IntegerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getIntegerINTEGER_LITERALParserRuleCall_0_0()); }
	ruleINTEGER_LITERAL{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getIntegerINTEGER_LITERALParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteral__StarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAsteriskKeyword_1_0()); }
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAsteriskKeyword_1_0()); }

	'*' 

{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAsteriskKeyword_1_0()); }
)

{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getStarAsteriskKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getOperationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__FormalParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getFormalParametersFormalParametersParserRuleCall_2_0()); }
	ruleFormalParameters{ after(grammarAccess.getOperationDeclarationAccess().getFormalParametersFormalParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__TypePartAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getTypePartTypePartParserRuleCall_3_1_0()); }
	ruleTypePart{ after(grammarAccess.getOperationDeclarationAccess().getTypePartTypePartParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__RedefinitionClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getRedefinitionClauseRedefinitionClauseParserRuleCall_4_0()); }
	ruleRedefinitionClause{ after(grammarAccess.getOperationDeclarationAccess().getRedefinitionClauseRedefinitionClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__BlockAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getBlockBlockParserRuleCall_1_1_0()); }
	ruleBlock{ after(grammarAccess.getOperationDefinitionOrStubAccess().getBlockBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinitionClause__QualifiedNameListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__ReceptionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getReceptionNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getReceptionDefinitionAccess().getReceptionNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__SignalNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSignalNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSignalNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__SpecializationClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationClauseSpecializationClauseParserRuleCall_3_0()); }
	ruleSpecializationClause{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationClauseSpecializationClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__SignalReceptionOrDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionOrDeclarationSignalReceptionDeclarationParserRuleCall_0_0()); }
	ruleSignalReceptionDeclaration{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionOrDeclarationSignalReceptionDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__StructuredBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
	ruleStructuredBody{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getStructuredBodyStructuredBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getIdIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getNameAccess().getIdIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__UnqualifiedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getUnqualifiedUnqualifiedNameParserRuleCall_0_0()); }
	ruleUnqualifiedName{ after(grammarAccess.getQualifiedNameAccess().getUnqualifiedUnqualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameCompletionColonQualifiedNameCompletionParserRuleCall_1_0()); }
	ruleColonQualifiedNameCompletion{ after(grammarAccess.getQualifiedNameAccess().getNameCompletionColonQualifiedNameCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletion__NamedBindingsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionAccess().getNamedBindingsNameBindingParserRuleCall_1_0()); }
	ruleNameBinding{ after(grammarAccess.getColonQualifiedNameCompletionAccess().getNamedBindingsNameBindingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getNameBindingAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__TemplateBindingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getTemplateBindingTemplateBindingParserRuleCall_1_0()); }
	ruleTemplateBinding{ after(grammarAccess.getNameBindingAccess().getTemplateBindingTemplateBindingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithoutBinding__UnqualifiedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithoutBindingAccess().getUnqualifiedNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getQualifiedNameWithoutBindingAccess().getUnqualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithoutBinding__NameCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithoutBindingAccess().getNameCompletionColonQualifiedNameCompletionWithoutBindingParserRuleCall_1_0()); }
	ruleColonQualifiedNameCompletionWithoutBinding{ after(grammarAccess.getQualifiedNameWithoutBindingAccess().getNameCompletionColonQualifiedNameCompletionWithoutBindingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedNameCompletionWithoutBinding__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getNamesNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getColonQualifiedNameCompletionWithoutBindingAccess().getNamesNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__QualifiedNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__QualifiedNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPositionalTemplateBindingAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__TemplateParameterSubstitutionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionTemplateParameterSubstitutionParserRuleCall_0_0()); }
	ruleTemplateParameterSubstitution{ after(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionTemplateParameterSubstitutionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__TemplateParameterSubstitutionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionTemplateParameterSubstitutionParserRuleCall_1_1_0()); }
	ruleTemplateParameterSubstitution{ after(grammarAccess.getNamedTemplateBindingAccess().getTemplateParameterSubstitutionTemplateParameterSubstitutionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__QualifiedNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getQualifiedNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getQualifiedNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
	ruleExpressionCompletion{ after(grammarAccess.getExpressionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNameExpression__NonNameUnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNameExpressionAccess().getNonNameUnaryExpressionNonNameUnaryExpressionParserRuleCall_0_0()); }
	ruleNonNameUnaryExpression{ after(grammarAccess.getNonNameExpressionAccess().getNonNameUnaryExpressionNonNameUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNameExpression__ExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNameExpressionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
	ruleExpressionCompletion{ after(grammarAccess.getNonNameExpressionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToExpressionCompletion__NameToPrimaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToExpressionCompletionAccess().getNameToPrimaryNameToPrimaryExpressionParserRuleCall_0_0()); }
	ruleNameToPrimaryExpression{ after(grammarAccess.getNameToExpressionCompletionAccess().getNameToPrimaryNameToPrimaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToExpressionCompletion__PrimaryToExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToExpressionCompletionAccess().getPrimaryToExpressionCompletionPrimaryToExpressionCompletionParserRuleCall_1_0()); }
	rulePrimaryToExpressionCompletion{ after(grammarAccess.getNameToExpressionCompletionAccess().getPrimaryToExpressionCompletionPrimaryToExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryToExpressionCompletion__PostFixExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryToExpressionCompletionAccess().getPostFixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getPrimaryToExpressionCompletionAccess().getPostFixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryToExpressionCompletion__ExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryToExpressionCompletionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
	ruleExpressionCompletion{ after(grammarAccess.getPrimaryToExpressionCompletionAccess().getExpressionCompletionExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameOrPrimaryExpressionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameOrPrimaryExpressionNameOrPrimaryExpressionParserRuleCall_0_0_0()); }
	ruleNameOrPrimaryExpression{ after(grammarAccess.getPrimaryExpressionAccess().getNameOrPrimaryExpressionNameOrPrimaryExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BaseExpressionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionBaseExpressionParserRuleCall_0_1_0()); }
	ruleBaseExpression{ after(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionBaseExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParenthesizedExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParenthesizedExpressionParserRuleCall_0_2_0()); }
	ruleParenthesizedExpression{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParenthesizedExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__PrimaryExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionCompletionPrimaryExpressionCompletionParserRuleCall_1_0()); }
	rulePrimaryExpressionCompletion{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionCompletionPrimaryExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__LinkOperationCompletionAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getLinkOperationCompletionLinkOperationCompletionParserRuleCall_0_1_0_0()); }
	ruleLinkOperationCompletion{ after(grammarAccess.getNameToPrimaryExpressionAccess().getLinkOperationCompletionLinkOperationCompletionParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__ClassExtentExpressionCompletionAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getClassExtentExpressionCompletionClassExtentExpressionCompletionParserRuleCall_0_1_1_0()); }
	ruleClassExtentExpressionCompletion{ after(grammarAccess.getNameToPrimaryExpressionAccess().getClassExtentExpressionCompletionClassExtentExpressionCompletionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__SequenceConstructionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getSequenceConstructionCompletionSequenceConstructionExpressionCompletionParserRuleCall_1_0()); }
	ruleSequenceConstructionExpressionCompletion{ after(grammarAccess.getNameToPrimaryExpressionAccess().getSequenceConstructionCompletionSequenceConstructionExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameToPrimaryExpression__BehaviorInvocationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameToPrimaryExpressionAccess().getBehaviorInvocationBehaviorInvocationParserRuleCall_2_0()); }
	ruleBehaviorInvocation{ after(grammarAccess.getNameToPrimaryExpressionAccess().getBehaviorInvocationBehaviorInvocationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpressionCompletion__ContentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionCompletionAccess().getContentFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexParserRuleCall_0()); }
	ruleFeature_Or_SequenceOperationOrReductionOrExpansion_Or_Index{ after(grammarAccess.getPrimaryExpressionCompletionAccess().getContentFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__FeatureAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureFeatureParserRuleCall_0_0_0()); }
	ruleFeature{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureFeatureParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__FeatureInvocationAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureInvocationFeatureInvocationParserRuleCall_0_1_0()); }
	ruleFeatureInvocation{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getFeatureInvocationFeatureInvocationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__SequenceOperationOrReductionOrExpansionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getSequenceOperationOrReductionOrExpansionSequenceOperationOrReductionOrExpansionParserRuleCall_1_0()); }
	ruleSequenceOperationOrReductionOrExpansion{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getSequenceOperationOrReductionOrExpansionSequenceOperationOrReductionOrExpansionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature_Or_SequenceOperationOrReductionOrExpansion_Or_Index__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getIndexIndexParserRuleCall_2_0()); }
	ruleIndex{ after(grammarAccess.getFeature_Or_SequenceOperationOrReductionOrExpansion_Or_IndexAccess().getIndexIndexParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__ExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getExpressionPRIMITIVE_LITERALParserRuleCall_0()); }
	rulePRIMITIVE_LITERAL{ after(grammarAccess.getLiteralExpressionAccess().getExpressionPRIMITIVE_LITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrPrimaryExpression__PotentiallyAmbiguousQualifiedNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrPrimaryExpressionAccess().getPotentiallyAmbiguousQualifiedNameQualifiedNameWithoutBindingParserRuleCall_0_0()); }
	ruleQualifiedNameWithoutBinding{ after(grammarAccess.getNameOrPrimaryExpressionAccess().getPotentiallyAmbiguousQualifiedNameQualifiedNameWithoutBindingParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrPrimaryExpression__NameToPrimaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrPrimaryExpressionAccess().getNameToPrimaryExpressionNameToPrimaryExpressionParserRuleCall_1_0()); }
	ruleNameToPrimaryExpression{ after(grammarAccess.getNameOrPrimaryExpressionAccess().getNameToPrimaryExpressionNameToPrimaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__TupleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
	ruleTuple{ after(grammarAccess.getThisExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getFeatureAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__NamedTupleExpressionListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getNamedTupleExpressionListNamedTupleExpressionListParserRuleCall_2_0_0()); }
	ruleNamedTupleExpressionList{ after(grammarAccess.getTupleAccess().getNamedTupleExpressionListNamedTupleExpressionListParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__PositionalTupleExpressionListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_1_0()); }
	rulePositionalTupleExpressionList{ after(grammarAccess.getTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionListCompletion__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPositionalTupleExpressionListCompletionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__NamedExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_0_0()); }
	ruleNamedExpression{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__NamedExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_1_1_0()); }
	ruleNamedExpression{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getNamedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__TupleAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorInvocationAccess().getTupleTupleParserRuleCall_0()); }
	ruleTuple{ after(grammarAccess.getBehaviorInvocationAccess().getTupleTupleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureInvocation__TupleAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureInvocationAccess().getTupleTupleParserRuleCall_0()); }
	ruleTuple{ after(grammarAccess.getFeatureInvocationAccess().getTupleTupleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__QualifiedNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSuperInvocationExpressionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__TupleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
	ruleTuple{ after(grammarAccess.getSuperInvocationExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__QualifiedNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__SequenceConstructionExpressionCompletionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionCompletionSequenceConstructionExpressionCompletionParserRuleCall_2_0_0()); }
	ruleSequenceConstructionExpressionCompletion{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionCompletionSequenceConstructionExpressionCompletionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__TupleAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleTupleParserRuleCall_2_1_0()); }
	ruleTuple{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleTupleParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationCompletion__LinkOperationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationLinkOperationEnumRuleCall_0_0()); }
	ruleLinkOperation{ after(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationLinkOperationEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationCompletion__LinkOperationTupleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationTupleLinkOperationTupleParserRuleCall_1_0()); }
	ruleLinkOperationTuple{ after(grammarAccess.getLinkOperationCompletionAccess().getLinkOperationTupleLinkOperationTupleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__NameAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getNameNameParserRuleCall_2_0_0_0()); }
	ruleName{ after(grammarAccess.getLinkOperationTupleAccess().getNameNameParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__IndexAssignment_2_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexIndexParserRuleCall_2_0_1_0_0_0()); }
	ruleIndex{ after(grammarAccess.getLinkOperationTupleAccess().getIndexIndexParserRuleCall_2_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__IndexNamedExpressionListCompletionAssignment_2_0_1_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexNamedExpressionListCompletionIndexedNamedExpressionListCompletionParserRuleCall_2_0_1_0_1_0_1_0()); }
	ruleIndexedNamedExpressionListCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getIndexNamedExpressionListCompletionIndexedNamedExpressionListCompletionParserRuleCall_2_0_1_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__PrimaryToExpressionCompletionAssignment_2_0_1_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPrimaryToExpressionCompletionPrimaryToExpressionCompletionParserRuleCall_2_0_1_0_1_1_0_0()); }
	rulePrimaryToExpressionCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getPrimaryToExpressionCompletionPrimaryToExpressionCompletionParserRuleCall_2_0_1_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__PositionalTupleExpressionListCompletionAssignment_2_0_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionPositionalTupleExpressionListCompletionParserRuleCall_2_0_1_0_1_1_1_0()); }
	rulePositionalTupleExpressionListCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionPositionalTupleExpressionListCompletionParserRuleCall_2_0_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__IndexedNamedExpressionListCompletionAssignment_2_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedExpressionListCompletionIndexedNamedExpressionListCompletionParserRuleCall_2_0_1_1_1_0()); }
	ruleIndexedNamedExpressionListCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedExpressionListCompletionIndexedNamedExpressionListCompletionParserRuleCall_2_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__PositionalTupleExpressionListCompletionAssignment_2_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionPositionalTupleExpressionListCompletionParserRuleCall_2_0_1_2_0()); }
	rulePositionalTupleExpressionListCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListCompletionPositionalTupleExpressionListCompletionParserRuleCall_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__NameToExpressionCompletionAssignment_2_0_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_2_0_1_3_0_0()); }
	ruleNameToExpressionCompletion{ after(grammarAccess.getLinkOperationTupleAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_2_0_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__PositionalTupleExpressionListAssignment_2_0_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_0_1_3_2_0()); }
	rulePositionalTupleExpressionList{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_0_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__PositionalTupleExpressionListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_1_0()); }
	rulePositionalTupleExpressionList{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListPositionalTupleExpressionListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpressionListCompletion__IndexedNamedExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getIndexedNamedExpressionIndexedNamedExpressionParserRuleCall_1_1_0()); }
	ruleIndexedNamedExpression{ after(grammarAccess.getIndexedNamedExpressionListCompletionAccess().getIndexedNamedExpressionIndexedNamedExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getIndexedNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__IndexAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getIndexIndexParserRuleCall_1_0()); }
	ruleIndex{ after(grammarAccess.getIndexedNamedExpressionAccess().getIndexIndexParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIndexedNamedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAnyExpression__SequenceConstructionExpressionCompletionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAnyExpressionAccess().getSequenceConstructionExpressionCompletionSequenceConstructionExpressionCompletionParserRuleCall_1_0_1_0()); }
	ruleSequenceConstructionExpressionCompletion{ after(grammarAccess.getSequenceAnyExpressionAccess().getSequenceConstructionExpressionCompletionSequenceConstructionExpressionCompletionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__MultiplicityIndicatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getMultiplicityIndicatorMultiplicityIndicatorParserRuleCall_1_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getMultiplicityIndicatorMultiplicityIndicatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpressionCompletion__SequenceElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceElementsSequenceElementsParserRuleCall_3_0()); }
	ruleSequenceElements{ after(grammarAccess.getSequenceConstructionExpressionCompletionAccess().getSequenceElementsSequenceElementsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Expression1Assignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getExpression1ExpressionParserRuleCall_0_0_0()); }
	ruleExpression{ after(grammarAccess.getSequenceElementsAccess().getExpression1ExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Expression2Assignment_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getExpression2ExpressionParserRuleCall_0_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getSequenceElementsAccess().getExpression2ExpressionParserRuleCall_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__SequenceElementListCompletionAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionSequenceElementListCompletionParserRuleCall_0_1_1_0()); }
	ruleSequenceElementListCompletion{ after(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionSequenceElementListCompletionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__SequenceInitializationExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceInitializationExpressionSequenceInitializationExpressionParserRuleCall_1_0_0()); }
	ruleSequenceInitializationExpression{ after(grammarAccess.getSequenceElementsAccess().getSequenceInitializationExpressionSequenceInitializationExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__SequenceElementListCompletionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionSequenceElementListCompletionParserRuleCall_1_1_0()); }
	ruleSequenceElementListCompletion{ after(grammarAccess.getSequenceElementsAccess().getSequenceElementListCompletionSequenceElementListCompletionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementListCompletion__SequenceElementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementSequenceElementParserRuleCall_1_1_0()); }
	ruleSequenceElement{ after(grammarAccess.getSequenceElementListCompletionAccess().getSequenceElementSequenceElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getSequenceElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElement__SequenceInitializationExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionSequenceInitializationExpressionParserRuleCall_1_0()); }
	ruleSequenceInitializationExpression{ after(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionSequenceInitializationExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__IsNewAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewNewKeyword_0_0()); }
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewNewKeyword_0_0()); }

	'new' 

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewNewKeyword_0_0()); }
)

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getIsNewNewKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__SequenceElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getSequenceElementsSequenceElementsParserRuleCall_2_0()); }
	ruleSequenceElements{ after(grammarAccess.getSequenceInitializationExpressionAccess().getSequenceElementsSequenceElementsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__QualifiedNameAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameQualifiedNameParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__TupleAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTupleTupleParserRuleCall_1_0_1_0()); }
	ruleTuple{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTupleTupleParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__IsReduceAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceReduceKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceReduceKeyword_1_1_0_0()); }

	'reduce' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceReduceKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsReduceReduceKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__IsOrderedAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }

	'ordered' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__QualifiedNameAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameQualifiedNameWithoutBindingParserRuleCall_1_1_2_0()); }
	ruleQualifiedNameWithoutBinding{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getQualifiedNameQualifiedNameWithoutBindingParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__TemplateBindingAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTemplateBindingTemplateBindingParserRuleCall_1_1_3_0()); }
	ruleTemplateBinding{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getTemplateBindingTemplateBindingParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__IdAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIdIDTerminalRuleCall_1_2_0_0()); }
	RULE_ID{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getIdIDTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__NameAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getNameNameParserRuleCall_1_2_1_0()); }
	ruleName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getNameNameParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansion__ExpressionAssignment_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getExpressionExpressionParserRuleCall_1_2_3_0()); }
	ruleExpression{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionAccess().getExpressionExpressionParserRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__PrimaryExpressionCompletionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPrimaryExpressionCompletionPrimaryExpressionCompletionParserRuleCall_0_0_0()); }
	rulePrimaryExpressionCompletion{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPrimaryExpressionCompletionPrimaryExpressionCompletionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__PostfixOperationAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationPostfixOperationParserRuleCall_0_1_0()); }
	rulePostfixOperation{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationPostfixOperationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionCompletion__PostfixOperationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationPostfixOperationParserRuleCall_1_0()); }
	rulePostfixOperation{ after(grammarAccess.getPostfixExpressionCompletionAccess().getPostfixOperationPostfixOperationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__OperatorAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getOperatorAffixOperatorEnumRuleCall_0()); }
	ruleAffixOperator{ after(grammarAccess.getPostfixOperationAccess().getOperatorAffixOperatorEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperatorAffixOperatorEnumRuleCall_0_0()); }
	ruleAffixOperator{ after(grammarAccess.getPrefixExpressionAccess().getOperatorAffixOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__PrimaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getPrimaryExpressionPrimaryExpressionParserRuleCall_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getPrefixExpressionAccess().getPrimaryExpressionPrimaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__NonNamePostfixOrCastExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getNonNamePostfixOrCastExpressionNonNamePostfixOrCastExpressionParserRuleCall_0_0()); }
	ruleNonNamePostfixOrCastExpression{ after(grammarAccess.getPostfixOrCastExpressionAccess().getNonNamePostfixOrCastExpressionNonNamePostfixOrCastExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__NameOrPrimaryExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getNameOrPrimaryExpressionNameOrPrimaryExpressionParserRuleCall_1_0_0()); }
	ruleNameOrPrimaryExpression{ after(grammarAccess.getPostfixOrCastExpressionAccess().getNameOrPrimaryExpressionNameOrPrimaryExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__PostFixExpressionCompletionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getPostFixExpressionCompletionPostfixExpressionCompletionParserRuleCall_1_1_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getPostfixOrCastExpressionAccess().getPostFixExpressionCompletionPostfixExpressionCompletionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__AnyAssignment_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAnyKeyword_0_1_0_0_0()); }
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAnyKeyword_0_1_0_0_0()); }

	'any' 

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAnyKeyword_0_1_0_0_0()); }
)

{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getAnyAnyKeyword_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__CastCompletionAssignment_0_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionCastCompletionParserRuleCall_0_1_0_2_0()); }
	ruleCastCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionCastCompletionParserRuleCall_0_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__PotentiallyAmbiguousQualifiedNameAssignment_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPotentiallyAmbiguousQualifiedNameQualifiedNameWithoutBindingParserRuleCall_0_1_1_0_0()); }
	ruleQualifiedNameWithoutBinding{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPotentiallyAmbiguousQualifiedNameQualifiedNameWithoutBindingParserRuleCall_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__CastCompletionAssignment_0_1_1_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionCastCompletionParserRuleCall_0_1_1_1_0_1_0_0()); }
	ruleCastCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getCastCompletionCastCompletionParserRuleCall_0_1_1_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__PostifixExpressionCompletionAssignment_0_1_1_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostifixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_1_1_0_1_1_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostifixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_1_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__NameToExpressionCompletionAssignment_0_1_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_0_1_1_1_1_0_0()); }
	ruleNameToExpressionCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_0_1_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_0_1_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_1_1_1_2_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__NonNameExpressionAssignment_0_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNonNameExpressionNonNameExpressionParserRuleCall_0_1_2_0_0()); }
	ruleNonNameExpression{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getNonNameExpressionNonNameExpressionParserRuleCall_0_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_0_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_2_2_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_0_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__BaseExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getBaseExpressionBaseExpressionParserRuleCall_1_0_0()); }
	ruleBaseExpression{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getBaseExpressionBaseExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonNamePostfixOrCastExpression__PostfixExpressionCompletionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_1_1_0()); }
	rulePostfixExpressionCompletion{ after(grammarAccess.getNonNamePostfixOrCastExpressionAccess().getPostfixExpressionCompletionPostfixExpressionCompletionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanNegationExpression__UnaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanNegationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getBooleanNegationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringComplementExpression__UnaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringComplementExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getBitStringComplementExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperatorNumericUnaryOperatorEnumRuleCall_0_0()); }
	ruleNumericUnaryOperator{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperatorNumericUnaryOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__UnaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getNumericUnaryExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__UnaryExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getIsolationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__MultiplicativeExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionCompletionMultiplicativeExpressionCompletionParserRuleCall_1_0()); }
	ruleMultiplicativeExpressionCompletion{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionCompletionMultiplicativeExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0()); }
	ruleMultiplicativeOperator{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionCompletion__UnaryExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionCompletionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionCompletionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getAdditiveExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__AdditiveExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionCompletionAdditiveExpressionCompletionParserRuleCall_1_0()); }
	ruleAdditiveExpressionCompletion{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionCompletionAdditiveExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__MultiplicativeExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionCompletionMultiplicativeExpressionCompletionParserRuleCall_0_0()); }
	ruleMultiplicativeExpressionCompletion{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionCompletionMultiplicativeExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0()); }
	ruleAdditiveOperator{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionCompletion__MultiplicativeExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionCompletionAccess().getMultiplicativeExpressionMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getShiftExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__ShiftExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getShiftExpressionCompletionShiftExpressionCompletionParserRuleCall_1_0()); }
	ruleShiftExpressionCompletion{ after(grammarAccess.getShiftExpressionAccess().getShiftExpressionCompletionShiftExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__AdditiveExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionCompletionAdditiveExpressionCompletionParserRuleCall_0_0()); }
	ruleAdditiveExpressionCompletion{ after(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionCompletionAdditiveExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0()); }
	ruleShiftOperator{ after(grammarAccess.getShiftExpressionCompletionAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpressionCompletion__AdditiveExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getShiftExpressionCompletionAccess().getAdditiveExpressionAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RelationalExpressionCompletion__ShiftExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionCompletionShiftExpressionCompletionParserRuleCall_0_0()); }
	ruleShiftExpressionCompletion{ after(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionCompletionShiftExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__RelationalOperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getRelationalOperatorRelationalOperatorEnumRuleCall_1_0_0()); }
	ruleRelationalOperator{ after(grammarAccess.getRelationalExpressionCompletionAccess().getRelationalOperatorRelationalOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionCompletion__ShiftExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionShiftExpressionParserRuleCall_1_1_0()); }
	ruleShiftExpression{ after(grammarAccess.getRelationalExpressionCompletionAccess().getShiftExpressionShiftExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getClassificationExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__ClassificationExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_1_0()); }
	ruleClassificationExpressionCompletion{ after(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__RelationalExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getRelationalExpressionCompletionRelationalExpressionCompletionParserRuleCall_0_0()); }
	ruleRelationalExpressionCompletion{ after(grammarAccess.getClassificationExpressionCompletionAccess().getRelationalExpressionCompletionRelationalExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getOperatorClassificationOperatorEnumRuleCall_1_0_0()); }
	ruleClassificationOperator{ after(grammarAccess.getClassificationExpressionCompletionAccess().getOperatorClassificationOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpressionCompletion__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionCompletionAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getClassificationExpressionCompletionAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getEqualityExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ClassificationExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_1_0()); }
	ruleClassificationExpressionCompletion{ after(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__ClassificationExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_0_0()); }
	ruleClassificationExpressionCompletion{ after(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionCompletionClassificationExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0()); }
	ruleEqualityOperator{ after(grammarAccess.getEqualityExpressionCompletionAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionCompletion__ClassificationExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionClassificationExpressionParserRuleCall_1_1_0()); }
	ruleClassificationExpression{ after(grammarAccess.getEqualityExpressionCompletionAccess().getClassificationExpressionClassificationExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getAndExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__AndExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAndExpressionCompletionAndExpressionCompletionParserRuleCall_1_0()); }
	ruleAndExpressionCompletion{ after(grammarAccess.getAndExpressionAccess().getAndExpressionCompletionAndExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__EqualityExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionCompletionEqualityExpressionCompletionParserRuleCall_0_0()); }
	ruleEqualityExpressionCompletion{ after(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionCompletionEqualityExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionCompletion__EqualityExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionCompletionAccess().getEqualityExpressionEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getExclusiveOrExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__ExclusiveOrExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionCompletionExclusiveOrExpressionCompletionParserRuleCall_1_0()); }
	ruleExclusiveOrExpressionCompletion{ after(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionCompletionExclusiveOrExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__AndExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionCompletionAndExpressionCompletionParserRuleCall_0_0()); }
	ruleAndExpressionCompletion{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionCompletionAndExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpressionCompletion__AndExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getExclusiveOrExpressionCompletionAccess().getAndExpressionAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getInclusiveOrExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__InclusiveOrExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionCompletionInclusiveOrExpressionCompletionParserRuleCall_1_0()); }
	ruleInclusiveOrExpressionCompletion{ after(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionCompletionInclusiveOrExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__ExclusiveOrExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionCompletionExclusiveOrExpressionCompletionParserRuleCall_0_0()); }
	ruleExclusiveOrExpressionCompletion{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionCompletionExclusiveOrExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpressionCompletion__ExclusiveOrExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionExclusiveOrExpressionParserRuleCall_1_1_0()); }
	ruleExclusiveOrExpression{ after(grammarAccess.getInclusiveOrExpressionCompletionAccess().getExclusiveOrExpressionExclusiveOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getConditionalAndExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__ConditionalAndExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionCompletionConditionalAndExpressionCompletionParserRuleCall_1_0()); }
	ruleConditionalAndExpressionCompletion{ after(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionCompletionConditionalAndExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__InclusiveOrExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionCompletionInclusiveOrExpressionCompletionParserRuleCall_0_0()); }
	ruleInclusiveOrExpressionCompletion{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionCompletionInclusiveOrExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpressionCompletion__InclusiveOrExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionInclusiveOrExpressionParserRuleCall_1_1_0()); }
	ruleInclusiveOrExpression{ after(grammarAccess.getConditionalAndExpressionCompletionAccess().getInclusiveOrExpressionInclusiveOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ConditionalOrExpressionCompletion__ConditionalAndExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionCompletionConditionalAndExpressionCompletionParserRuleCall_0_0()); }
	ruleConditionalAndExpressionCompletion{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionCompletionConditionalAndExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpressionCompletion__ConditionalAndExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionConditionalAndExpressionParserRuleCall_1_1_0()); }
	ruleConditionalAndExpression{ after(grammarAccess.getConditionalOrExpressionCompletionAccess().getConditionalAndExpressionConditionalAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__UnaryExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getConditionalExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ConditionalExpressionCompletionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionCompletionConditionalExpressionCompletionParserRuleCall_1_0()); }
	ruleConditionalExpressionCompletion{ after(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionCompletionConditionalExpressionCompletionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__ConditionalOrExpressionCompletionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalOrExpressionCompletionConditionalOrExpressionCompletionParserRuleCall_0_0()); }
	ruleConditionalOrExpressionCompletion{ after(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalOrExpressionCompletionConditionalOrExpressionCompletionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getConditionalExpressionCompletionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpressionCompletion__ConditionalExpressionAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_3_0()); }
	ruleConditionalExpression{ after(grammarAccess.getConditionalExpressionCompletionAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionCompletion__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionCompletionAccess().getOperatorAssignmentOperatorEnumRuleCall_0_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getAssignmentExpressionCompletionAccess().getOperatorAssignmentOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionCompletion__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionCompletionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentExpressionCompletionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__DocumentStatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementSequenceAccess().getDocumentStatementDocumentedStatementParserRuleCall_1_0()); }
	ruleDocumentedStatement{ after(grammarAccess.getStatementSequenceAccess().getDocumentStatementDocumentedStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentedStatement__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentedStatementAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getDocumentedStatementAccess().getCommentML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentedStatement__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentedStatementAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDocumentedStatementAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementSequenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementSequenceStatementSequenceParserRuleCall_1_0()); }
	ruleStatementSequence{ after(grammarAccess.getBlockAccess().getStatementSequenceStatementSequenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getAnnotationsAnnotationsParserRuleCall_1_0()); }
	ruleAnnotations{ after(grammarAccess.getAnnotatedStatementAccess().getAnnotationsAnnotationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getAnnotatedStatementAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__AnnotationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_1_1_0()); }
	ruleAnnotation{ after(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameListNameListParserRuleCall_1_1_0()); }
	ruleNameList{ after(grammarAccess.getAnnotationAccess().getNameListNameListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getNameListAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameList__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameListAccess().getNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getNameListAccess().getNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInLineStatementAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getNameNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getInLineStatementAccess().getNameNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__BlockAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getBlockBlockParserRuleCall_0()); }
	ruleBlock{ after(grammarAccess.getBlockStatementAccess().getBlockBlockParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__PotentiallyAmbiguousNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getPotentiallyAmbiguousNameQualifiedNameParserRuleCall_0_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getPotentiallyAmbiguousNameQualifiedNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__MultiplicaityIndicatorAssignment_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getMultiplicaityIndicatorMultiplicityIndicatorParserRuleCall_0_1_0_0_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getMultiplicaityIndicatorMultiplicityIndicatorParserRuleCall_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__NameAssignment_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameNameParserRuleCall_0_1_0_1_0()); }
	ruleName{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameNameParserRuleCall_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__LocalNameDeclarationCompletionAssignment_0_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getLocalNameDeclarationCompletionLocalNameDeclarationStatementCompletionParserRuleCall_0_1_0_2_0()); }
	ruleLocalNameDeclarationStatementCompletion{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getLocalNameDeclarationCompletionLocalNameDeclarationStatementCompletionParserRuleCall_0_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__NameToExpressionCompletionAssignment_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_0_1_1_0_0()); }
	ruleNameToExpressionCompletion{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNameToExpressionCompletionNameToExpressionCompletionParserRuleCall_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationOrExpressionStatement__NonNameExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNonNameExpressionNonNameExpressionParserRuleCall_1_0_0()); }
	ruleNonNameExpression{ after(grammarAccess.getLocalNameDeclarationOrExpressionStatementAccess().getNonNameExpressionNonNameExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__TypeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameTypeNameParserRuleCall_3_0()); }
	ruleTypeName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameTypeNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__MultiplicityIndicatorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getMultiplicityIndicatorMultiplicityIndicatorParserRuleCall_4_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getMultiplicityIndicatorMultiplicityIndicatorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__LocalNameDeclarationCompletionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getLocalNameDeclarationCompletionLocalNameDeclarationStatementCompletionParserRuleCall_5_0()); }
	ruleLocalNameDeclarationStatementCompletion{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getLocalNameDeclarationCompletionLocalNameDeclarationStatementCompletionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatementCompletion__InitializationExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getInitializationExpressionInitializationExpressionParserRuleCall_1_0()); }
	ruleInitializationExpression{ after(grammarAccess.getLocalNameDeclarationStatementCompletionAccess().getInitializationExpressionInitializationExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__TupleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
	ruleTuple{ after(grammarAccess.getInstanceInitializationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__SequentialClausesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getSequentialClausesSequentialClausesParserRuleCall_1_0()); }
	ruleSequentialClauses{ after(grammarAccess.getIfStatementAccess().getSequentialClausesSequentialClausesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__FinalClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getFinalClauseFinalClauseParserRuleCall_2_0()); }
	ruleFinalClause{ after(grammarAccess.getIfStatementAccess().getFinalClauseFinalClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__ConcurrentClausesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getConcurrentClausesConcurrentClausesParserRuleCall_0_0()); }
	ruleConcurrentClauses{ after(grammarAccess.getSequentialClausesAccess().getConcurrentClausesConcurrentClausesParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialClauses__ConcurrentClausesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequentialClausesAccess().getConcurrentClausesConcurrentClausesParserRuleCall_1_2_0()); }
	ruleConcurrentClauses{ after(grammarAccess.getSequentialClausesAccess().getConcurrentClausesConcurrentClausesParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__NonFinalClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseNonFinalClauseParserRuleCall_0_0()); }
	ruleNonFinalClause{ after(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseNonFinalClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__NonFinalClauseAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseNonFinalClauseParserRuleCall_1_2_0()); }
	ruleNonFinalClause{ after(grammarAccess.getConcurrentClausesAccess().getNonFinalClauseNonFinalClauseParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getNonFinalClauseAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getNonFinalClauseAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FinalClause__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalClauseAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getFinalClauseAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__SwitchClauseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchClauseSwitchClauseParserRuleCall_5_0()); }
	ruleSwitchClause{ after(grammarAccess.getSwitchStatementAccess().getSwitchClauseSwitchClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__DefaultClauseAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultClauseSwitchDefaultClauseParserRuleCall_6_0()); }
	ruleSwitchDefaultClause{ after(grammarAccess.getSwitchStatementAccess().getDefaultClauseSwitchDefaultClauseParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__SwitchCaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getSwitchCaseSwitchCaseParserRuleCall_0_0()); }
	ruleSwitchCase{ after(grammarAccess.getSwitchClauseAccess().getSwitchCaseSwitchCaseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__SwitchCaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getSwitchCaseSwitchCaseParserRuleCall_1_0()); }
	ruleSwitchCase{ after(grammarAccess.getSwitchClauseAccess().getSwitchCaseSwitchCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__StatementSequenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getStatementSequenceNonEmptyStatementSequenceParserRuleCall_2_0()); }
	ruleNonEmptyStatementSequence{ after(grammarAccess.getSwitchClauseAccess().getStatementSequenceNonEmptyStatementSequenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitchCaseAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__StatementSequenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getStatementSequenceNonEmptyStatementSequenceParserRuleCall_2_0()); }
	ruleNonEmptyStatementSequence{ after(grammarAccess.getSwitchDefaultClauseAccess().getStatementSequenceNonEmptyStatementSequenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonEmptyStatementSequence__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementDocumentedStatementParserRuleCall_0()); }
	ruleDocumentedStatement{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementDocumentedStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBlockBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getWhileStatementAccess().getBlockBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getDoStatementAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForControlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForControlForControlParserRuleCall_2_0()); }
	ruleForControl{ after(grammarAccess.getForStatementAccess().getForControlForControlParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBlockBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getForStatementAccess().getBlockBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__LoopVariableDefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getLoopVariableDefinitionLoopVariableDefinitionParserRuleCall_0_0()); }
	ruleLoopVariableDefinition{ after(grammarAccess.getForControlAccess().getLoopVariableDefinitionLoopVariableDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__LoopVariableDefinitionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getLoopVariableDefinitionLoopVariableDefinitionParserRuleCall_1_1_0()); }
	ruleLoopVariableDefinition{ after(grammarAccess.getForControlAccess().getLoopVariableDefinitionLoopVariableDefinitionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getNameNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getLoopVariableDefinitionAccess().getNameNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression1Assignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_0_2_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression2Assignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression2ExpressionParserRuleCall_0_3_1_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression2ExpressionParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__TypeNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getLoopVariableDefinitionAccess().getNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression3Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression3ExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression3ExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__AcceptClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptClauseAcceptClauseParserRuleCall_0_0()); }
	ruleAcceptClause{ after(grammarAccess.getAcceptStatementAccess().getAcceptClauseAcceptClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__SimpleCompletionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getSimpleCompletionSimpleAcceptStatementCompletionParserRuleCall_1_0_0()); }
	ruleSimpleAcceptStatementCompletion{ after(grammarAccess.getAcceptStatementAccess().getSimpleCompletionSimpleAcceptStatementCompletionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__CompoundCompletionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getCompoundCompletionCompoundAcceptStatementCompletionParserRuleCall_1_1_0()); }
	ruleCompoundAcceptStatementCompletion{ after(grammarAccess.getAcceptStatementAccess().getCompoundCompletionCompoundAcceptStatementCompletionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__BlockAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getBlockBlockParserRuleCall_0_0()); }
	ruleBlock{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getBlockBlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAcceptStatementCompletion__AcceptBlockAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAcceptStatementCompletionAccess().getAcceptBlockAcceptBlockParserRuleCall_1_1_0()); }
	ruleAcceptBlock{ after(grammarAccess.getCompoundAcceptStatementCompletionAccess().getAcceptBlockAcceptBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__AcceptClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getAcceptClauseAcceptClauseParserRuleCall_0_0()); }
	ruleAcceptClause{ after(grammarAccess.getAcceptBlockAccess().getAcceptClauseAcceptClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getAcceptBlockAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getNameNameParserRuleCall_2_0_0()); }
	ruleName{ after(grammarAccess.getAcceptClauseAccess().getNameNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__QualifiedNameListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_3_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getAcceptClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getClassifyStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__ClassificationClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getClassificationClauseClassificationClauseParserRuleCall_2_0()); }
	ruleClassificationClause{ after(grammarAccess.getClassifyStatementAccess().getClassificationClauseClassificationClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__ClassificationFromClauseAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationFromClauseClassificationFromClauseParserRuleCall_0_0_0()); }
	ruleClassificationFromClause{ after(grammarAccess.getClassificationClauseAccess().getClassificationFromClauseClassificationFromClauseParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__ClassificationToClauseAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationToClauseClassificationToClauseParserRuleCall_0_1_0()); }
	ruleClassificationToClause{ after(grammarAccess.getClassificationClauseAccess().getClassificationToClauseClassificationToClauseParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__ReclassifyAllClauseAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getReclassifyAllClauseReclassifyAllClauseParserRuleCall_1_0_0()); }
	ruleReclassifyAllClause{ after(grammarAccess.getClassificationClauseAccess().getReclassifyAllClauseReclassifyAllClauseParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationClause__ClassificationToClauseAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationClauseAccess().getClassificationToClauseClassificationToClauseParserRuleCall_1_1_0()); }
	ruleClassificationToClause{ after(grammarAccess.getClassificationClauseAccess().getClassificationToClauseClassificationToClauseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationFromClause__QualifiedNameListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationToClause__QualifiedNameListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListQualifiedNameListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__QualifiedNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getQualifiedNameListAccess().getQualifiedNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__QualifiedNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getQualifiedNameListAccess().getQualifiedNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN_VALUE : ('true'|'false');

RULE_INTEGER_VALUE : (('0'|'1'..'9' ('_'? '0'..'9')*)|('0b'|'0B') '0'..'1' ('_'? '0'..'1')*|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('_'? ('0'..'9'|'a'..'f'|'A'..'F'))*|'0' '_'? '0'..'7' ('_'? '0'..'7')*);

RULE_ID : (('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*|'\'' ( options {greedy=false;} : . )*'\'');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


